// FlexStage.idl : IDL source for PlateChanger.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (FlexStage.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
import "..\Common\Connection.h";
import "..\Common\Config.h";
import "..\Common\GUIdefs.h";
import "..\Common\AsyncStageDefs.h";
import "..\Common\id.h";
	[
		object,
		uuid(C022EEAD-748A-11D3-A47B-E89C0BCE9720),
	
		helpstring("ISySalObject Interface"),
		pointer_default(unique)
	]
	interface ISySalObject : IUnknown
	{
		[helpstring("method SetName")] HRESULT SetName(ConnectionName name);
		[helpstring("method GetName")] HRESULT GetName(ConnectionName name);
		[helpstring("method SetConfig")] HRESULT SetConfig(SySalConfig *pConfig);
		[helpstring("method GetConfig")] HRESULT GetConfig(SySalConfig *pConfig);
		[helpstring("method EditConfig")] HRESULT EditConfig(SySalConfig *pConfig, HSySalHANDLE hWnd);
		[helpstring("method EnableMonitor")] HRESULT EnableMonitor(boolean bEnable);
		[helpstring("method GetNumberOfConnections")] HRESULT GetNumberOfConnections(int *pNumber);
		[helpstring("method SetConnection")] HRESULT SetConnection(int n, SySalConnection connection);
		[helpstring("method GetConnection")] HRESULT GetConnection(int n, SySalConnection *pConnection);
		[helpstring("method GetIcon")] HRESULT GetIcon(int n, HSySalHICON *pHICON);
		[helpstring("method GetClassName")] HRESULT GetClassName(ConnectionName name);
		[helpstring("method SyncExec")] HRESULT SyncExec();
		[helpstring("method AsyncExec")] HRESULT AsyncExec(HSySalHANDLE HNotifyStatusChangeEvent);
		[helpstring("method AsyncCheckStatus")] HRESULT AsyncCheckStatus(long *pStatus);
		[helpstring("method AsyncWait")] HRESULT AsyncWait();
		[helpstring("method AsyncPause")] HRESULT AsyncPause();
		[helpstring("method AsyncStop")] HRESULT AsyncStop();
		[helpstring("method AsyncResume")] HRESULT AsyncResume();
		[helpstring("method IsReady")] HRESULT IsReady(long *pWrongConn, long *pRetCode);
	};
	[
		object,
		uuid(11c61d6e-34b8-4562-b7f5-d17ff64d856b),
	
		helpstring("IPlateChanger Interface"),
		pointer_default(unique)
	]
	interface IPlateChanger : IUnknown
	{
		[helpstring("method LoadPlate")] HRESULT LoadPlate(Identifier id, BYTE* pData);
		[helpstring("method UnloadPlate")] HRESULT UnloadPlate();
		[helpstring("method EnableManualControl")] HRESULT EnableManualControl(boolean bEnable);
		[helpstring("method IsManualControlEnabled")] HRESULT IsManualControlEnabled(boolean *pbEnable);
//		[helpstring("method SetStage")] HRESULT SetStage(long *pSt);
	};


[
	uuid(17db0e83-2ed1-4d98-b36d-b00ae02545fb),
	version(1.0),
	helpstring("PlateChanger 1.0 Type Library")
]
library PLATECHANGERLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(25e7bc2b-b7a1-4a42-a687-5bb815a31adf),
		helpstring("PlateChanger Class")
	]
	coclass PlateChanger
	{
		[default] interface ISySalObject;
		interface IPlateChanger;
	};
};

