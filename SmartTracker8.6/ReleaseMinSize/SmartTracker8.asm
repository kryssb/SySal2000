; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	d:\SySal2\SmartTracker8.6\SmartTracker8.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?ObjectMain@CComObjectRootBase@ATL@@SGX_N@Z	; ATL::CComObjectRootBase::ObjectMain
PUBLIC	?GetCategoryMap@CComObjectRootBase@ATL@@SAPBU_ATL_CATMAP_ENTRY@2@XZ ; ATL::CComObjectRootBase::GetCategoryMap
PUBLIC	?GetObjectDescription@?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@SGPBDXZ ; ATL::CComCoClass<CSmartTrackerClass,&CLSID_SmartTracker8>::GetObjectDescription
PUBLIC	?CreateInstance@?$CComCreator2@V?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@V?$CComFailCreator@$0?HPPLPOPA@@2@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ; ATL::CComCreator2<ATL::CComCreator<ATL::CComObject<CSmartTrackerClass> >,ATL::CComFailCreator<-2147221232> >::CreateInstance
PUBLIC	?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ; ATL::CComCreator<ATL::CComObjectCached<ATL::CComClassFactory> >::CreateInstance
PUBLIC	?UpdateRegistry@CSmartTrackerClass@@SGJH@Z	; CSmartTrackerClass::UpdateRegistry
PUBLIC	_IID_ISySalObject
PUBLIC	_IID_ISySalObject2
PUBLIC	_IID_ITracker
PUBLIC	_IID_ITracker2
PUBLIC	_IID_ITracker3
PUBLIC	_IID_ITracker4
PUBLIC	_LIBID_SMARTTRACKERLib
PUBLIC	_CLSID_SmartTracker8
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	?m_libid@CAtlModule@ATL@@2U_GUID@@A		; ATL::CAtlModule::m_libid
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CAtlModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CAtlModule::m_libid
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
_DATA	SEGMENT
_ObjectMap DD	FLAT:_CLSID_SmartTracker8
	DD	FLAT:?UpdateRegistry@CSmartTrackerClass@@SGJH@Z
	DD	FLAT:?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
	DD	FLAT:?CreateInstance@?$CComCreator2@V?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@V?$CComFailCreator@$0?HPPLPOPA@@2@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
	DD	00H
	DD	00H
	DD	FLAT:?GetObjectDescription@?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@SGPBDXZ
	DD	FLAT:?GetCategoryMap@CComObjectRootBase@ATL@@SAPBU_ATL_CATMAP_ENTRY@2@XZ
	DD	FLAT:?ObjectMain@CComObjectRootBase@ATL@@SGX_N@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	ORG $+4
_DATA	ENDS
CONST	SEGMENT
_IID_ISySalObject DD 0c022eeadH
	DW	0748aH
	DW	011d3H
	DB	0a4H
	DB	07bH
	DB	0e8H
	DB	09cH
	DB	0bH
	DB	0ceH
	DB	097H
	DB	020H
_IID_ISySalObject2 DD 068659af8H
	DW	012e6H
	DW	04ef9H
	DB	098H
	DB	077H
	DB	0a7H
	DB	0ddH
	DB	063H
	DB	0bfH
	DB	019H
	DB	050H
_IID_ITracker DD 0e416c46dH
	DW	07f68H
	DW	011d3H
	DB	0a4H
	DB	07cH
	DB	0faH
	DB	01eH
	DB	04aH
	DB	0faH
	DB	027H
	DB	021H
_IID_ITracker2 DD 067a71430H
	DW	0f2e4H
	DW	042aeH
	DB	089H
	DB	010H
	DB	028H
	DB	027H
	DB	09aH
	DB	076H
	DB	016H
	DB	0d6H
_IID_ITracker3 DD 07a9e779cH
	DW	0aa32H
	DW	04565H
	DB	08eH
	DB	069H
	DB	05fH
	DB	01bH
	DB	0c4H
	DB	0e3H
	DB	062H
	DB	0b7H
_IID_ITracker4 DD 04e5187bH
	DW	0933eH
	DW	04d9eH
	DB	09aH
	DB	07fH
	DB	0ebH
	DB	020H
	DB	084H
	DB	0dH
	DB	0a9H
	DB	0d0H
_LIBID_SMARTTRACKERLib DD 042331e8aH
	DW	056e9H
	DW	0402eH
	DB	0b7H
	DB	0c6H
	DB	01H
	DB	03fH
	DB	091H
	DB	06fH
	DB	049H
	DB	01eH
_CLSID_SmartTracker8 DD 099865850H
	DW	04e2dH
	DW	0446eH
	DB	0acH
	DB	0dcH
	DB	087H
	DB	016H
	DB	051H
	DB	030H
	DB	067H
	DB	09eH
CONST	ENDS
PUBLIC	_InlineIsEqualGUID
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\platformsdk\include\guiddef.h
;	COMDAT _InlineIsEqualGUID
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_InlineIsEqualGUID PROC					; COMDAT

; 152  :    return (
; 153  :       ((unsigned long *) &rguid1)[0] == ((unsigned long *) &rguid2)[0] &&
; 154  :       ((unsigned long *) &rguid1)[1] == ((unsigned long *) &rguid2)[1] &&
; 155  :       ((unsigned long *) &rguid1)[2] == ((unsigned long *) &rguid2)[2] &&
; 156  :       ((unsigned long *) &rguid1)[3] == ((unsigned long *) &rguid2)[3]);

	mov	eax, DWORD PTR _rguid1$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _rguid2$[esp-4]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@InlineIsEq
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@InlineIsEq
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@InlineIsEq
	mov	eax, DWORD PTR [eax+12]
	cmp	eax, DWORD PTR [ecx+12]
	jne	SHORT $LN3@InlineIsEq
	mov	eax, 1

; 157  : }

	ret	0
$LN3@InlineIsEq:

; 152  :    return (
; 153  :       ((unsigned long *) &rguid1)[0] == ((unsigned long *) &rguid2)[0] &&
; 154  :       ((unsigned long *) &rguid1)[1] == ((unsigned long *) &rguid2)[1] &&
; 155  :       ((unsigned long *) &rguid1)[2] == ((unsigned long *) &rguid2)[2] &&
; 156  :       ((unsigned long *) &rguid1)[3] == ((unsigned long *) &rguid2)[3]);

	xor	eax, eax

; 157  : }

	ret	0
_InlineIsEqualGUID ENDP
_TEXT	ENDS
PUBLIC	_IsEqualGUID
; Function compile flags: /Ogtpy
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID PROC					; COMDAT

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	mov	eax, DWORD PTR _rguid2$[esp-4]
	mov	ecx, DWORD PTR _rguid1$[esp-4]
	push	esi
	push	edi
	mov	esi, 16					; 00000010H
	npad	1
$LL4@IsEqualGUI:
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN5@IsEqualGUI
	sub	esi, 4
	add	eax, 4
	add	ecx, 4
	cmp	esi, 4
	jae	SHORT $LL4@IsEqualGUI
	test	esi, esi
	je	SHORT $LN6@IsEqualGUI
$LN5@IsEqualGUI:
	movzx	edx, BYTE PTR [ecx]
	movzx	edi, BYTE PTR [eax]
	sub	edx, edi
	jne	SHORT $LN7@IsEqualGUI
	sub	esi, 1
	add	eax, 1
	add	ecx, 1
	test	esi, esi
	je	SHORT $LN6@IsEqualGUI
	movzx	edx, BYTE PTR [ecx]
	movzx	edi, BYTE PTR [eax]
	sub	edx, edi
	jne	SHORT $LN7@IsEqualGUI
	sub	esi, 1
	add	eax, 1
	add	ecx, 1
	test	esi, esi
	je	SHORT $LN6@IsEqualGUI
	movzx	edx, BYTE PTR [ecx]
	movzx	edi, BYTE PTR [eax]
	sub	edx, edi
	jne	SHORT $LN7@IsEqualGUI
	sub	esi, 1
	add	eax, 1
	add	ecx, 1
	test	esi, esi
	je	SHORT $LN6@IsEqualGUI
	movzx	edx, BYTE PTR [ecx]
	movzx	eax, BYTE PTR [eax]
	sub	edx, eax
	je	SHORT $LN6@IsEqualGUI
$LN7@IsEqualGUI:
	test	edx, edx
	mov	eax, 1
	jg	SHORT $LN8@IsEqualGUI
	or	eax, -1
	xor	ecx, ecx
	test	eax, eax
	sete	cl
	pop	edi
	pop	esi
	mov	eax, ecx

; 162  : }

	ret	0
$LN6@IsEqualGUI:

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	xor	eax, eax
$LN8@IsEqualGUI:
	xor	ecx, ecx
	test	eax, eax
	sete	cl
	pop	edi
	pop	esi
	mov	eax, ecx

; 162  : }

	ret	0
_IsEqualGUID ENDP
_TEXT	ENDS
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
; Function compile flags: /Ogtpy
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	mov	eax, ecx
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	??0ITracker@@QAE@XZ				; ITracker::ITracker
; Function compile flags: /Ogtpy
;	COMDAT ??0ITracker@@QAE@XZ
_TEXT	SEGMENT
??0ITracker@@QAE@XZ PROC				; ITracker::ITracker, COMDAT
; _this$ = ecx
	mov	eax, ecx
	ret	0
??0ITracker@@QAE@XZ ENDP				; ITracker::ITracker
_TEXT	ENDS
PUBLIC	?GetThisMessageMap@CSmartTrackerApp@@KGPBUAFX_MSGMAP@@XZ ; CSmartTrackerApp::GetThisMessageMap
EXTRN	?GetThisMessageMap@CWinApp@@KGPBUAFX_MSGMAP@@XZ:PROC ; CWinApp::GetThisMessageMap
;	COMDAT ?_messageEntries@?1??GetThisMessageMap@CSmartTrackerApp@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
; File d:\sysal2\smarttracker8.6\smarttracker8.cpp
CONST	SEGMENT
?_messageEntries@?1??GetThisMessageMap@CSmartTrackerApp@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 00H ; `CSmartTrackerApp::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@?1??GetThisMessageMap@CSmartTrackerApp@@KGPBUAFX_MSGMAP@@XZ@4U3@B
CONST	SEGMENT
?messageMap@?1??GetThisMessageMap@CSmartTrackerApp@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CWinApp@@KGPBUAFX_MSGMAP@@XZ ; `CSmartTrackerApp::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CSmartTrackerApp@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?GetThisMessageMap@CSmartTrackerApp@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CSmartTrackerApp@@KGPBUAFX_MSGMAP@@XZ PROC ; CSmartTrackerApp::GetThisMessageMap, COMDAT

; 42   : 	//{{AFX_MSG_MAP(CSmartTrackerApp)
; 43   : 		// NOTE - the ClassWizard will add and remove mapping macros here.
; 44   : 		//    DO NOT EDIT what you see in these blocks of generated code!
; 45   : 	//}}AFX_MSG_MAP
; 46   : END_MESSAGE_MAP()

	mov	eax, OFFSET ?messageMap@?1??GetThisMessageMap@CSmartTrackerApp@@KGPBUAFX_MSGMAP@@XZ@4U3@B
	ret	0
?GetThisMessageMap@CSmartTrackerApp@@KGPBUAFX_MSGMAP@@XZ ENDP ; CSmartTrackerApp::GetThisMessageMap
_TEXT	ENDS
PUBLIC	??_7CSmartTrackerApp@@6B@			; CSmartTrackerApp::`vftable'
PUBLIC	??0CSmartTrackerApp@@QAE@XZ			; CSmartTrackerApp::CSmartTrackerApp
PUBLIC	??_R4CSmartTrackerApp@@6B@			; CSmartTrackerApp::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSmartTrackerApp@@@8			; CSmartTrackerApp `RTTI Type Descriptor'
PUBLIC	??_R3CSmartTrackerApp@@8			; CSmartTrackerApp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSmartTrackerApp@@8			; CSmartTrackerApp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSmartTrackerApp@@8		; CSmartTrackerApp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CWinApp@@8			; CWinApp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWinApp@@@8				; CWinApp `RTTI Type Descriptor'
PUBLIC	??_R3CWinApp@@8					; CWinApp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWinApp@@8					; CWinApp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWinThread@@8			; CWinThread::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWinThread@@@8				; CWinThread `RTTI Type Descriptor'
PUBLIC	??_R3CWinThread@@8				; CWinThread::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWinThread@@8				; CWinThread::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	?GetMessageMap@CSmartTrackerApp@@MBEPBUAFX_MSGMAP@@XZ ; CSmartTrackerApp::GetMessageMap
PUBLIC	?InitInstance@CSmartTrackerApp@@UAEHXZ		; CSmartTrackerApp::InitInstance
PUBLIC	?ExitInstance@CSmartTrackerApp@@UAEHXZ		; CSmartTrackerApp::ExitInstance
EXTRN	??0CWinApp@@QAE@PBD@Z:PROC			; CWinApp::CWinApp
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?GetRuntimeClass@CWinApp@@UBEPAUCRuntimeClass@@XZ:PROC ; CWinApp::GetRuntimeClass
EXTRN	??_ECSmartTrackerApp@@UAEPAXI@Z:PROC		; CSmartTrackerApp::`vector deleting destructor'
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CCmdTarget::OnCmdMsg
EXTRN	?OnFinalRelease@CCmdTarget@@UAEXXZ:PROC		; CCmdTarget::OnFinalRelease
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CCmdTarget::GetInterfaceMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?Run@CWinApp@@UAEHXZ:PROC			; CWinApp::Run
EXTRN	?PreTranslateMessage@CWinThread@@UAEHPAUtagMSG@@@Z:PROC ; CWinThread::PreTranslateMessage
EXTRN	?PumpMessage@CWinThread@@UAEHXZ:PROC		; CWinThread::PumpMessage
EXTRN	?OnIdle@CWinApp@@UAEHJ@Z:PROC			; CWinApp::OnIdle
EXTRN	?IsIdleMessage@CWinThread@@UAEHPAUtagMSG@@@Z:PROC ; CWinThread::IsIdleMessage
EXTRN	?ProcessWndProcException@CWinApp@@UAEJPAVCException@@PBUtagMSG@@@Z:PROC ; CWinApp::ProcessWndProcException
EXTRN	?ProcessMessageFilter@CWinThread@@UAEHHPAUtagMSG@@@Z:PROC ; CWinThread::ProcessMessageFilter
EXTRN	?GetMainWnd@CWinThread@@UAEPAVCWnd@@XZ:PROC	; CWinThread::GetMainWnd
EXTRN	?Delete@CWinThread@@UAEXXZ:PROC			; CWinThread::Delete
EXTRN	?InitLibId@CWinApp@@UAEXXZ:PROC			; CWinApp::InitLibId
EXTRN	?Register@CWinApp@@UAEHXZ:PROC			; CWinApp::Register
EXTRN	?Unregister@CWinApp@@UAEHXZ:PROC		; CWinApp::Unregister
EXTRN	?OpenDocumentFile@CWinApp@@UAEPAVCDocument@@PBD@Z:PROC ; CWinApp::OpenDocumentFile
EXTRN	?AddToRecentFileList@CWinApp@@UAEXPBD@Z:PROC	; CWinApp::AddToRecentFileList
EXTRN	?InitApplication@CWinApp@@UAEHXZ:PROC		; CWinApp::InitApplication
EXTRN	?SaveAllModified@CWinApp@@UAEHXZ:PROC		; CWinApp::SaveAllModified
EXTRN	?DoMessageBox@CWinApp@@UAEHPBDII@Z:PROC		; CWinApp::DoMessageBox
EXTRN	?DoWaitCursor@CWinApp@@UAEXH@Z:PROC		; CWinApp::DoWaitCursor
EXTRN	?OnDDECommand@CWinApp@@UAEHPAD@Z:PROC		; CWinApp::OnDDECommand
EXTRN	?WinHelpA@CWinApp@@UAEXKI@Z:PROC		; CWinApp::WinHelpA
EXTRN	?HtmlHelpA@CWinApp@@UAEXKI@Z:PROC		; CWinApp::HtmlHelpA
EXTRN	?WinHelpInternal@CWinApp@@UAEXKI@Z:PROC		; CWinApp::WinHelpInternal
EXTRN	?LoadAppLangResourceDLL@CWinApp@@UAEPAUHINSTANCE__@@XZ:PROC ; CWinApp::LoadAppLangResourceDLL
EXTRN	?LoadSysPolicies@CWinApp@@UAEHXZ:PROC		; CWinApp::LoadSysPolicies
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2CWinThread@@8
rdata$r	SEGMENT
??_R2CWinThread@@8 DD FLAT:??_R1A@?0A@EA@CWinThread@@8	; CWinThread::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWinThread@@8
rdata$r	SEGMENT
??_R3CWinThread@@8 DD 00H				; CWinThread::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWinThread@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWinThread@@@8
_DATA	SEGMENT
??_R0?AVCWinThread@@@8 DD FLAT:??_7type_info@@6B@	; CWinThread `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWinThread@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CWinThread@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWinThread@@8 DD FLAT:??_R0?AVCWinThread@@@8 ; CWinThread::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWinThread@@8
rdata$r	ENDS
;	COMDAT ??_R2CWinApp@@8
rdata$r	SEGMENT
??_R2CWinApp@@8 DD FLAT:??_R1A@?0A@EA@CWinApp@@8	; CWinApp::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWinThread@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWinApp@@8
rdata$r	SEGMENT
??_R3CWinApp@@8 DD 00H					; CWinApp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CWinApp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWinApp@@@8
_DATA	SEGMENT
??_R0?AVCWinApp@@@8 DD FLAT:??_7type_info@@6B@		; CWinApp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWinApp@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CWinApp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWinApp@@8 DD FLAT:??_R0?AVCWinApp@@@8	; CWinApp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWinApp@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSmartTrackerApp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSmartTrackerApp@@8 DD FLAT:??_R0?AVCSmartTrackerApp@@@8 ; CSmartTrackerApp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSmartTrackerApp@@8
rdata$r	ENDS
;	COMDAT ??_R2CSmartTrackerApp@@8
rdata$r	SEGMENT
??_R2CSmartTrackerApp@@8 DD FLAT:??_R1A@?0A@EA@CSmartTrackerApp@@8 ; CSmartTrackerApp::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWinApp@@8
	DD	FLAT:??_R1A@?0A@EA@CWinThread@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CSmartTrackerApp@@8
rdata$r	SEGMENT
??_R3CSmartTrackerApp@@8 DD 00H				; CSmartTrackerApp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CSmartTrackerApp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSmartTrackerApp@@@8
_DATA	SEGMENT
??_R0?AVCSmartTrackerApp@@@8 DD FLAT:??_7type_info@@6B@	; CSmartTrackerApp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSmartTrackerApp@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CSmartTrackerApp@@6B@
rdata$r	SEGMENT
??_R4CSmartTrackerApp@@6B@ DD 00H			; CSmartTrackerApp::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSmartTrackerApp@@@8
	DD	FLAT:??_R3CSmartTrackerApp@@8
rdata$r	ENDS
;	COMDAT ??_7CSmartTrackerApp@@6B@
CONST	SEGMENT
??_7CSmartTrackerApp@@6B@ DD FLAT:??_R4CSmartTrackerApp@@6B@ ; CSmartTrackerApp::`vftable'
	DD	FLAT:?GetRuntimeClass@CWinApp@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECSmartTrackerApp@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CCmdTarget@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSmartTrackerApp@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?InitInstance@CSmartTrackerApp@@UAEHXZ
	DD	FLAT:?Run@CWinApp@@UAEHXZ
	DD	FLAT:?PreTranslateMessage@CWinThread@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?PumpMessage@CWinThread@@UAEHXZ
	DD	FLAT:?OnIdle@CWinApp@@UAEHJ@Z
	DD	FLAT:?IsIdleMessage@CWinThread@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?ExitInstance@CSmartTrackerApp@@UAEHXZ
	DD	FLAT:?ProcessWndProcException@CWinApp@@UAEJPAVCException@@PBUtagMSG@@@Z
	DD	FLAT:?ProcessMessageFilter@CWinThread@@UAEHHPAUtagMSG@@@Z
	DD	FLAT:?GetMainWnd@CWinThread@@UAEPAVCWnd@@XZ
	DD	FLAT:?Delete@CWinThread@@UAEXXZ
	DD	FLAT:?InitLibId@CWinApp@@UAEXXZ
	DD	FLAT:?Register@CWinApp@@UAEHXZ
	DD	FLAT:?Unregister@CWinApp@@UAEHXZ
	DD	FLAT:?OpenDocumentFile@CWinApp@@UAEPAVCDocument@@PBD@Z
	DD	FLAT:?AddToRecentFileList@CWinApp@@UAEXPBD@Z
	DD	FLAT:?InitApplication@CWinApp@@UAEHXZ
	DD	FLAT:?SaveAllModified@CWinApp@@UAEHXZ
	DD	FLAT:?DoMessageBox@CWinApp@@UAEHPBDII@Z
	DD	FLAT:?DoWaitCursor@CWinApp@@UAEXH@Z
	DD	FLAT:?OnDDECommand@CWinApp@@UAEHPAD@Z
	DD	FLAT:?WinHelpA@CWinApp@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWinApp@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWinApp@@UAEXKI@Z
	DD	FLAT:?LoadAppLangResourceDLL@CWinApp@@UAEPAUHINSTANCE__@@XZ
	DD	FLAT:?LoadSysPolicies@CWinApp@@UAEHXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0CSmartTrackerApp@@QAE@XZ
_TEXT	SEGMENT
??0CSmartTrackerApp@@QAE@XZ PROC			; CSmartTrackerApp::CSmartTrackerApp, COMDAT
; _this$ = ecx
	push	esi
	push	0
	mov	esi, ecx
	call	??0CWinApp@@QAE@PBD@Z			; CWinApp::CWinApp
	mov	DWORD PTR [esi], OFFSET ??_7CSmartTrackerApp@@6B@
	mov	eax, esi
	pop	esi
	ret	0
??0CSmartTrackerApp@@QAE@XZ ENDP			; CSmartTrackerApp::CSmartTrackerApp
_TEXT	ENDS
PUBLIC	??1CSmartTrackerApp@@UAE@XZ			; CSmartTrackerApp::~CSmartTrackerApp
EXTRN	??1CWinApp@@UAE@XZ:PROC				; CWinApp::~CWinApp
; Function compile flags: /Ogtpy
;	COMDAT ??1CSmartTrackerApp@@UAE@XZ
_TEXT	SEGMENT
??1CSmartTrackerApp@@UAE@XZ PROC			; CSmartTrackerApp::~CSmartTrackerApp, COMDAT
; _this$ = ecx
	jmp	??1CWinApp@@UAE@XZ			; CWinApp::~CWinApp
??1CSmartTrackerApp@@UAE@XZ ENDP			; CSmartTrackerApp::~CSmartTrackerApp
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcom.h
_TEXT	ENDS
;	COMDAT ?GetObjectDescription@?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@SGPBDXZ
_TEXT	SEGMENT
?GetObjectDescription@?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@SGPBDXZ PROC ; ATL::CComCoClass<CSmartTrackerClass,&CLSID_SmartTracker8>::GetObjectDescription, COMDAT

; 3534 : 	static LPCTSTR WINAPI GetObjectDescription() {return NULL;}

	xor	eax, eax
	ret	0
?GetObjectDescription@?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@SGPBDXZ ENDP ; ATL::CComCoClass<CSmartTrackerClass,&CLSID_SmartTracker8>::GetObjectDescription
_TEXT	ENDS
PUBLIC	?CreateInstance@?$CComFailCreator@$0?HPPLPOPA@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ; ATL::CComFailCreator<-2147221232>::CreateInstance
; Function compile flags: /Ogtpy
;	COMDAT ?CreateInstance@?$CComFailCreator@$0?HPPLPOPA@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
_ppv$ = 16						; size = 4
?CreateInstance@?$CComFailCreator@$0?HPPLPOPA@@ATL@@SGJPAXABU_GUID@@PAPAX@Z PROC ; ATL::CComFailCreator<-2147221232>::CreateInstance, COMDAT

; 1862 : 		if (ppv == NULL)

	mov	eax, DWORD PTR _ppv$[esp-4]
	test	eax, eax
	jne	SHORT $LN1@CreateInst

; 1863 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H

; 1867 : 	}

	ret	12					; 0000000cH
$LN1@CreateInst:

; 1864 : 		*ppv = NULL;

	mov	DWORD PTR [eax], 0

; 1865 : 
; 1866 : 		return hr;

	mov	eax, -2147221232			; 80040110H

; 1867 : 	}

	ret	12					; 0000000cH
?CreateInstance@?$CComFailCreator@$0?HPPLPOPA@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ENDP ; ATL::CComFailCreator<-2147221232>::CreateInstance
_TEXT	ENDS
PUBLIC	??0IClassFactory@@QAE@XZ			; IClassFactory::IClassFactory
; Function compile flags: /Ogtpy
;	COMDAT ??0IClassFactory@@QAE@XZ
_TEXT	SEGMENT
??0IClassFactory@@QAE@XZ PROC				; IClassFactory::IClassFactory, COMDAT
; _this$ = ecx
	mov	eax, ecx
	ret	0
??0IClassFactory@@QAE@XZ ENDP				; IClassFactory::IClassFactory
_TEXT	ENDS
PUBLIC	?AtlThrowImpl@ATL@@YGXJ@Z			; ATL::AtlThrowImpl
EXTRN	?AfxThrowOleException@@YGXJ@Z:PROC		; AfxThrowOleException
EXTRN	?AfxThrowMemoryException@@YGXXZ:PROC		; AfxThrowMemoryException
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlexcept.h
;	COMDAT ?AtlThrowImpl@ATL@@YGXJ@Z
_TEXT	SEGMENT
_hr$ = 8						; size = 4
?AtlThrowImpl@ATL@@YGXJ@Z PROC				; ATL::AtlThrowImpl, COMDAT

; 64   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );
; 65   : #ifdef _AFX
; 66   : 	if( hr == E_OUTOFMEMORY )

	mov	eax, DWORD PTR _hr$[esp-4]
	cmp	eax, -2147024882			; 8007000eH
	jne	SHORT $LN2@AtlThrowIm

; 67   : 	{
; 68   : 		AfxThrowMemoryException();

	call	?AfxThrowMemoryException@@YGXXZ		; AfxThrowMemoryException
$LN2@AtlThrowIm:

; 69   : 	}
; 70   : 	else
; 71   : 	{
; 72   : 		AfxThrowOleException( hr );

	push	eax
	call	?AfxThrowOleException@@YGXJ@Z		; AfxThrowOleException
$LN5@AtlThrowIm:
	int	3
?AtlThrowImpl@ATL@@YGXJ@Z ENDP				; ATL::AtlThrowImpl
_TEXT	ENDS
PUBLIC	??0CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::CComCriticalSection
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcore.h
;	COMDAT ??0CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::CComCriticalSection, COMDAT
; _this$ = ecx

; 78   : 	CComCriticalSection() throw()

	mov	eax, ecx

; 79   : 	{
; 80   : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx

; 81   : 	}

	ret	0
??0CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::CComCriticalSection
_TEXT	ENDS
PUBLIC	??1CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::~CComCriticalSection
; Function compile flags: /Ogtpy
;	COMDAT ??1CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::~CComCriticalSection, COMDAT
; _this$ = ecx

; 84   : 	}

	ret	0
??1CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::~CComCriticalSection
_TEXT	ENDS
PUBLIC	?Lock@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Lock
EXTRN	__imp__EnterCriticalSection@4:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?Lock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
?Lock@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Lock, COMDAT
; _this$ = ecx

; 87   : 		EnterCriticalSection(&m_sec);

	push	ecx
	call	DWORD PTR __imp__EnterCriticalSection@4

; 88   : 		return S_OK;

	xor	eax, eax

; 89   : 	}

	ret	0
?Lock@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Lock
_TEXT	ENDS
PUBLIC	?Unlock@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Unlock
EXTRN	__imp__LeaveCriticalSection@4:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
?Unlock@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Unlock, COMDAT
; _this$ = ecx

; 92   : 		LeaveCriticalSection(&m_sec);

	push	ecx
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 93   : 		return S_OK;

	xor	eax, eax

; 94   : 	}

	ret	0
?Unlock@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Unlock
_TEXT	ENDS
PUBLIC	?Init@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Init
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__except_handler4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__sehtable$?Init@CComCriticalSection@ATL@@QAEJXZ DD 0fffffffeH
	DD	00H
	DD	0ffffffd4H
	DD	00H
	DD	0fffffffeH
	DD	FLAT:$LN5@Init
	DD	FLAT:$LN6@Init
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?Init@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_hRes$ = -28						; size = 4
__$SEHRec$ = -24					; size = 24
?Init@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Init, COMDAT
; _this$ = ecx

; 96   : 	{

	push	ebp
	mov	ebp, esp
	push	-2					; fffffffeH
	push	OFFSET __sehtable$?Init@CComCriticalSection@ATL@@QAEJXZ
	push	OFFSET __except_handler4
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	DWORD PTR __$SEHRec$[ebp+16], eax
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$SEHRec$[ebp], esp

; 97   : 		HRESULT hRes = E_FAIL;
; 98   : 		__try

	mov	DWORD PTR __$SEHRec$[ebp+20], 0

; 99   : 		{
; 100  : 			InitializeCriticalSection(&m_sec);

	push	ecx
	call	DWORD PTR __imp__InitializeCriticalSection@4

; 101  : 			hRes = S_OK;

	xor	eax, eax

; 102  : 		}

	jmp	SHORT $LN9@Init
$LN5@Init:

; 103  : 		// structured exception may be raised in low memory situations
; 104  : 		__except(STATUS_NO_MEMORY == GetExceptionCode())

	mov	eax, DWORD PTR __$SEHRec$[ebp+4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx]
	xor	edx, edx
	cmp	eax, -1073741801			; c0000017H
	sete	dl
	mov	eax, edx
$LN7@Init:
	ret	0
$LN6@Init:
	mov	esp, DWORD PTR __$SEHRec$[ebp]

; 105  : 		{			
; 106  : 			hRes = E_OUTOFMEMORY;		

	mov	eax, -2147024882			; 8007000eH
$LN9@Init:
	mov	DWORD PTR _hRes$[ebp], eax

; 107  : 		}

	mov	DWORD PTR __$SEHRec$[ebp+20], -2	; fffffffeH

; 108  : 		return hRes;
; 109  : 	}

	mov	ecx, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Init
_TEXT	ENDS
PUBLIC	?Term@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Term
EXTRN	__imp__DeleteCriticalSection@4:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
?Term@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Term, COMDAT
; _this$ = ecx

; 113  : 		DeleteCriticalSection(&m_sec);

	push	ecx
	call	DWORD PTR __imp__DeleteCriticalSection@4

; 114  : 		return S_OK;

	xor	eax, eax

; 115  : 	}	

	ret	0
?Term@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Term
_TEXT	ENDS
PUBLIC	??0CComSafeDeleteCriticalSection@ATL@@QAE@XZ	; ATL::CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection
; Function compile flags: /Ogtpy
;	COMDAT ??0CComSafeDeleteCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CComSafeDeleteCriticalSection@ATL@@QAE@XZ PROC	; ATL::CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection, COMDAT
; _this$ = ecx

; 141  : 	{

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx
	mov	BYTE PTR [eax+24], cl

; 142  : 	}

	ret	0
??0CComSafeDeleteCriticalSection@ATL@@QAE@XZ ENDP	; ATL::CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection
_TEXT	ENDS
PUBLIC	??1CComSafeDeleteCriticalSection@ATL@@QAE@XZ	; ATL::CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection
; Function compile flags: /Ogtpy
;	COMDAT ??1CComSafeDeleteCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CComSafeDeleteCriticalSection@ATL@@QAE@XZ PROC	; ATL::CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection, COMDAT
; _this$ = ecx

; 146  : 		if (!m_bInitialized)

	cmp	BYTE PTR [ecx+24], 0
	je	SHORT $LN4@CComSafeDe

; 147  : 		{
; 148  : 			return;
; 149  : 		}
; 150  : 		m_bInitialized = false;
; 151  : 		CComCriticalSection::Term();

	push	ecx
	mov	BYTE PTR [ecx+24], 0
	call	DWORD PTR __imp__DeleteCriticalSection@4
$LN4@CComSafeDe:

; 152  : 	}

	ret	0
??1CComSafeDeleteCriticalSection@ATL@@QAE@XZ ENDP	; ATL::CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection
_TEXT	ENDS
PUBLIC	?Init@CComSafeDeleteCriticalSection@ATL@@QAEJXZ	; ATL::CComSafeDeleteCriticalSection::Init
; Function compile flags: /Ogtpy
;	COMDAT ?Init@CComSafeDeleteCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
?Init@CComSafeDeleteCriticalSection@ATL@@QAEJXZ PROC	; ATL::CComSafeDeleteCriticalSection::Init, COMDAT
; _this$ = ecx

; 155  : 	{

	push	esi
	mov	esi, ecx

; 156  : 		ATLASSERT( !m_bInitialized );
; 157  : 		HRESULT hr = CComCriticalSection::Init();

	call	?Init@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Init

; 158  : 		if (SUCCEEDED(hr))

	test	eax, eax
	jl	SHORT $LN1@Init@2

; 159  : 		{
; 160  : 			m_bInitialized = true;

	mov	BYTE PTR [esi+24], 1
$LN1@Init@2:
	pop	esi

; 161  : 		}
; 162  : 		return hr;
; 163  : 	}

	ret	0
?Init@CComSafeDeleteCriticalSection@ATL@@QAEJXZ ENDP	; ATL::CComSafeDeleteCriticalSection::Init
_TEXT	ENDS
PUBLIC	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
; Function compile flags: /Ogtpy
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ PROC ; ATL::CAtlBaseModule::GetModuleInstance, COMDAT
; _this$ = ecx

; 232  : 		return m_hInst;

	mov	eax, DWORD PTR [ecx+4]

; 233  : 	}

	ret	0
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetModuleInstance
_TEXT	ENDS
PUBLIC	?_AfxInitManaged@@YAHXZ				; _AfxInitManaged
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\afx.inl
;	COMDAT ?_AfxInitManaged@@YAHXZ
_TEXT	SEGMENT
?_AfxInitManaged@@YAHXZ PROC				; _AfxInitManaged, COMDAT

; 77   : 	return 0;

	xor	eax, eax

; 78   : }

	ret	0
?_AfxInitManaged@@YAHXZ ENDP				; _AfxInitManaged
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 96   : 	{ /* CObject does not serialize anything by default */ }

	ret	4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtpy
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CObject@@SGXPAX@Z PROC				; CObject::operator delete, COMDAT

; 102  : 	{ ::operator delete(p); }

	mov	eax, DWORD PTR _p$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 112  : 	{ /* no asserts in release builds */ }

	ret	0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 114  : 	{ /* no dumping in release builds */ }

	ret	4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
PUBLIC	??1AFX_MAINTAIN_STATE2@@QAE@XZ			; AFX_MAINTAIN_STATE2::~AFX_MAINTAIN_STATE2
EXTRN	?AfxDeactivateActCtx@@YGHKK@Z:PROC		; AfxDeactivateActCtx
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\afxwin1.inl
;	COMDAT ??1AFX_MAINTAIN_STATE2@@QAE@XZ
_TEXT	SEGMENT
??1AFX_MAINTAIN_STATE2@@QAE@XZ PROC			; AFX_MAINTAIN_STATE2::~AFX_MAINTAIN_STATE2, COMDAT
; _this$ = ecx

; 52   : #ifdef _AFXDLL
; 53   : 	// Not a good place to report errors here, so just be safe
; 54   : 	if(m_pThreadState)

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	je	SHORT $LN2@AFX_MAINTA

; 55   : 	{
; 56   : 		m_pThreadState->m_pModuleState = m_pPrevModuleState;

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
$LN2@AFX_MAINTA:

; 57   : 	}
; 58   : #endif
; 59   : 
; 60   : 	if (m_bValidActCtxCookie)

	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN1@AFX_MAINTA

; 61   : 	{
; 62   : 		BOOL bRet;
; 63   : 		bRet = AfxDeactivateActCtx(0, m_ulActCtxCookie);

	mov	eax, DWORD PTR [ecx+8]
	push	eax
	push	0
	call	?AfxDeactivateActCtx@@YGHKK@Z		; AfxDeactivateActCtx
$LN1@AFX_MAINTA:

; 64   : 		ASSERT(bRet == TRUE);
; 65   : 	}
; 66   : }

	ret	0
??1AFX_MAINTAIN_STATE2@@QAE@XZ ENDP			; AFX_MAINTAIN_STATE2::~AFX_MAINTAIN_STATE2
_TEXT	ENDS
PUBLIC	?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z	; ATL::CComMultiThreadModel::Increment
EXTRN	__imp__InterlockedIncrement@4:PROC
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlbase.h
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z PROC	; ATL::CComMultiThreadModel::Increment, COMDAT

; 375  : 	static ULONG WINAPI Increment(LPLONG p) throw() {return InterlockedIncrement(p);}

	jmp	DWORD PTR __imp__InterlockedIncrement@4
?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z ENDP	; ATL::CComMultiThreadModel::Increment
_TEXT	ENDS
PUBLIC	?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z	; ATL::CComMultiThreadModel::Decrement
EXTRN	__imp__InterlockedDecrement@4:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z PROC	; ATL::CComMultiThreadModel::Decrement, COMDAT

; 376  : 	static ULONG WINAPI Decrement(LPLONG p) throw() {return InterlockedDecrement(p);}

	jmp	DWORD PTR __imp__InterlockedDecrement@4
?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z ENDP	; ATL::CComMultiThreadModel::Decrement
_TEXT	ENDS
PUBLIC	?RegisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CAtlComModule::RegisterServer
EXTRN	__imp__AtlComModuleRegisterServer@12:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?RegisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT
_bRegTypeLib$ = 8					; size = 4
_pCLSID$ = 12						; size = 4
?RegisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z PROC ; ATL::CAtlComModule::RegisterServer, COMDAT
; _this$ = ecx

; 2382 : 		return AtlComModuleRegisterServer(this, bRegTypeLib, pCLSID);

	mov	eax, DWORD PTR _pCLSID$[esp-4]
	mov	edx, DWORD PTR _bRegTypeLib$[esp-4]
	push	eax
	push	edx
	push	ecx
	call	DWORD PTR __imp__AtlComModuleRegisterServer@12

; 2383 : 	}

	ret	8
?RegisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z ENDP ; ATL::CAtlComModule::RegisterServer
_TEXT	ENDS
PUBLIC	?UnregisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CAtlComModule::UnregisterServer
EXTRN	__imp__AtlComModuleUnregisterServer@12:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?UnregisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT
_bRegTypeLib$ = 8					; size = 4
_pCLSID$ = 12						; size = 4
?UnregisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z PROC ; ATL::CAtlComModule::UnregisterServer, COMDAT
; _this$ = ecx

; 2390 : 		return AtlComModuleUnregisterServer(this, bRegTypeLib, pCLSID);

	mov	eax, DWORD PTR _pCLSID$[esp-4]
	mov	edx, DWORD PTR _bRegTypeLib$[esp-4]
	push	eax
	push	edx
	push	ecx
	call	DWORD PTR __imp__AtlComModuleUnregisterServer@12

; 2391 : 	}

	ret	8
?UnregisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z ENDP ; ATL::CAtlComModule::UnregisterServer
_TEXT	ENDS
PUBLIC	?Term@CAtlModule@ATL@@QAEXXZ			; ATL::CAtlModule::Term
EXTRN	__imp__AtlCallTermFunc@4:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?Term@CAtlModule@ATL@@QAEXXZ
_TEXT	SEGMENT
?Term@CAtlModule@ATL@@QAEXXZ PROC			; ATL::CAtlModule::Term, COMDAT
; _this$ = ecx

; 2727 : 	{

	push	esi
	mov	esi, ecx

; 2728 : 		// cbSize == 0 indicates that Term has already been called
; 2729 : 		if (cbSize == 0)

	cmp	DWORD PTR [esi+4], 0
	push	edi
	lea	edi, DWORD PTR [esi+4]
	je	SHORT $LN4@Term

; 2730 : 			return;
; 2731 : 
; 2732 : 		// Call term functions
; 2733 : 		if (m_pTermFuncs != NULL)

	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN2@Term

; 2734 : 		{
; 2735 : 			AtlCallTermFunc(this);

	push	edi
	call	DWORD PTR __imp__AtlCallTermFunc@4

; 2736 : 			m_pTermFuncs = NULL;

	mov	DWORD PTR [esi+12], 0
$LN2@Term:

; 2737 : 		}
; 2738 : 
; 2739 : 		if (m_pGIT != NULL)

	mov	eax, DWORD PTR [esi+40]
	test	eax, eax
	je	SHORT $LN1@Term

; 2740 : 			m_pGIT->Release();

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN1@Term:

; 2741 : 
; 2742 : 		m_csStaticDataInitAndTypeInfo.Term();

	add	esi, 16					; 00000010H
	push	esi
	call	DWORD PTR __imp__DeleteCriticalSection@4

; 2743 : 
; 2744 : 		cbSize = 0;

	mov	DWORD PTR [edi], 0
$LN4@Term:
	pop	edi
	pop	esi

; 2745 : 	}

	ret	0
?Term@CAtlModule@ATL@@QAEXXZ ENDP			; ATL::CAtlModule::Term
_TEXT	ENDS
PUBLIC	?GetLockCount@CAtlModule@ATL@@UAEJXZ		; ATL::CAtlModule::GetLockCount
; Function compile flags: /Ogtpy
;	COMDAT ?GetLockCount@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT
?GetLockCount@CAtlModule@ATL@@UAEJXZ PROC		; ATL::CAtlModule::GetLockCount, COMDAT
; _this$ = ecx

; 2764 : 		return m_nLockCnt;

	mov	eax, DWORD PTR [ecx+8]

; 2765 : 	}

	ret	0
?GetLockCount@CAtlModule@ATL@@UAEJXZ ENDP		; ATL::CAtlModule::GetLockCount
_TEXT	ENDS
PUBLIC	??0_ATL_MODULE70@ATL@@QAE@XZ			; ATL::_ATL_MODULE70::_ATL_MODULE70
; Function compile flags: /Ogtpy
;	COMDAT ??0_ATL_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
??0_ATL_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_MODULE70::_ATL_MODULE70, COMDAT
; _this$ = ecx
	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+24], ecx
	mov	DWORD PTR [eax+28], ecx
	mov	DWORD PTR [eax+32], ecx
	ret	0
??0_ATL_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_MODULE70::_ATL_MODULE70
_TEXT	ENDS
PUBLIC	??1_ATL_MODULE70@ATL@@QAE@XZ			; ATL::_ATL_MODULE70::~_ATL_MODULE70
; Function compile flags: /Ogtpy
;	COMDAT ??1_ATL_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
??1_ATL_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_MODULE70::~_ATL_MODULE70, COMDAT
; _this$ = ecx
	ret	0
??1_ATL_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_MODULE70::~_ATL_MODULE70
_TEXT	ENDS
PUBLIC	??0CRegKey@ATL@@QAE@XZ				; ATL::CRegKey::CRegKey
; Function compile flags: /Ogtpy
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CRegKey@ATL@@QAE@XZ PROC				; ATL::CRegKey::CRegKey, COMDAT
; _this$ = ecx

; 5171 : {

	mov	eax, ecx
	mov	DWORD PTR [eax], 0

; 5172 : }

	ret	0
??0CRegKey@ATL@@QAE@XZ ENDP				; ATL::CRegKey::CRegKey
_TEXT	ENDS
PUBLIC	?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z		; ATL::CRegKey::DeleteSubKey
EXTRN	__imp__RegDeleteKeyA@8:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT
_lpszSubKey$ = 8					; size = 4
?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z PROC		; ATL::CRegKey::DeleteSubKey, COMDAT
; _this$ = ecx

; 5216 : 	ATLASSUME(m_hKey != NULL);
; 5217 : 	return RegDeleteKey(m_hKey, lpszSubKey);

	mov	eax, DWORD PTR _lpszSubKey$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	push	ecx
	call	DWORD PTR __imp__RegDeleteKeyA@8

; 5218 : }

	ret	4
?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z ENDP		; ATL::CRegKey::DeleteSubKey
_TEXT	ENDS
PUBLIC	?Close@CRegKey@ATL@@QAEJXZ			; ATL::CRegKey::Close
EXTRN	__imp__RegCloseKey@4:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT
?Close@CRegKey@ATL@@QAEJXZ PROC				; ATL::CRegKey::Close, COMDAT
; _this$ = ecx

; 5227 : {

	push	esi
	mov	esi, ecx

; 5228 : 	LONG lRes = ERROR_SUCCESS;
; 5229 : 	if (m_hKey != NULL)

	mov	ecx, DWORD PTR [esi]
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@Close

; 5230 : 	{
; 5231 : 		lRes = RegCloseKey(m_hKey);

	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4

; 5232 : 		m_hKey = NULL;

	mov	DWORD PTR [esi], 0
$LN1@Close:
	pop	esi

; 5233 : 	}
; 5234 : 	return lRes;
; 5235 : }

	ret	0
?Close@CRegKey@ATL@@QAEJXZ ENDP				; ATL::CRegKey::Close
_TEXT	ENDS
PUBLIC	?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z ; ATL::CRegKey::Create
EXTRN	__imp__RegCreateKeyExA@36:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT
_hKey$ = -4						; size = 4
_hKeyParent$ = 8					; size = 4
_lpszKeyName$ = 12					; size = 4
_lpszClass$ = 16					; size = 4
_dwOptions$ = 20					; size = 4
_samDesired$ = 24					; size = 4
_dw$ = 28						; size = 4
_lpSecAttr$ = 28					; size = 4
_lpdwDisposition$ = 32					; size = 4
?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z PROC ; ATL::CRegKey::Create, COMDAT
; _this$ = ecx

; 5268 : {

	push	ecx

; 5269 : 	ATLASSERT(hKeyParent != NULL);
; 5270 : 	DWORD dw;
; 5271 : 	HKEY hKey = NULL;
; 5272 : 	LONG lRes = RegCreateKeyEx(hKeyParent, lpszKeyName, 0,
; 5273 : 		lpszClass, dwOptions, samDesired, lpSecAttr, &hKey, &dw);

	mov	edx, DWORD PTR _lpSecAttr$[esp]
	push	esi
	mov	esi, ecx
	lea	eax, DWORD PTR _dw$[esp+4]
	push	eax
	mov	eax, DWORD PTR _samDesired$[esp+8]
	lea	ecx, DWORD PTR _hKey$[esp+12]
	push	ecx
	mov	ecx, DWORD PTR _dwOptions$[esp+12]
	push	edx
	mov	edx, DWORD PTR _lpszClass$[esp+16]
	push	eax
	mov	eax, DWORD PTR _lpszKeyName$[esp+20]
	push	ecx
	mov	ecx, DWORD PTR _hKeyParent$[esp+24]
	push	edx
	push	0
	push	eax
	push	ecx
	mov	DWORD PTR _hKey$[esp+44], 0
	call	DWORD PTR __imp__RegCreateKeyExA@36

; 5274 : 	if (lpdwDisposition != NULL)

	mov	ecx, DWORD PTR _lpdwDisposition$[esp+4]
	test	ecx, ecx
	je	SHORT $LN2@Create

; 5275 : 		*lpdwDisposition = dw;

	mov	edx, DWORD PTR _dw$[esp+4]
	mov	DWORD PTR [ecx], edx
$LN2@Create:

; 5276 : 	if (lRes == ERROR_SUCCESS)

	test	eax, eax
	jne	SHORT $LN1@Create

; 5277 : 	{
; 5278 : 		lRes = Close();

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN5@Create
	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4
	mov	DWORD PTR [esi], 0
$LN5@Create:

; 5279 : 		m_hKey = hKey;

	mov	ecx, DWORD PTR _hKey$[esp+8]
	mov	DWORD PTR [esi], ecx
$LN1@Create:
	pop	esi

; 5280 : 	}
; 5281 : 	return lRes;
; 5282 : }

	pop	ecx
	ret	28					; 0000001cH
?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z ENDP ; ATL::CRegKey::Create
_TEXT	ENDS
PUBLIC	?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z	; ATL::CRegKey::Open
EXTRN	__imp__RegOpenKeyExA@20:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT
_hKey$ = -4						; size = 4
_hKeyParent$ = 8					; size = 4
_lpszKeyName$ = 12					; size = 4
_samDesired$ = 16					; size = 4
?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z PROC		; ATL::CRegKey::Open, COMDAT
; _this$ = ecx

; 5285 : {

	push	ecx

; 5286 : 	ATLASSERT(hKeyParent != NULL);
; 5287 : 	HKEY hKey = NULL;
; 5288 : 	LONG lRes = RegOpenKeyEx(hKeyParent, lpszKeyName, 0, samDesired, &hKey);

	mov	edx, DWORD PTR _lpszKeyName$[esp]
	push	esi
	lea	eax, DWORD PTR _hKey$[esp+8]
	push	eax
	mov	eax, DWORD PTR _hKeyParent$[esp+8]
	mov	esi, ecx
	mov	ecx, DWORD PTR _samDesired$[esp+8]
	push	ecx
	push	0
	push	edx
	push	eax
	mov	DWORD PTR _hKey$[esp+28], 0
	call	DWORD PTR __imp__RegOpenKeyExA@20

; 5289 : 	if (lRes == ERROR_SUCCESS)

	test	eax, eax
	jne	SHORT $LN1@Open

; 5290 : 	{
; 5291 : 		lRes = Close();

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN4@Open
	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4
	mov	DWORD PTR [esi], 0
$LN4@Open:

; 5292 : 		ATLASSERT(lRes == ERROR_SUCCESS);
; 5293 : 		m_hKey = hKey;

	mov	ecx, DWORD PTR _hKey$[esp+8]
	mov	DWORD PTR [esi], ecx
$LN1@Open:
	pop	esi

; 5294 : 	}
; 5295 : 	return lRes;
; 5296 : }

	pop	ecx
	ret	12					; 0000000cH
?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z ENDP		; ATL::CRegKey::Open
_TEXT	ENDS
PUBLIC	?SetValue@CRegKey@ATL@@QAEJPBD0_NH@Z		; ATL::CRegKey::SetValue
EXTRN	__imp__RegSetValueExA@24:PROC
EXTRN	__imp__lstrlenA@4:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?SetValue@CRegKey@ATL@@QAEJPBD0_NH@Z
_TEXT	SEGMENT
_lpszValue$ = 8						; size = 4
_lpszValueName$ = 12					; size = 4
_bMulti$ = 16						; size = 1
_nValueLen$ = 20					; size = 4
?SetValue@CRegKey@ATL@@QAEJPBD0_NH@Z PROC		; ATL::CRegKey::SetValue, COMDAT
; _this$ = ecx

; 5565 : {

	push	esi

; 5566 : 	ATLENSURE(lpszValue != NULL);

	mov	esi, DWORD PTR _lpszValue$[esp]
	test	esi, esi
	push	edi
	mov	edi, ecx
	jne	SHORT $LN8@SetValue
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN8@SetValue:

; 5567 : 	ATLASSUME(m_hKey != NULL);
; 5568 : 
; 5569 : 	if (bMulti && nValueLen == -1)

	mov	eax, DWORD PTR _nValueLen$[esp+4]
	push	ebx
	mov	bl, BYTE PTR _bMulti$[esp+8]
	test	bl, bl
	je	SHORT $LN2@SetValue
	cmp	eax, -1
	jne	SHORT $LN1@SetValue
	pop	ebx
	pop	edi

; 5570 : 		return ERROR_INVALID_PARAMETER;

	mov	eax, 87					; 00000057H
	pop	esi

; 5579 : }

	ret	16					; 00000010H
$LN2@SetValue:

; 5571 : 
; 5572 : 	if (nValueLen == -1)

	cmp	eax, -1
	jne	SHORT $LN1@SetValue

; 5573 : 		nValueLen = lstrlen(lpszValue) + 1;

	push	esi
	call	DWORD PTR __imp__lstrlenA@4
	add	eax, 1
$LN1@SetValue:

; 5574 : 
; 5575 : 	DWORD dwType = bMulti ? REG_MULTI_SZ : REG_SZ;
; 5576 : 
; 5577 : 	return ::RegSetValueEx(m_hKey, lpszValueName, NULL, dwType,
; 5578 : 		reinterpret_cast<const BYTE*>(lpszValue), nValueLen*sizeof(TCHAR));

	mov	ecx, DWORD PTR [edi]
	neg	bl
	push	eax
	mov	eax, DWORD PTR _lpszValueName$[esp+12]
	push	esi
	sbb	ebx, ebx
	and	ebx, 6
	add	ebx, 1
	push	ebx
	push	0
	push	eax
	push	ecx
	call	DWORD PTR __imp__RegSetValueExA@24
	pop	ebx
	pop	edi
	pop	esi

; 5579 : }

	ret	16					; 00000010H
$LN13@SetValue:
?SetValue@CRegKey@ATL@@QAEJPBD0_NH@Z ENDP		; ATL::CRegKey::SetValue
_TEXT	ENDS
PUBLIC	?Init@CComModule@ATL@@QAEJPAU_ATL_OBJMAP_ENTRY30@2@PAUHINSTANCE__@@PBU_GUID@@@Z ; ATL::CComModule::Init
EXTRN	?_AtlComModule@ATL@@3VCAtlComModule@1@A:BYTE	; ATL::_AtlComModule
; Function compile flags: /Ogtpy
;	COMDAT ?Init@CComModule@ATL@@QAEJPAU_ATL_OBJMAP_ENTRY30@2@PAUHINSTANCE__@@PBU_GUID@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
___formal$ = 12						; size = 4
_plibid$ = 16						; size = 4
?Init@CComModule@ATL@@QAEJPAU_ATL_OBJMAP_ENTRY30@2@PAUHINSTANCE__@@PBU_GUID@@@Z PROC ; ATL::CComModule::Init, COMDAT
; _this$ = ecx

; 7015 : 	if (plibid != NULL)

	mov	eax, DWORD PTR _plibid$[esp-4]
	test	eax, eax
	je	SHORT $LN9@Init@3

; 7016 : 		m_libid = *plibid;

	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR ?m_libid@CAtlModule@ATL@@2U_GUID@@A, edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ?m_libid@CAtlModule@ATL@@2U_GUID@@A+4, edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR ?m_libid@CAtlModule@ATL@@2U_GUID@@A+8, edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR ?m_libid@CAtlModule@ATL@@2U_GUID@@A+12, eax
$LN9@Init@3:
	push	esi

; 7017 : 
; 7018 : 	_ATL_OBJMAP_ENTRY* pEntry;
; 7019 : 	if (p != (_ATL_OBJMAP_ENTRY*)-1)

	mov	esi, DWORD PTR _p$[esp]
	cmp	esi, -1
	je	SHORT $LN5@Init@3

; 7020 : 	{
; 7021 : 		m_pObjMap = p;
; 7022 : 		if (m_pObjMap != NULL)

	test	esi, esi
	mov	DWORD PTR [ecx+44], esi
	je	SHORT $LN5@Init@3

; 7023 : 		{
; 7024 : 			pEntry = m_pObjMap;
; 7025 : 			while (pEntry->pclsid != NULL)

	cmp	DWORD PTR [esi], 0
	je	SHORT $LN5@Init@3
$LL6@Init@3:

; 7026 : 			{
; 7027 : 				pEntry->pfnObjectMain(true); //initialize class resources

	mov	ecx, DWORD PTR [esi+32]
	push	1
	call	ecx

; 7028 : 				pEntry++;

	add	esi, 36					; 00000024H
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LL6@Init@3
$LN5@Init@3:

; 7029 : 			}
; 7030 : 		}
; 7031 : 	}
; 7032 : 	for (_ATL_OBJMAP_ENTRY** ppEntry = _AtlComModule.m_ppAutoObjMapFirst; ppEntry < _AtlComModule.m_ppAutoObjMapLast; ppEntry++)

	mov	esi, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+8
	cmp	esi, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+12
	jae	SHORT $LN16@Init@3
	npad	3
$LL4@Init@3:

; 7033 : 	{
; 7034 : 		if (*ppEntry != NULL)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@Init@3

; 7035 : 			(*ppEntry)->pfnObjectMain(true); //initialize class resources

	mov	edx, DWORD PTR [eax+32]
	push	1
	call	edx
$LN3@Init@3:
	add	esi, 4
	cmp	esi, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+12
	jb	SHORT $LL4@Init@3
$LN16@Init@3:

; 7036 : 	}
; 7037 : 	return S_OK;

	xor	eax, eax
	pop	esi

; 7038 : }

	ret	12					; 0000000cH
?Init@CComModule@ATL@@QAEJPAU_ATL_OBJMAP_ENTRY30@2@PAUHINSTANCE__@@PBU_GUID@@@Z ENDP ; ATL::CComModule::Init
_TEXT	ENDS
PUBLIC	?Term@CComModule@ATL@@QAEXXZ			; ATL::CComModule::Term
; Function compile flags: /Ogtpy
;	COMDAT ?Term@CComModule@ATL@@QAEXXZ
_TEXT	SEGMENT
?Term@CComModule@ATL@@QAEXXZ PROC			; ATL::CComModule::Term, COMDAT
; _this$ = ecx

; 7041 : {

	push	esi
	push	edi
	mov	edi, ecx

; 7042 : 	_ATL_OBJMAP_ENTRY* pEntry;
; 7043 : 	if (m_pObjMap != NULL)

	mov	esi, DWORD PTR [edi+44]
	test	esi, esi
	je	SHORT $LN6@Term@2

; 7044 : 	{
; 7045 : 		pEntry = m_pObjMap;
; 7046 : 		while (pEntry->pclsid != NULL)

	cmp	DWORD PTR [esi], 0
	je	SHORT $LN6@Term@2
$LL7@Term@2:

; 7047 : 		{
; 7048 : 			if (pEntry->pCF != NULL)

	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN5@Term@2

; 7049 : 				pEntry->pCF->Release();

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN5@Term@2:

; 7050 : 			pEntry->pCF = NULL;
; 7051 : 			pEntry->pfnObjectMain(false); //cleanup class resources

	mov	eax, DWORD PTR [esi+32]
	push	0
	mov	DWORD PTR [esi+16], 0
	call	eax

; 7052 : 			pEntry++;

	add	esi, 36					; 00000024H
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LL7@Term@2
$LN6@Term@2:

; 7053 : 		}
; 7054 : 	}
; 7055 : 
; 7056 : 	for (_ATL_OBJMAP_ENTRY** ppEntry = _AtlComModule.m_ppAutoObjMapFirst; ppEntry < _AtlComModule.m_ppAutoObjMapLast; ppEntry++)

	mov	esi, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+8
	cmp	esi, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+12
	jae	SHORT $LN2@Term@2
$LL4@Term@2:

; 7057 : 	{
; 7058 : 		if (*ppEntry != NULL)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@Term@2

; 7059 : 			(*ppEntry)->pfnObjectMain(false); //cleanup class resources

	mov	ecx, DWORD PTR [eax+32]
	push	0
	call	ecx
$LN3@Term@2:
	add	esi, 4
	cmp	esi, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+12
	jb	SHORT $LL4@Term@2
$LN2@Term@2:

; 7060 : 	}
; 7061 : #ifdef _DEBUG
; 7062 : 	// Prevent false memory leak reporting. ~CAtlWinModule may be too late.
; 7063 : 	_AtlWinModule.Term();		
; 7064 : #endif	// _DEBUG
; 7065 : 
; 7066 : 	CAtlModuleT<CComModule>::Term();

	cmp	DWORD PTR [edi+4], 0
	lea	esi, DWORD PTR [edi+4]
	je	SHORT $LN14@Term@2
	cmp	DWORD PTR [edi+12], 0
	je	SHORT $LN12@Term@2
	push	esi
	call	DWORD PTR __imp__AtlCallTermFunc@4
	mov	DWORD PTR [edi+12], 0
$LN12@Term@2:
	mov	eax, DWORD PTR [edi+40]
	test	eax, eax
	je	SHORT $LN11@Term@2
	mov	edx, DWORD PTR [eax]
	push	eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN11@Term@2:
	add	edi, 16					; 00000010H
	push	edi
	call	DWORD PTR __imp__DeleteCriticalSection@4
	mov	DWORD PTR [esi], 0
$LN14@Term@2:
	pop	edi
	pop	esi

; 7067 : }

	ret	0
?Term@CComModule@ATL@@QAEXXZ ENDP			; ATL::CComModule::Term
_TEXT	ENDS
PUBLIC	??0CComObjectRootBase@ATL@@QAE@XZ		; ATL::CComObjectRootBase::CComObjectRootBase
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcom.h
;	COMDAT ??0CComObjectRootBase@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CComObjectRootBase@ATL@@QAE@XZ PROC			; ATL::CComObjectRootBase::CComObjectRootBase, COMDAT
; _this$ = ecx

; 2178 : 	CComObjectRootBase()

	mov	eax, ecx

; 2179 : 	{
; 2180 : 		m_dwRef = 0L;

	mov	DWORD PTR [eax], 0

; 2181 : 	}

	ret	0
??0CComObjectRootBase@ATL@@QAE@XZ ENDP			; ATL::CComObjectRootBase::CComObjectRootBase
_TEXT	ENDS
PUBLIC	??1CComObjectRootBase@ATL@@QAE@XZ		; ATL::CComObjectRootBase::~CComObjectRootBase
; Function compile flags: /Ogtpy
;	COMDAT ??1CComObjectRootBase@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CComObjectRootBase@ATL@@QAE@XZ PROC			; ATL::CComObjectRootBase::~CComObjectRootBase, COMDAT
; _this$ = ecx

; 2184 : 	}

	ret	0
??1CComObjectRootBase@ATL@@QAE@XZ ENDP			; ATL::CComObjectRootBase::~CComObjectRootBase
_TEXT	ENDS
PUBLIC	?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ	; ATL::CComObjectRootBase::FinalConstruct
; Function compile flags: /Ogtpy
;	COMDAT ?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ
_TEXT	SEGMENT
?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ PROC	; ATL::CComObjectRootBase::FinalConstruct, COMDAT
; _this$ = ecx

; 2187 : 		return S_OK;

	xor	eax, eax

; 2188 : 	}

	ret	0
?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ENDP	; ATL::CComObjectRootBase::FinalConstruct
_TEXT	ENDS
PUBLIC	?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::_AtlFinalConstruct
; Function compile flags: /Ogtpy
;	COMDAT ?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ
_TEXT	SEGMENT
?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ PROC	; ATL::CComObjectRootBase::_AtlFinalConstruct, COMDAT
; _this$ = ecx

; 2192 : 		return S_OK;

	xor	eax, eax

; 2193 : 	}

	ret	0
?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ENDP	; ATL::CComObjectRootBase::_AtlFinalConstruct
_TEXT	ENDS
PUBLIC	?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ	; ATL::CComObjectRootBase::FinalRelease
; Function compile flags: /Ogtpy
;	COMDAT ?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT
?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ PROC	; ATL::CComObjectRootBase::FinalRelease, COMDAT
; _this$ = ecx

; 2194 : 	void FinalRelease() {}

	ret	0
?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ ENDP	; ATL::CComObjectRootBase::FinalRelease
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetCategoryMap@CComObjectRootBase@ATL@@SAPBU_ATL_CATMAP_ENTRY@2@XZ
_TEXT	SEGMENT
?GetCategoryMap@CComObjectRootBase@ATL@@SAPBU_ATL_CATMAP_ENTRY@2@XZ PROC ; ATL::CComObjectRootBase::GetCategoryMap, COMDAT

; 2211 : 	static const struct _ATL_CATMAP_ENTRY* GetCategoryMap() {return NULL;};

	xor	eax, eax
	ret	0
?GetCategoryMap@CComObjectRootBase@ATL@@SAPBU_ATL_CATMAP_ENTRY@2@XZ ENDP ; ATL::CComObjectRootBase::GetCategoryMap
_TEXT	ENDS
PUBLIC	?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z	; ATL::CComObjectRootBase::SetVoid
; Function compile flags: /Ogtpy
;	COMDAT ?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z PROC		; ATL::CComObjectRootBase::SetVoid, COMDAT
; _this$ = ecx

; 2246 : 	void SetVoid(void*) {}

	ret	4
?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z ENDP		; ATL::CComObjectRootBase::SetVoid
_TEXT	ENDS
PUBLIC	?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructAddRef
; Function compile flags: /Ogtpy
;	COMDAT ?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT
?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ PROC ; ATL::CComObjectRootBase::InternalFinalConstructAddRef, COMDAT
; _this$ = ecx

; 2247 : 	void InternalFinalConstructAddRef() {}

	ret	0
?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ ENDP ; ATL::CComObjectRootBase::InternalFinalConstructAddRef
_TEXT	ENDS
PUBLIC	?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructRelease
; Function compile flags: /Ogtpy
;	COMDAT ?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT
?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ PROC ; ATL::CComObjectRootBase::InternalFinalConstructRelease, COMDAT
; _this$ = ecx

; 2250 : 		ATLASSUME(m_dwRef == 0);
; 2251 : 	}

	ret	0
?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ ENDP ; ATL::CComObjectRootBase::InternalFinalConstructRelease
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ObjectMain@CComObjectRootBase@ATL@@SGX_N@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?ObjectMain@CComObjectRootBase@ATL@@SGX_N@Z PROC	; ATL::CComObjectRootBase::ObjectMain, COMDAT

; 2316 : }

	ret	4
?ObjectMain@CComObjectRootBase@ATL@@SGX_N@Z ENDP	; ATL::CComObjectRootBase::ObjectMain
_TEXT	ENDS
PUBLIC	?SetVoid@CComClassFactory@ATL@@QAEXPAX@Z	; ATL::CComClassFactory::SetVoid
; Function compile flags: /Ogtpy
;	COMDAT ?SetVoid@CComClassFactory@ATL@@QAEXPAX@Z
_TEXT	SEGMENT
_pv$ = 8						; size = 4
?SetVoid@CComClassFactory@ATL@@QAEXPAX@Z PROC		; ATL::CComClassFactory::SetVoid, COMDAT
; _this$ = ecx

; 3315 : 		m_pfnCreateInstance = (_ATL_CREATORFUNC*)pv;

	mov	eax, DWORD PTR _pv$[esp-4]
	mov	DWORD PTR [ecx+36], eax

; 3316 : 	}

	ret	4
?SetVoid@CComClassFactory@ATL@@QAEXPAX@Z ENDP		; ATL::CComClassFactory::SetVoid
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIRegistrar@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IRegistrar>::~CComPtrBase<IRegistrar>
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CComPtrBase@UIRegistrar@@@ATL@@QAE@XZ PROC		; ATL::CComPtrBase<IRegistrar>::~CComPtrBase<IRegistrar>, COMDAT
; _this$ = ecx

; 133  : 		if (p)

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN1@CComPtrBas

; 134  : 			p->Release();

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN1@CComPtrBas:

; 135  : 	}

	ret	0
??1?$CComPtrBase@UIRegistrar@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<IRegistrar>::~CComPtrBase<IRegistrar>
_TEXT	ENDS
PUBLIC	??B?$CComPtrBase@UIRegistrar@@@ATL@@QBEPAUIRegistrar@@XZ ; ATL::CComPtrBase<IRegistrar>::operator IRegistrar *
; Function compile flags: /Ogtpy
;	COMDAT ??B?$CComPtrBase@UIRegistrar@@@ATL@@QBEPAUIRegistrar@@XZ
_TEXT	SEGMENT
??B?$CComPtrBase@UIRegistrar@@@ATL@@QBEPAUIRegistrar@@XZ PROC ; ATL::CComPtrBase<IRegistrar>::operator IRegistrar *, COMDAT
; _this$ = ecx

; 138  : 		return p;

	mov	eax, DWORD PTR [ecx]

; 139  : 	}

	ret	0
??B?$CComPtrBase@UIRegistrar@@@ATL@@QBEPAUIRegistrar@@XZ ENDP ; ATL::CComPtrBase<IRegistrar>::operator IRegistrar *
_TEXT	ENDS
PUBLIC	??I?$CComPtrBase@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ ; ATL::CComPtrBase<IRegistrar>::operator&
; Function compile flags: /Ogtpy
;	COMDAT ??I?$CComPtrBase@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT
??I?$CComPtrBase@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ PROC ; ATL::CComPtrBase<IRegistrar>::operator&, COMDAT
; _this$ = ecx

; 148  : 	{

	mov	eax, ecx

; 149  : 		ATLASSERT(p==NULL);
; 150  : 		return &p;
; 151  : 	}

	ret	0
??I?$CComPtrBase@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ ENDP ; ATL::CComPtrBase<IRegistrar>::operator&
_TEXT	ENDS
PUBLIC	??C?$CComPtrBase@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ ; ATL::CComPtrBase<IRegistrar>::operator->
; Function compile flags: /Ogtpy
;	COMDAT ??C?$CComPtrBase@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT
??C?$CComPtrBase@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ PROC ; ATL::CComPtrBase<IRegistrar>::operator->, COMDAT
; _this$ = ecx

; 154  : 		ATLASSERT(p!=NULL);
; 155  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	eax, DWORD PTR [ecx]

; 156  : 	}

	ret	0
??C?$CComPtrBase@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ ENDP ; ATL::CComPtrBase<IRegistrar>::operator->
_TEXT	ENDS
PUBLIC	?RegisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CAtlModuleT<ATL::CComModule>::RegisterServer
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlbase.h
;	COMDAT ?RegisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT
_bRegTypeLib$ = 8					; size = 4
_pCLSID$ = 12						; size = 4
?RegisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z PROC ; ATL::CAtlModuleT<ATL::CComModule>::RegisterServer, COMDAT
; _this$ = ecx

; 2977 : 		(pCLSID);
; 2978 : 		(bRegTypeLib);
; 2979 : 
; 2980 : 		HRESULT hr = S_OK;
; 2981 : 
; 2982 : #ifndef _ATL_NO_COM_SUPPORT
; 2983 : 
; 2984 : 		hr = _AtlComModule.RegisterServer(bRegTypeLib, pCLSID);

	mov	eax, DWORD PTR _pCLSID$[esp-4]
	mov	ecx, DWORD PTR _bRegTypeLib$[esp-4]
	push	eax
	push	ecx
	push	OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
	call	DWORD PTR __imp__AtlComModuleRegisterServer@12

; 2985 : 
; 2986 : #endif	// _ATL_NO_COM_SUPPORT
; 2987 : 
; 2988 : 
; 2989 : #ifndef _ATL_NO_PERF_SUPPORT
; 2990 : 
; 2991 : 		if (SUCCEEDED(hr) && _pPerfRegFunc != NULL)

	test	eax, eax
	jl	SHORT $LN1@RegisterSe
	mov	ecx, DWORD PTR ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA ; ATL::_pPerfRegFunc
	test	ecx, ecx
	je	SHORT $LN1@RegisterSe

; 2992 : 			hr = (*_pPerfRegFunc)(_AtlBaseModule.m_hInst);

	mov	edx, DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
	push	edx
	call	ecx
	add	esp, 4
$LN1@RegisterSe:

; 2993 : 
; 2994 : #endif
; 2995 : 
; 2996 : 		return hr;
; 2997 : 	}

	ret	8
?RegisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z ENDP ; ATL::CAtlModuleT<ATL::CComModule>::RegisterServer
_TEXT	ENDS
PUBLIC	?UnregisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CAtlModuleT<ATL::CComModule>::UnregisterServer
; Function compile flags: /Ogtpy
;	COMDAT ?UnregisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT
_bUnRegTypeLib$ = 8					; size = 4
_pCLSID$ = 12						; size = 4
?UnregisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z PROC ; ATL::CAtlModuleT<ATL::CComModule>::UnregisterServer, COMDAT
; _this$ = ecx

; 3001 : 		(bUnRegTypeLib);
; 3002 : 		(pCLSID);
; 3003 : 
; 3004 : 		HRESULT hr = S_OK;
; 3005 : 
; 3006 : #ifndef _ATL_NO_PERF_SUPPORT
; 3007 : 
; 3008 : 		if (_pPerfUnRegFunc != NULL)

	mov	eax, DWORD PTR ?_pPerfUnRegFunc@ATL@@3P6AJXZA ; ATL::_pPerfUnRegFunc
	test	eax, eax
	je	SHORT $LN7@Unregister

; 3009 : 			hr = (*_pPerfUnRegFunc)();

	call	eax

; 3010 : 
; 3011 : #endif
; 3012 : 
; 3013 : #ifndef _ATL_NO_COM_SUPPORT
; 3014 : 
; 3015 : 		if (SUCCEEDED(hr))

	test	eax, eax
	jl	SHORT $LN1@Unregister
$LN7@Unregister:

; 3016 : 			hr = _AtlComModule.UnregisterServer(bUnRegTypeLib, pCLSID);

	mov	eax, DWORD PTR _pCLSID$[esp-4]
	mov	ecx, DWORD PTR _bUnRegTypeLib$[esp-4]
	push	eax
	push	ecx
	push	OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
	call	DWORD PTR __imp__AtlComModuleUnregisterServer@12
$LN1@Unregister:

; 3017 : 
; 3018 : #endif	// _ATL_NO_COM_SUPPORT
; 3019 : 
; 3020 : 		return hr;
; 3021 : 
; 3022 : 	}

	ret	8
?UnregisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z ENDP ; ATL::CAtlModuleT<ATL::CComModule>::UnregisterServer
_TEXT	ENDS
PUBLIC	??1CComAutoDeleteCriticalSection@ATL@@QAE@XZ	; ATL::CComAutoDeleteCriticalSection::~CComAutoDeleteCriticalSection
; Function compile flags: /Ogtpy
;	COMDAT ??1CComAutoDeleteCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CComAutoDeleteCriticalSection@ATL@@QAE@XZ PROC	; ATL::CComAutoDeleteCriticalSection::~CComAutoDeleteCriticalSection, COMDAT
; _this$ = ecx
	cmp	BYTE PTR [ecx+24], 0
	je	SHORT $LN6@CComAutoDe
	push	ecx
	mov	BYTE PTR [ecx+24], 0
	call	DWORD PTR __imp__DeleteCriticalSection@4
$LN6@CComAutoDe:
	ret	0
??1CComAutoDeleteCriticalSection@ATL@@QAE@XZ ENDP	; ATL::CComAutoDeleteCriticalSection::~CComAutoDeleteCriticalSection
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIRegistrar@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IRegistrar>::CComPtrBase<IRegistrar>
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIRegistrar@@@ATL@@IAE@XZ
_TEXT	SEGMENT
??0?$CComPtrBase@UIRegistrar@@@ATL@@IAE@XZ PROC		; ATL::CComPtrBase<IRegistrar>::CComPtrBase<IRegistrar>, COMDAT
; _this$ = ecx

; 113  : 	CComPtrBase() throw()

	mov	eax, ecx

; 114  : 	{
; 115  : 		p = NULL;

	mov	DWORD PTR [eax], 0

; 116  : 	}

	ret	0
??0?$CComPtrBase@UIRegistrar@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<IRegistrar>::CComPtrBase<IRegistrar>
_TEXT	ENDS
PUBLIC	?InitLibId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAXXZ ; ATL::CAtlModuleT<ATL::CComModule>::InitLibId
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlbase.h
;	COMDAT ?InitLibId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAXXZ
_TEXT	SEGMENT
?InitLibId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAXXZ PROC ; ATL::CAtlModuleT<ATL::CComModule>::InitLibId, COMDAT

; 2973 : 	}

	ret	0
?InitLibId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAXXZ ENDP ; ATL::CAtlModuleT<ATL::CComModule>::InitLibId
_TEXT	ENDS
PUBLIC	?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
; Function compile flags: /Ogtpy
;	COMDAT ?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ
_TEXT	SEGMENT
?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ PROC ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock, COMDAT
; _this$ = ecx

; 339  : {

	push	esi
	mov	esi, ecx

; 340  : 	HRESULT hr;
; 341  : 
; 342  : 	ATLASSERT( !m_bLocked );
; 343  : 	hr = m_cs.Lock();

	mov	eax, DWORD PTR [esi]
	push	eax
	call	DWORD PTR __imp__EnterCriticalSection@4

; 344  : 	if( FAILED( hr ) )
; 345  : 	{
; 346  : 		return( hr );
; 347  : 	}
; 348  : 	m_bLocked = true;

	mov	BYTE PTR [esi+4], 1

; 349  : 
; 350  : 	return( S_OK );

	xor	eax, eax
	pop	esi

; 351  : }

	ret	0
?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ENDP ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
_TEXT	ENDS
PUBLIC	??0CComAutoDeleteCriticalSection@ATL@@QAE@XZ	; ATL::CComAutoDeleteCriticalSection::CComAutoDeleteCriticalSection
; Function compile flags: /Ogtpy
;	COMDAT ??0CComAutoDeleteCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CComAutoDeleteCriticalSection@ATL@@QAE@XZ PROC	; ATL::CComAutoDeleteCriticalSection::CComAutoDeleteCriticalSection, COMDAT
; _this$ = ecx
	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx
	mov	BYTE PTR [eax+24], cl
	ret	0
??0CComAutoDeleteCriticalSection@ATL@@QAE@XZ ENDP	; ATL::CComAutoDeleteCriticalSection::CComAutoDeleteCriticalSection
_TEXT	ENDS
PUBLIC	??0ISySalObject@@QAE@XZ				; ISySalObject::ISySalObject
; Function compile flags: /Ogtpy
;	COMDAT ??0ISySalObject@@QAE@XZ
_TEXT	SEGMENT
??0ISySalObject@@QAE@XZ PROC				; ISySalObject::ISySalObject, COMDAT
; _this$ = ecx
	mov	eax, ecx
	ret	0
??0ISySalObject@@QAE@XZ ENDP				; ISySalObject::ISySalObject
_TEXT	ENDS
PUBLIC	??0ITracker2@@QAE@XZ				; ITracker2::ITracker2
; Function compile flags: /Ogtpy
;	COMDAT ??0ITracker2@@QAE@XZ
_TEXT	SEGMENT
??0ITracker2@@QAE@XZ PROC				; ITracker2::ITracker2, COMDAT
; _this$ = ecx
	mov	eax, ecx
	ret	0
??0ITracker2@@QAE@XZ ENDP				; ITracker2::ITracker2
; Function compile flags: /Ogtpy
; File d:\sysal2\smarttracker8.6\smarttracker8.cpp
_TEXT	ENDS
;	COMDAT ?GetMessageMap@CSmartTrackerApp@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetMessageMap@CSmartTrackerApp@@MBEPBUAFX_MSGMAP@@XZ PROC ; CSmartTrackerApp::GetMessageMap, COMDAT
; _this$ = ecx

; 41   : BEGIN_MESSAGE_MAP(CSmartTrackerApp, CWinApp)

	mov	eax, OFFSET ?messageMap@?1??GetThisMessageMap@CSmartTrackerApp@@KGPBUAFX_MSGMAP@@XZ@4U3@B
	ret	0
?GetMessageMap@CSmartTrackerApp@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CSmartTrackerApp::GetMessageMap
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCSmartTrackerApp@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSmartTrackerApp@@UAEPAXI@Z PROC			; CSmartTrackerApp::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CWinApp@@UAE@XZ			; CWinApp::~CWinApp
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN9@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN9@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GCSmartTrackerApp@@UAEPAXI@Z ENDP			; CSmartTrackerApp::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?InitInstance@CWinApp@@UAEHXZ:PROC		; CWinApp::InitInstance
EXTRN	?pHelpPath@CSmartTrackerClass@@2PADA:DWORD	; CSmartTrackerClass::pHelpPath
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
; Function compile flags: /Ogtpy
;	COMDAT ?InitInstance@CSmartTrackerApp@@UAEHXZ
_TEXT	SEGMENT
?InitInstance@CSmartTrackerApp@@UAEHXZ PROC		; CSmartTrackerApp::InitInstance, COMDAT
; _this$ = ecx

; 51   : {

	push	esi
	push	edi
	mov	esi, ecx

; 52   :     _Module.Init(ObjectMap, m_hInstance, &LIBID_SMARTTRACKERLib);

	mov	eax, DWORD PTR [esi+68]
	push	OFFSET _LIBID_SMARTTRACKERLib
	push	eax
	push	OFFSET _ObjectMap
	mov	ecx, OFFSET ?_Module@@3VCComModule@ATL@@A ; _Module
	call	?Init@CComModule@ATL@@QAEJPAU_ATL_OBJMAP_ENTRY30@2@PAUHINSTANCE__@@PBU_GUID@@@Z ; ATL::CComModule::Init

; 53   : 	CSmartTrackerClass::pHelpPath = new char[strlen(m_pszHelpFilePath) + 1];

	mov	eax, DWORD PTR [esi+100]
	lea	edx, DWORD PTR [eax+1]
$LL5@InitInstan:
	mov	cl, BYTE PTR [eax]
	add	eax, 1
	test	cl, cl
	jne	SHORT $LL5@InitInstan
	sub	eax, edx
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR ?pHelpPath@CSmartTrackerClass@@2PADA, eax ; CSmartTrackerClass::pHelpPath

; 54   : 	strcpy(CSmartTrackerClass::pHelpPath, m_pszHelpFilePath);

	mov	ecx, DWORD PTR [esi+100]
	add	esp, 4
	mov	edx, eax
$LL3@InitInstan:
	mov	al, BYTE PTR [ecx]
	mov	BYTE PTR [edx], al
	add	ecx, 1
	add	edx, 1
	test	al, al
	jne	SHORT $LL3@InitInstan

; 55   : 	strcpy(CSmartTrackerClass::pHelpPath + strlen(CSmartTrackerClass::pHelpPath) - 3, "chm");

	mov	edx, DWORD PTR ?pHelpPath@CSmartTrackerClass@@2PADA ; CSmartTrackerClass::pHelpPath
	mov	eax, edx
	lea	edi, DWORD PTR [eax+1]
	npad	4
$LL6@InitInstan:
	mov	cl, BYTE PTR [eax]
	add	eax, 1
	test	cl, cl
	jne	SHORT $LL6@InitInstan
	sub	eax, edi
	pop	edi

; 56   :     return CWinApp::InitInstance();

	mov	ecx, esi
	mov	DWORD PTR [eax+edx-3], 7170147		; 006d6863H
	pop	esi
	jmp	?InitInstance@CWinApp@@UAEHXZ		; CWinApp::InitInstance
?InitInstance@CSmartTrackerApp@@UAEHXZ ENDP		; CSmartTrackerApp::InitInstance
_TEXT	ENDS
EXTRN	?ExitInstance@CWinApp@@UAEHXZ:PROC		; CWinApp::ExitInstance
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
; Function compile flags: /Ogtpy
;	COMDAT ?ExitInstance@CSmartTrackerApp@@UAEHXZ
_TEXT	SEGMENT
?ExitInstance@CSmartTrackerApp@@UAEHXZ PROC		; CSmartTrackerApp::ExitInstance, COMDAT
; _this$ = ecx

; 60   : {

	push	esi
	mov	esi, ecx

; 61   :     _Module.Term();

	mov	ecx, OFFSET ?_Module@@3VCComModule@ATL@@A ; _Module
	call	?Term@CComModule@ATL@@QAEXXZ		; ATL::CComModule::Term

; 62   : 	delete [] CSmartTrackerClass::pHelpPath;

	mov	eax, DWORD PTR ?pHelpPath@CSmartTrackerClass@@2PADA ; CSmartTrackerClass::pHelpPath
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 63   :     return CWinApp::ExitInstance();

	mov	ecx, esi
	pop	esi
	jmp	?ExitInstance@CWinApp@@UAEHXZ		; CWinApp::ExitInstance
?ExitInstance@CSmartTrackerApp@@UAEHXZ ENDP		; CSmartTrackerApp::ExitInstance
_TEXT	ENDS
PUBLIC	_DllCanUnloadNow@0
EXTRN	?AfxDllCanUnloadNow@@YGJXZ:PROC			; AfxDllCanUnloadNow
EXTRN	??0AFX_MAINTAIN_STATE2@@QAE@PAVAFX_MODULE_STATE@@@Z:PROC ; AFX_MAINTAIN_STATE2::AFX_MAINTAIN_STATE2
EXTRN	?AfxGetStaticModuleState@@YGPAVAFX_MODULE_STATE@@XZ:PROC ; AfxGetStaticModuleState
; Function compile flags: /Ogtpy
;	COMDAT _DllCanUnloadNow@0
_TEXT	SEGMENT
__ctlState$ = -16					; size = 16
_DllCanUnloadNow@0 PROC					; COMDAT

; 70   : {

	sub	esp, 16					; 00000010H
	push	esi

; 71   :     AFX_MANAGE_STATE(AfxGetStaticModuleState());

	call	?AfxGetStaticModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetStaticModuleState
	push	eax
	lea	ecx, DWORD PTR __ctlState$[esp+24]
	call	??0AFX_MAINTAIN_STATE2@@QAE@PAVAFX_MODULE_STATE@@@Z ; AFX_MAINTAIN_STATE2::AFX_MAINTAIN_STATE2

; 72   :     return (AfxDllCanUnloadNow()==S_OK && _Module.GetLockCount()==0) ? S_OK : S_FALSE;

	call	?AfxDllCanUnloadNow@@YGJXZ		; AfxDllCanUnloadNow
	test	eax, eax
	jne	SHORT $LN3@DllCanUnlo
	cmp	DWORD PTR ?_Module@@3VCComModule@ATL@@A+8, eax
	jne	SHORT $LN3@DllCanUnlo
	xor	esi, esi
	jmp	SHORT $LN4@DllCanUnlo
$LN3@DllCanUnlo:
	mov	esi, 1
$LN4@DllCanUnlo:
	mov	eax, DWORD PTR __ctlState$[esp+24]
	test	eax, eax
	je	SHORT $LN8@DllCanUnlo
	mov	ecx, DWORD PTR __ctlState$[esp+20]
	mov	DWORD PTR [eax+4], ecx
$LN8@DllCanUnlo:
	cmp	DWORD PTR __ctlState$[esp+32], 0
	je	SHORT $LN11@DllCanUnlo
	mov	edx, DWORD PTR __ctlState$[esp+28]
	push	edx
	push	0
	call	?AfxDeactivateActCtx@@YGHKK@Z		; AfxDeactivateActCtx
$LN11@DllCanUnlo:
	mov	eax, esi
	pop	esi

; 73   : }

	add	esp, 16					; 00000010H
	ret	0
_DllCanUnloadNow@0 ENDP
_TEXT	ENDS
PUBLIC	?InternalAddRef@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalAddRef
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcom.h
;	COMDAT ?InternalAddRef@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT
?InternalAddRef@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ PROC ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalAddRef, COMDAT
; _this$ = ecx

; 2358 : 		ATLASSUME(m_dwRef != -1L);
; 2359 : 		return _ThreadModel::Increment(&m_dwRef);

	push	ecx
	call	DWORD PTR __imp__InterlockedIncrement@4

; 2360 : 	}

	ret	0
?InternalAddRef@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ ENDP ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalAddRef
_TEXT	ENDS
PUBLIC	?InternalRelease@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalRelease
; Function compile flags: /Ogtpy
;	COMDAT ?InternalRelease@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT
?InternalRelease@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ PROC ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalRelease, COMDAT
; _this$ = ecx

; 2363 : #ifdef _DEBUG
; 2364 : 		LONG nRef = _ThreadModel::Decrement(&m_dwRef);
; 2365 : 		if (nRef < -(LONG_MAX / 2))
; 2366 : 		{
; 2367 : 			ATLASSERT(0 && _T("Release called on a pointer that has already been released"));
; 2368 : 		}
; 2369 : 		return nRef;
; 2370 : #else
; 2371 : 		return _ThreadModel::Decrement(&m_dwRef);

	push	ecx
	call	DWORD PTR __imp__InterlockedDecrement@4

; 2372 : #endif
; 2373 : 	}

	ret	0
?InternalRelease@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ ENDP ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalRelease
_TEXT	ENDS
PUBLIC	?_AtlInitialConstruct@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEJXZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::_AtlInitialConstruct
; Function compile flags: /Ogtpy
;	COMDAT ?_AtlInitialConstruct@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEJXZ
_TEXT	SEGMENT
?_AtlInitialConstruct@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEJXZ PROC ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::_AtlInitialConstruct, COMDAT
; _this$ = ecx

; 2376 : 	{

	push	esi

; 2377 : 		return m_critsec.Init();

	lea	esi, DWORD PTR [ecx+4]
	mov	ecx, esi
	call	?Init@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Init
	test	eax, eax
	jl	SHORT $LN3@AtlInitial
	mov	BYTE PTR [esi+24], 1
$LN3@AtlInitial:
	pop	esi

; 2378 : 	}

	ret	0
?_AtlInitialConstruct@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEJXZ ENDP ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::_AtlInitialConstruct
_TEXT	ENDS
PUBLIC	?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Unlock
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlbase.h
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ PROC ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Unlock, COMDAT
; _this$ = ecx

; 355  : {

	push	esi
	mov	esi, ecx

; 356  : 	ATLASSUME( m_bLocked );
; 357  : 	m_cs.Unlock();

	mov	eax, DWORD PTR [esi]
	push	eax
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 358  : 	m_bLocked = false;

	mov	BYTE PTR [esi+4], 0
	pop	esi

; 359  : }

	ret	0
?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Unlock
_TEXT	ENDS
PUBLIC	??0CAtlModule@ATL@@QAE@XZ			; ATL::CAtlModule::CAtlModule
; Function compile flags: /Ogtpy
;	COMDAT ??0CAtlModule@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CAtlModule@ATL@@QAE@XZ PROC				; ATL::CAtlModule::CAtlModule, COMDAT
; _this$ = ecx

; 2702 : 	CAtlModule() throw()

	xor	eax, eax
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi+16], eax
	lea	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], eax

; 2703 : 	{
; 2704 : 		// Should have only one instance of a class 
; 2705 : 		// derived from CAtlModule in a project.
; 2706 : 		ATLASSERT(_pAtlModule == NULL);
; 2707 : 		cbSize = 0;

	mov	DWORD PTR [esi+4], eax

; 2708 : 		m_pTermFuncs = NULL;

	mov	DWORD PTR [esi+12], eax

; 2709 : 
; 2710 : 		m_nLockCnt = 0;

	mov	DWORD PTR [esi+8], eax

; 2711 : 		_pAtlModule = this;

	mov	DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A, esi ; ATL::_pAtlModule

; 2712 : 		m_pGIT = NULL;

	mov	DWORD PTR [esi+40], eax

; 2713 : 
; 2714 : 		if (FAILED(m_csStaticDataInitAndTypeInfo.Init()))

	call	?Init@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Init
	test	eax, eax

; 2724 : 	}

	mov	eax, esi
	jge	SHORT $LN1@CAtlModule

; 2715 : 		{
; 2716 : 			ATLTRACE(atlTraceGeneral, 0, _T("ERROR : Unable to initialize critical section in CAtlModule\n"));
; 2717 : 			ATLASSERT(0);
; 2718 : 			CAtlBaseModule::m_bInitFailed = true;

	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed
	pop	esi

; 2724 : 	}

	ret	0
$LN1@CAtlModule:

; 2719 : 			return;
; 2720 : 		}
; 2721 : 
; 2722 : 		// Set cbSize on success.
; 2723 : 		cbSize = sizeof(_ATL_MODULE);

	mov	DWORD PTR [esi+4], 36			; 00000024H
	pop	esi

; 2724 : 	}

	ret	0
??0CAtlModule@ATL@@QAE@XZ ENDP				; ATL::CAtlModule::CAtlModule
_TEXT	ENDS
PUBLIC	??1CAtlModule@ATL@@UAE@XZ			; ATL::CAtlModule::~CAtlModule
; Function compile flags: /Ogtpy
;	COMDAT ??1CAtlModule@ATL@@UAE@XZ
_TEXT	SEGMENT
??1CAtlModule@ATL@@UAE@XZ PROC				; ATL::CAtlModule::~CAtlModule, COMDAT
; _this$ = ecx

; 2748 : 	{

	push	esi
	mov	esi, ecx

; 2749 : 		Term();

	cmp	DWORD PTR [esi+4], 0
	push	edi
	lea	edi, DWORD PTR [esi+4]
	je	SHORT $LN8@CAtlModule@2
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN6@CAtlModule@2
	push	edi
	call	DWORD PTR __imp__AtlCallTermFunc@4
	mov	DWORD PTR [esi+12], 0
$LN6@CAtlModule@2:
	mov	eax, DWORD PTR [esi+40]
	test	eax, eax
	je	SHORT $LN5@CAtlModule@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN5@CAtlModule@2:
	add	esi, 16					; 00000010H
	push	esi
	call	DWORD PTR __imp__DeleteCriticalSection@4
	mov	DWORD PTR [edi], 0
$LN8@CAtlModule@2:
	pop	edi
	pop	esi

; 2750 : 	}

	ret	0
??1CAtlModule@ATL@@UAE@XZ ENDP				; ATL::CAtlModule::~CAtlModule
_TEXT	ENDS
PUBLIC	??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ		; ATL::CComPtr<IRegistrar>::~CComPtr<IRegistrar>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IRegistrar>::~CComPtr<IRegistrar>, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN3@CComPtr
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN3@CComPtr:
	ret	0
??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IRegistrar>::~CComPtr<IRegistrar>
_TEXT	ENDS
PUBLIC	??1?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAE@XZ	; ATL::CAtlModuleT<ATL::CComModule>::~CAtlModuleT<ATL::CComModule>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
??1?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAE@XZ PROC	; ATL::CAtlModuleT<ATL::CComModule>::~CAtlModuleT<ATL::CComModule>, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+4], 0
	push	edi
	lea	edi, DWORD PTR [esi+4]
	je	SHORT $LN10@CAtlModule@3
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN8@CAtlModule@3
	push	edi
	call	DWORD PTR __imp__AtlCallTermFunc@4
	mov	DWORD PTR [esi+12], 0
$LN8@CAtlModule@3:
	mov	eax, DWORD PTR [esi+40]
	test	eax, eax
	je	SHORT $LN7@CAtlModule@3
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN7@CAtlModule@3:
	add	esi, 16					; 00000010H
	push	esi
	call	DWORD PTR __imp__DeleteCriticalSection@4
	mov	DWORD PTR [edi], 0
$LN10@CAtlModule@3:
	pop	edi
	pop	esi
	ret	0
??1?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAE@XZ ENDP	; ATL::CAtlModuleT<ATL::CComModule>::~CAtlModuleT<ATL::CComModule>
_TEXT	ENDS
PUBLIC	??1CRegKey@ATL@@QAE@XZ				; ATL::CRegKey::~CRegKey
; Function compile flags: /Ogtpy
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CRegKey@ATL@@QAE@XZ PROC				; ATL::CRegKey::~CRegKey, COMDAT
; _this$ = ecx

; 5186 : {Close();}

	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@CRegKey
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4
	mov	DWORD PTR [esi], 0
$LN3@CRegKey:
	pop	esi
	ret	0
??1CRegKey@ATL@@QAE@XZ ENDP				; ATL::CRegKey::~CRegKey
_TEXT	ENDS
PUBLIC	_lpszKey$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z	; ATL::CRegKey::RecurseDeleteKey
EXTRN	__imp__RegEnumKeyExA@32:PROC
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT
_key$ = -284						; size = 4
_dwSize$ = -280						; size = 4
_hKey$125782 = -276					; size = 4
_lpszKey$GSCopy$ = -272					; size = 4
_time$ = -268						; size = 8
_szBuffer$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_lpszKey$ = 8						; size = 4
?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z PROC		; ATL::CRegKey::RecurseDeleteKey, COMDAT
; _this$ = ecx

; 5674 : {

	sub	esp, 284				; 0000011cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+284], eax
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR _lpszKey$[esp+292]
	mov	ebp, ecx

; 5675 : 	CRegKey key;
; 5676 : 	LONG lRes = key.Open(m_hKey, lpszKey, KEY_READ | KEY_WRITE);

	mov	eax, DWORD PTR [ebp]
	lea	ecx, DWORD PTR _hKey$125782[esp+296]
	push	ecx
	push	131103					; 0002001fH
	push	0
	push	edi
	push	eax

; 5697 : 	return DeleteSubKey(lpszKey);

	mov	DWORD PTR _lpszKey$GSCopy$[esp+316], edi
	mov	DWORD PTR _key$[esp+316], 0
	mov	DWORD PTR _hKey$125782[esp+316], 0
	call	DWORD PTR __imp__RegOpenKeyExA@20
	mov	ecx, DWORD PTR _key$[esp+296]
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN42@RecurseDel

; 5675 : 	CRegKey key;
; 5676 : 	LONG lRes = key.Open(m_hKey, lpszKey, KEY_READ | KEY_WRITE);

	test	ecx, ecx
	je	SHORT $LN44@RecurseDel
	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4
$LN44@RecurseDel:

; 5677 : 	if (lRes != ERROR_SUCCESS)

	test	eax, eax
	mov	ecx, DWORD PTR _hKey$125782[esp+296]
	mov	esi, eax
	mov	DWORD PTR _key$[esp+296], ecx
	je	SHORT $LN5@RecurseDel
$LN42@RecurseDel:

; 5678 : 	{
; 5679 : 		if (lRes != ERROR_FILE_NOT_FOUND && lRes != ERROR_PATH_NOT_FOUND)
; 5680 : 		{
; 5681 : 			ATLTRACE(atlTraceCOM, 0, _T("CRegKey::RecurseDeleteKey : Failed to Open Key %s(Error = %d)\n"), lpszKey, lRes);
; 5682 : 		}
; 5683 : 		return lRes;

	test	ecx, ecx
	je	$LN36@RecurseDel
	push	ecx
	jmp	$LN45@RecurseDel
$LN5@RecurseDel:

; 5684 : 	}
; 5685 : 	FILETIME time;
; 5686 : 	DWORD dwSize = 256;
; 5687 : 	TCHAR szBuffer[256];
; 5688 : 	while (RegEnumKeyEx(key.m_hKey, 0, szBuffer, &dwSize, NULL, NULL, NULL,
; 5689 : 		&time)==ERROR_SUCCESS)

	mov	esi, DWORD PTR __imp__RegEnumKeyExA@32
	lea	edx, DWORD PTR _time$[esp+296]
	push	edx
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _dwSize$[esp+312]
	push	eax
	lea	edx, DWORD PTR _szBuffer$[esp+316]
	push	edx
	push	0
	push	ecx
	mov	DWORD PTR _dwSize$[esp+328], 256	; 00000100H
	call	esi
	test	eax, eax
	jne	SHORT $LN2@RecurseDel
	npad	8
$LL3@RecurseDel:

; 5690 : 	{
; 5691 : 		lRes = key.RecurseDeleteKey(szBuffer);

	lea	eax, DWORD PTR _szBuffer$[esp+296]
	push	eax
	lea	ecx, DWORD PTR _key$[esp+300]
	call	?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z ; ATL::CRegKey::RecurseDeleteKey
	mov	edi, eax

; 5692 : 		if (lRes != ERROR_SUCCESS)

	test	edi, edi
	jne	SHORT $LN40@RecurseDel
	lea	ecx, DWORD PTR _time$[esp+296]
	push	ecx
	mov	ecx, DWORD PTR _key$[esp+300]
	push	eax
	push	eax
	push	eax
	lea	edx, DWORD PTR _dwSize$[esp+312]
	push	edx
	lea	eax, DWORD PTR _szBuffer$[esp+316]
	push	eax
	push	edi
	push	ecx

; 5694 : 		dwSize = 256;

	mov	DWORD PTR _dwSize$[esp+328], 256	; 00000100H
	call	esi
	test	eax, eax
	je	SHORT $LL3@RecurseDel

; 5692 : 		if (lRes != ERROR_SUCCESS)

	mov	edi, DWORD PTR _lpszKey$GSCopy$[esp+296]
$LN2@RecurseDel:

; 5695 : 	}
; 5696 : 	key.Close();

	mov	eax, DWORD PTR _key$[esp+296]
	test	eax, eax
	je	SHORT $LN31@RecurseDel
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4
	mov	DWORD PTR _key$[esp+296], 0

; 5697 : 	return DeleteSubKey(lpszKey);

$LN31@RecurseDel:
	mov	edx, DWORD PTR [ebp]
	push	edi
	push	edx
	call	DWORD PTR __imp__RegDeleteKeyA@8
	mov	esi, eax
	mov	eax, DWORD PTR _key$[esp+296]
	test	eax, eax
	je	SHORT $LN36@RecurseDel
	push	eax
$LN45@RecurseDel:
	call	DWORD PTR __imp__RegCloseKey@4
$LN36@RecurseDel:
	mov	eax, esi
$LN6@RecurseDel:

; 5698 : }

	mov	ecx, DWORD PTR __$ArrayPad$[esp+296]
	pop	edi
	pop	esi
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	ret	4
$LN40@RecurseDel:

; 5693 : 			return lRes;

	mov	eax, DWORD PTR _key$[esp+296]
	test	eax, eax
	je	SHORT $LN23@RecurseDel
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4
$LN23@RecurseDel:
	mov	eax, edi
	jmp	SHORT $LN6@RecurseDel
?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z ENDP		; ATL::CRegKey::RecurseDeleteKey
_TEXT	ENDS
PUBLIC	?RegisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CComModule::RegisterServer
EXTRN	__imp__AtlRegisterClassCategoriesHelper@12:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?RegisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT
_bRegTypeLib$ = 8					; size = 4
_pCLSID$ = 12						; size = 4
?RegisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z PROC	; ATL::CComModule::RegisterServer, COMDAT
; _this$ = ecx

; 7162 : {

	push	ebx
	push	ebp

; 7163 : 	HRESULT hr = S_OK;
; 7164 : 	_ATL_OBJMAP_ENTRY* pEntry = m_pObjMap;
; 7165 : 	if (pEntry != NULL)

	mov	ebp, DWORD PTR _pCLSID$[esp+4]
	push	esi
	mov	esi, DWORD PTR [ecx+44]
	push	edi
	xor	edi, edi
	test	esi, esi
	je	SHORT $LN21@RegisterSe@2

; 7166 : 	{
; 7167 : 		for (;pEntry->pclsid != NULL; pEntry++)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN21@RegisterSe@2
	mov	ebx, DWORD PTR __imp__AtlRegisterClassCategoriesHelper@12
	npad	3
$LL8@RegisterSe@2:

; 7168 : 		{
; 7169 : 			if (pCLSID != NULL)

	test	ebp, ebp
	je	SHORT $LN4@RegisterSe@2

; 7170 : 			{
; 7171 : 				if (!IsEqualGUID(*pCLSID, *pEntry->pclsid))

	push	eax
	push	ebp
	call	_IsEqualGUID
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@RegisterSe@2
$LN4@RegisterSe@2:

; 7172 : 					continue;
; 7173 : 			}
; 7174 : 			hr = pEntry->pfnUpdateRegistry(TRUE);

	mov	eax, DWORD PTR [esi+4]
	push	1
	call	eax

; 7175 : 			if (FAILED(hr))

	test	eax, eax
	jl	SHORT $LN1@RegisterSe@2

; 7176 : 				break;
; 7177 : 			hr = AtlRegisterClassCategoriesHelper( *pEntry->pclsid,
; 7178 : 				pEntry->pfnGetCategoryMap(), TRUE );

	mov	ecx, DWORD PTR [esi+28]
	push	1
	call	ecx
	mov	edx, DWORD PTR [esi]
	push	eax
	push	edx
	call	ebx
	mov	edi, eax

; 7179 : 			if (FAILED(hr))

	test	edi, edi
	jl	SHORT $LN23@RegisterSe@2
$LN7@RegisterSe@2:

; 7166 : 	{
; 7167 : 		for (;pEntry->pclsid != NULL; pEntry++)

	mov	eax, DWORD PTR [esi+36]
	add	esi, 36					; 00000024H
	test	eax, eax
	jne	SHORT $LL8@RegisterSe@2

; 7180 : 				break;
; 7181 : 		}
; 7182 : 	}
; 7183 : 	if (SUCCEEDED(hr))

	test	edi, edi
	jl	SHORT $LN23@RegisterSe@2
$LN21@RegisterSe@2:

; 7184 : 		hr = CAtlModuleT<CComModule>::RegisterServer(bRegTypeLib, pCLSID);

	mov	eax, DWORD PTR _bRegTypeLib$[esp+12]
	push	ebp
	push	eax
	push	OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
	call	DWORD PTR __imp__AtlComModuleRegisterServer@12
	test	eax, eax
	jl	SHORT $LN1@RegisterSe@2
	mov	ecx, DWORD PTR ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA ; ATL::_pPerfRegFunc
	test	ecx, ecx
	je	SHORT $LN1@RegisterSe@2
	mov	edx, DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
	push	edx
	call	ecx
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 7186 : }

	ret	8
$LN23@RegisterSe@2:

; 7185 : 	return hr;

	mov	eax, edi
$LN1@RegisterSe@2:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 7186 : }

	ret	8
?RegisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z ENDP	; ATL::CComModule::RegisterServer
_TEXT	ENDS
PUBLIC	?UnregisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CComModule::UnregisterServer
; Function compile flags: /Ogtpy
;	COMDAT ?UnregisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT
_bUnRegTypeLib$ = 8					; size = 4
_pCLSID$ = 12						; size = 4
?UnregisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z PROC ; ATL::CComModule::UnregisterServer, COMDAT
; _this$ = ecx

; 7189 : {

	push	ebx
	push	ebp

; 7190 : 	HRESULT hr = S_OK;	
; 7191 : 	_ATL_OBJMAP_ENTRY* pEntry = m_pObjMap;
; 7192 : 	if (pEntry != NULL)

	mov	ebp, DWORD PTR _pCLSID$[esp+4]
	push	esi
	mov	esi, DWORD PTR [ecx+44]
	push	edi
	xor	edi, edi
	test	esi, esi
	je	SHORT $LN22@Unregister@2

; 7193 : 	{
; 7194 : 		for (;pEntry->pclsid != NULL; pEntry++)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN22@Unregister@2
	mov	ebx, DWORD PTR __imp__AtlRegisterClassCategoriesHelper@12
	npad	3
$LL8@Unregister@2:

; 7195 : 		{
; 7196 : 			if (pCLSID != NULL)

	test	ebp, ebp
	je	SHORT $LN4@Unregister@2

; 7197 : 			{
; 7198 : 				if (!IsEqualGUID(*pCLSID, *pEntry->pclsid))

	push	eax
	push	ebp
	call	_IsEqualGUID
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@Unregister@2
$LN4@Unregister@2:

; 7199 : 					continue;
; 7200 : 			}
; 7201 : 			hr = AtlRegisterClassCategoriesHelper( *pEntry->pclsid,
; 7202 : 				pEntry->pfnGetCategoryMap(), FALSE );

	mov	eax, DWORD PTR [esi+28]
	push	0
	call	eax
	mov	ecx, DWORD PTR [esi]
	push	eax
	push	ecx
	call	ebx

; 7203 : 			if (FAILED(hr))

	test	eax, eax
	jl	SHORT $LN1@Unregister@2

; 7204 : 				break;
; 7205 : 			hr = pEntry->pfnUpdateRegistry(FALSE); //unregister

	mov	edx, DWORD PTR [esi+4]
	push	0
	call	edx
	mov	edi, eax

; 7206 : 			if (FAILED(hr))

	test	edi, edi
	jl	SHORT $LN25@Unregister@2
$LN7@Unregister@2:

; 7193 : 	{
; 7194 : 		for (;pEntry->pclsid != NULL; pEntry++)

	mov	eax, DWORD PTR [esi+36]
	add	esi, 36					; 00000024H
	test	eax, eax
	jne	SHORT $LL8@Unregister@2

; 7207 : 				break;
; 7208 : 		}
; 7209 : 	}
; 7210 : 	if (SUCCEEDED(hr))

	test	edi, edi
	jl	SHORT $LN25@Unregister@2
$LN22@Unregister@2:

; 7211 : 		hr = CAtlModuleT<CComModule>::UnregisterServer(bUnRegTypeLib, pCLSID);

	mov	eax, DWORD PTR ?_pPerfUnRegFunc@ATL@@3P6AJXZA ; ATL::_pPerfUnRegFunc
	test	eax, eax
	je	SHORT $LN23@Unregister@2
	call	eax
	test	eax, eax
	jl	SHORT $LN1@Unregister@2
$LN23@Unregister@2:
	mov	eax, DWORD PTR _bUnRegTypeLib$[esp+12]
	push	ebp
	push	eax
	push	OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
	call	DWORD PTR __imp__AtlComModuleUnregisterServer@12
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 7213 : }

	ret	8
$LN25@Unregister@2:

; 7212 : 	return hr;

	mov	eax, edi
$LN1@Unregister@2:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 7213 : }

	ret	8
?UnregisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z ENDP ; ATL::CComModule::UnregisterServer
_TEXT	ENDS
PUBLIC	??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ		; ATL::CComPtr<IRegistrar>::CComPtr<IRegistrar>
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IRegistrar>::CComPtr<IRegistrar>, COMDAT
; _this$ = ecx

; 258  : 	CComPtr() throw()

	mov	eax, ecx
	mov	DWORD PTR [eax], 0

; 259  : 	{
; 260  : 	}

	ret	0
??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IRegistrar>::CComPtr<IRegistrar>
_TEXT	ENDS
PUBLIC	??0?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAE@XZ	; ATL::CAtlModuleT<ATL::CComModule>::CAtlModuleT<ATL::CComModule>
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlbase.h
;	COMDAT ??0?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAE@XZ PROC	; ATL::CAtlModuleT<ATL::CComModule>::CAtlModuleT<ATL::CComModule>, COMDAT
; _this$ = ecx

; 2966 : 	CAtlModuleT() throw()

	xor	eax, eax
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi+16], eax
	lea	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A, esi ; ATL::_pAtlModule
	mov	DWORD PTR [esi+40], eax
	call	?Init@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Init
	test	eax, eax

; 2967 : 	{
; 2968 : 		T::InitLibId();
; 2969 : 	}

	mov	eax, esi
	jge	SHORT $LN3@CAtlModule@4

; 2966 : 	CAtlModuleT() throw()

	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed
	pop	esi

; 2967 : 	{
; 2968 : 		T::InitLibId();
; 2969 : 	}

	ret	0

; 2966 : 	CAtlModuleT() throw()

$LN3@CAtlModule@4:
	mov	DWORD PTR [esi+4], 36			; 00000024H
	pop	esi

; 2967 : 	{
; 2968 : 		T::InitLibId();
; 2969 : 	}

	ret	0
??0?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CAtlModuleT<ATL::CComModule>::CAtlModuleT<ATL::CComModule>
_TEXT	ENDS
PUBLIC	??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::~CComObjectRootEx<ATL::CComMultiThreadModel>
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcom.h
;	COMDAT ??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ PROC ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::~CComObjectRootEx<ATL::CComMultiThreadModel>, COMDAT
; _this$ = ecx

; 2354 : 	~CComObjectRootEx() {}

	cmp	BYTE PTR [ecx+28], 0
	lea	eax, DWORD PTR [ecx+4]
	je	SHORT $LN9@CComObject
	push	eax
	mov	BYTE PTR [eax+24], 0
	call	DWORD PTR __imp__DeleteCriticalSection@4
$LN9@CComObject:
	ret	0
??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::~CComObjectRootEx<ATL::CComMultiThreadModel>
_TEXT	ENDS
PUBLIC	??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlbase.h
;	COMDAT ??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z
_TEXT	SEGMENT
_cs$ = 8						; size = 4
_bInitialLock$ = 12					; size = 1
??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z PROC ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>, COMDAT
; _this$ = ecx

; 316  : 	if( bInitialLock )

	cmp	BYTE PTR _bInitialLock$[esp-4], 0
	mov	eax, DWORD PTR _cs$[esp-4]
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], eax
	mov	BYTE PTR [esi+4], 0
	je	SHORT $LN10@CComCritSe

; 317  : 	{
; 318  : 		HRESULT hr;
; 319  : 
; 320  : 		hr = Lock();

	push	eax
	call	DWORD PTR __imp__EnterCriticalSection@4
	mov	BYTE PTR [esi+4], 1
$LN10@CComCritSe:

; 321  : 		if( FAILED( hr ) )
; 322  : 		{
; 323  : 			AtlThrow( hr );
; 324  : 		}
; 325  : 	}
; 326  : }

	mov	eax, esi
	pop	esi
	ret	8
??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z ENDP ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>
_TEXT	ENDS
PUBLIC	??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ PROC ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>, COMDAT
; _this$ = ecx

; 330  : {

	push	esi
	mov	esi, ecx

; 331  : 	if( m_bLocked )

	cmp	BYTE PTR [esi+4], 0
	je	SHORT $LN7@CComCritSe@2

; 332  : 	{
; 333  : 		Unlock();

	mov	eax, DWORD PTR [esi]
	push	eax
	call	DWORD PTR __imp__LeaveCriticalSection@4
	mov	BYTE PTR [esi+4], 0
$LN7@CComCritSe@2:
	pop	esi

; 334  : 	}
; 335  : }

	ret	0
??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
_TEXT	ENDS
PUBLIC	??1CSmartTrackerClass@@UAE@XZ			; CSmartTrackerClass::~CSmartTrackerClass
EXTRN	__imp__CoTaskMemFree@4:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__SetEvent@4:PROC
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcom.h
xdata$x	SEGMENT
__unwindtable$??1CSmartTrackerClass@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CSmartTrackerClass@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CSmartTrackerClass@@UAE@XZ$1
__ehfuncinfo$??1CSmartTrackerClass@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CSmartTrackerClass@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File d:\sysal2\smarttracker8.6\smarttrackerclass.h
xdata$x	ENDS
;	COMDAT ??1CSmartTrackerClass@@UAE@XZ
_TEXT	SEGMENT
$T126032 = -40						; size = 4
_i$ = -36						; size = 4
_this$ = -32						; size = 4
__ctlState$ = -28					; size = 16
__$EHRec$ = -12						; size = 12
??1CSmartTrackerClass@@UAE@XZ PROC			; CSmartTrackerClass::~CSmartTrackerClass, COMDAT
; _this$ = ecx

; 186  : 	{

	push	-1
	push	__ehhandler$??1CSmartTrackerClass@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+60]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+60], esi
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[esp+68], ebx

; 187  : 		AFX_MANAGE_STATE(AfxGetStaticModuleState())

	call	?AfxGetStaticModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetStaticModuleState
	push	eax
	lea	ecx, DWORD PTR __ctlState$[esp+64]
	call	??0AFX_MAINTAIN_STATE2@@QAE@PAVAFX_MODULE_STATE@@@Z ; AFX_MAINTAIN_STATE2::AFX_MAINTAIN_STATE2

; 188  : 
; 189  : 		int i;
; 190  : 		SetEvent(HTerminate);

	mov	eax, DWORD PTR [esi+1124]
	push	eax
	mov	BYTE PTR __$EHRec$[esp+72], 1
	call	DWORD PTR __imp__SetEvent@4

; 191  : 		for (i = 1; i < MaxProcessors; i++)

	mov	ebp, DWORD PTR __imp__CloseHandle@4
	mov	eax, 1
	cmp	DWORD PTR [esi+1132], eax
	mov	DWORD PTR _i$[esp+60], eax
	jle	SHORT $LN8@CSmartTrac

; 186  : 	{

	mov	edi, 40					; 00000028H
$LL10@CSmartTrac:

; 192  : 			if (ThreadInfo[i].HThread)

	mov	ecx, DWORD PTR [esi+1140]
	mov	eax, DWORD PTR [ecx+edi+24]
	cmp	eax, ebx
	je	SHORT $LN9@CSmartTrac

; 193  : 			{
; 194  : 				WaitForSingleObject(ThreadInfo[i].HThread, INFINITE);

	push	-1
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8

; 195  : 				CloseHandle(ThreadInfo[i].HThread);

	mov	edx, DWORD PTR [esi+1140]
	mov	eax, DWORD PTR [edx+edi+24]
	push	eax
	call	ebp

; 196  : 				CloseHandle(ThreadInfo[i].HFinished);

	mov	ecx, DWORD PTR [esi+1140]
	mov	edx, DWORD PTR [ecx+edi+20]
	push	edx
	call	ebp

; 197  : 				ThreadInfo[i].HThread = 0;

	mov	eax, DWORD PTR [esi+1140]
	mov	DWORD PTR [eax+edi+24], ebx

; 198  : 				ThreadInfo[i].HFinished = 0;

	mov	ecx, DWORD PTR [esi+1140]
	mov	DWORD PTR [ecx+edi+20], ebx
$LN9@CSmartTrac:
	mov	eax, DWORD PTR _i$[esp+60]
	add	eax, 1
	add	edi, 40					; 00000028H
	cmp	eax, DWORD PTR [esi+1132]
	mov	DWORD PTR _i$[esp+60], eax
	jl	SHORT $LL10@CSmartTrac
$LN8@CSmartTrac:

; 199  : 			}
; 200  : 		CloseHandle(HStart);

	mov	edx, DWORD PTR [esi+1120]
	push	edx
	call	ebp

; 201  : 		CloseHandle(HReset);

	mov	eax, DWORD PTR [esi+1128]
	push	eax
	call	ebp

; 202  : 		CloseHandle(HTerminate);

	mov	ecx, DWORD PTR [esi+1124]
	push	ecx
	call	ebp

; 203  : 
; 204  : 		if (T.GrainSpace)

	mov	eax, DWORD PTR [esi+964]
	cmp	eax, ebx
	mov	edi, DWORD PTR __imp__CoTaskMemFree@4
	je	SHORT $LN6@CSmartTrac

; 205  : 		{	CoTaskMemFree(T.GrainSpace);

	push	eax
	call	edi

; 206  : 			T.GrainSpace = 0;

	mov	DWORD PTR [esi+964], ebx
$LN6@CSmartTrac:

; 207  : 			};
; 208  : 		if (T.ZLayer)

	mov	eax, DWORD PTR [esi+968]
	cmp	eax, ebx
	je	SHORT $LN5@CSmartTrac

; 209  : 		{	CoTaskMemFree(T.ZLayer);

	push	eax
	call	edi

; 210  : 			T.ZLayer = 0;

	mov	DWORD PTR [esi+968], ebx
$LN5@CSmartTrac:

; 211  : 			};
; 212  : 		if (T.LayerGrains)

	mov	eax, DWORD PTR [esi+972]
	cmp	eax, ebx
	je	SHORT $LN4@CSmartTrac

; 213  : 		{	CoTaskMemFree(T.LayerGrains);

	push	eax
	call	edi

; 214  : 			T.LayerGrains = 0;

	mov	DWORD PTR [esi+972], ebx
$LN4@CSmartTrac:

; 215  : 			};
; 216  : 		if (T.CellSpace)

	mov	eax, DWORD PTR [esi+976]
	cmp	eax, ebx
	je	SHORT $LN3@CSmartTrac

; 217  : 		{	CoTaskMemFree(T.CellSpace);

	push	eax
	call	edi

; 218  : 			T.CellSpace = 0;

	mov	DWORD PTR [esi+976], ebx
$LN3@CSmartTrac:

; 219  : 			};
; 220  : 		if (T.pDeltaHisto2d)

	mov	eax, DWORD PTR [esi+1068]
	cmp	eax, ebx
	je	SHORT $LN2@CSmartTrac

; 221  : 		{
; 222  : 			CoTaskMemFree(T.pDeltaHisto2d);

	push	eax
	call	edi

; 223  : 			T.pDeltaHisto2d = 0;

	mov	DWORD PTR [esi+1068], ebx
$LN2@CSmartTrac:

; 224  : 			}
; 225  : 		if (T.pDeltaData)

	mov	eax, DWORD PTR [esi+1072]
	cmp	eax, ebx
	je	SHORT $LN1@CSmartTrac

; 226  : 		{
; 227  : 			CoTaskMemFree(T.pDeltaData);

	push	eax
	call	edi

; 228  : 			T.pDeltaData = 0;

	mov	DWORD PTR [esi+1072], ebx

; 229  : 			T.pX = T.pY = T.pDX = T.pDY = 0;

	mov	DWORD PTR [esi+1088], ebx
	mov	DWORD PTR [esi+1084], ebx
	mov	DWORD PTR [esi+1080], ebx
	mov	DWORD PTR [esi+1076], ebx

; 230  : 			T.pReplicas = 0;

	mov	DWORD PTR [esi+1092], ebx
$LN1@CSmartTrac:

; 231  : 			}
; 232  : 		delete [] HEvs;

	mov	eax, DWORD PTR [esi+1144]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]

; 233  : 		delete [] ThreadInfo;		

	mov	eax, DWORD PTR [esi+1140]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]

; 234  : 		};

	mov	eax, DWORD PTR __ctlState$[esp+72]
	add	esp, 8
	cmp	eax, ebx
	mov	BYTE PTR __$EHRec$[esp+68], bl
	je	SHORT $LN20@CSmartTrac
	mov	edx, DWORD PTR __ctlState$[esp+60]
	mov	DWORD PTR [eax+4], edx
$LN20@CSmartTrac:
	cmp	DWORD PTR __ctlState$[esp+72], ebx
	je	SHORT $LN19@CSmartTrac
	mov	eax, DWORD PTR __ctlState$[esp+68]
	push	eax
	push	ebx
	call	?AfxDeactivateActCtx@@YGHKK@Z		; AfxDeactivateActCtx
$LN19@CSmartTrac:
	cmp	BYTE PTR [esi+36], bl
	lea	eax, DWORD PTR [esi+12]
	je	SHORT $LN30@CSmartTrac
	push	eax
	mov	BYTE PTR [eax+24], bl
	call	DWORD PTR __imp__DeleteCriticalSection@4
$LN30@CSmartTrac:
	mov	ecx, DWORD PTR __$EHRec$[esp+60]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CSmartTrackerClass@@UAE@XZ$0:
	cmp	DWORD PTR _this$[ebp], 0
	je	$LN15@CSmartTrac
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR $T126032[ebp], eax
	jmp	$LN16@CSmartTrac
$LN15@CSmartTrac:
	mov	DWORD PTR $T126032[ebp], 0
$LN16@CSmartTrac:
	mov	ecx, DWORD PTR $T126032[ebp]
	jmp	??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::~CComObjectRootEx<ATL::CComMultiThreadModel>
__unwindfunclet$??1CSmartTrackerClass@@UAE@XZ$1:
	lea	ecx, DWORD PTR __ctlState$[ebp]
	jmp	??1AFX_MAINTAIN_STATE2@@QAE@XZ		; AFX_MAINTAIN_STATE2::~AFX_MAINTAIN_STATE2
__ehhandler$??1CSmartTrackerClass@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-44]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CSmartTrackerClass@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CSmartTrackerClass@@UAE@XZ ENDP			; CSmartTrackerClass::~CSmartTrackerClass
PUBLIC	?InternalFinalConstructAddRef@CSmartTrackerClass@@QAEXXZ ; CSmartTrackerClass::InternalFinalConstructAddRef
; Function compile flags: /Ogtpy
;	COMDAT ?InternalFinalConstructAddRef@CSmartTrackerClass@@QAEXXZ
_TEXT	SEGMENT
?InternalFinalConstructAddRef@CSmartTrackerClass@@QAEXXZ PROC ; CSmartTrackerClass::InternalFinalConstructAddRef, COMDAT
; _this$ = ecx

; 239  : DECLARE_PROTECT_FINAL_CONSTRUCT()

	add	ecx, 8
	push	ecx
	call	DWORD PTR __imp__InterlockedIncrement@4
	ret	0
?InternalFinalConstructAddRef@CSmartTrackerClass@@QAEXXZ ENDP ; CSmartTrackerClass::InternalFinalConstructAddRef
_TEXT	ENDS
PUBLIC	?InternalFinalConstructRelease@CSmartTrackerClass@@QAEXXZ ; CSmartTrackerClass::InternalFinalConstructRelease
; Function compile flags: /Ogtpy
;	COMDAT ?InternalFinalConstructRelease@CSmartTrackerClass@@QAEXXZ
_TEXT	SEGMENT
?InternalFinalConstructRelease@CSmartTrackerClass@@QAEXXZ PROC ; CSmartTrackerClass::InternalFinalConstructRelease, COMDAT
; _this$ = ecx

; 239  : DECLARE_PROTECT_FINAL_CONSTRUCT()

	add	ecx, 8
	push	ecx
	call	DWORD PTR __imp__InterlockedDecrement@4
	ret	0
?InternalFinalConstructRelease@CSmartTrackerClass@@QAEXXZ ENDP ; CSmartTrackerClass::InternalFinalConstructRelease
_TEXT	ENDS
PUBLIC	??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::CComObjectRootEx<ATL::CComMultiThreadModel>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ PROC ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::CComObjectRootEx<ATL::CComMultiThreadModel>, COMDAT
; _this$ = ecx
	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+24], ecx
	mov	BYTE PTR [eax+28], cl
	ret	0
??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::CComObjectRootEx<ATL::CComMultiThreadModel>
_TEXT	ENDS
PUBLIC	??0ISySalObject2@@QAE@XZ			; ISySalObject2::ISySalObject2
; Function compile flags: /Ogtpy
;	COMDAT ??0ISySalObject2@@QAE@XZ
_TEXT	SEGMENT
??0ISySalObject2@@QAE@XZ PROC				; ISySalObject2::ISySalObject2, COMDAT
; _this$ = ecx
	mov	eax, ecx
	ret	0
??0ISySalObject2@@QAE@XZ ENDP				; ISySalObject2::ISySalObject2
_TEXT	ENDS
PUBLIC	??0ITracker3@@QAE@XZ				; ITracker3::ITracker3
; Function compile flags: /Ogtpy
;	COMDAT ??0ITracker3@@QAE@XZ
_TEXT	SEGMENT
??0ITracker3@@QAE@XZ PROC				; ITracker3::ITracker3, COMDAT
; _this$ = ecx
	mov	eax, ecx
	ret	0
??0ITracker3@@QAE@XZ ENDP				; ITracker3::ITracker3
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_05GIBEAPNE@CLSID?$AA@			; `string'
PUBLIC	??_C@_0DD@KLACBBLO@?$HL?$CF08X?9?$CF04X?9?$CF04X?9?$CF02X?$CF02X?9?$CF02X?$CF02@ ; `string'
PUBLIC	??_C@_0CI@CHAIAKDM@Software?2SySal2?2Classes?2SmartTra@ ; `string'
PUBLIC	??_C@_0BI@ELFGCOHC@Software?2SySal2?2Classes?$AA@ ; `string'
PUBLIC	__TI1H
PUBLIC	??_C@_0BA@KDPMCGOA@Software?2SySal2?$AA@	; `string'
PUBLIC	??_C@_08KEKAJNJI@Software?$AA@			; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_DllRegisterServer@0
PUBLIC	__CTA1H
PUBLIC	__CT??_R0H@84
PUBLIC	??_R0H@8					; int `RTTI Type Descriptor'
EXTRN	__imp__wsprintfA:PROC
EXTRN	__CxxThrowException@8:PROC
;	COMDAT ??_R0H@8
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlbase.h
_DATA	SEGMENT
??_R0H@8 DD	FLAT:??_7type_info@@6B@			; int `RTTI Type Descriptor'
	DD	00H
	DB	'.H', 00H
_DATA	ENDS
;	COMDAT __CT??_R0H@84
xdata$x	SEGMENT
__CT??_R0H@84 DD 01H
	DD	FLAT:??_R0H@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT __CTA1H
xdata$x	SEGMENT
__CTA1H	DD	01H
	DD	FLAT:__CT??_R0H@84
xdata$x	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05GIBEAPNE@CLSID?$AA@
CONST	SEGMENT
??_C@_05GIBEAPNE@CLSID?$AA@ DB 'CLSID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@KLACBBLO@?$HL?$CF08X?9?$CF04X?9?$CF04X?9?$CF02X?$CF02X?9?$CF02X?$CF02@
CONST	SEGMENT
??_C@_0DD@KLACBBLO@?$HL?$CF08X?9?$CF04X?9?$CF04X?9?$CF02X?$CF02X?9?$CF02X?$CF02@ DB '{'
	DB	'%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CHAIAKDM@Software?2SySal2?2Classes?2SmartTra@
CONST	SEGMENT
??_C@_0CI@CHAIAKDM@Software?2SySal2?2Classes?2SmartTra@ DB 'Software\SySa'
	DB	'l2\Classes\SmartTracker8.6', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@ELFGCOHC@Software?2SySal2?2Classes?$AA@
CONST	SEGMENT
??_C@_0BI@ELFGCOHC@Software?2SySal2?2Classes?$AA@ DB 'Software\SySal2\Cla'
	DB	'sses', 00H					; `string'
CONST	ENDS
;	COMDAT __TI1H
xdata$x	SEGMENT
__TI1H	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1H
xdata$x	ENDS
;	COMDAT ??_C@_0BA@KDPMCGOA@Software?2SySal2?$AA@
CONST	SEGMENT
??_C@_0BA@KDPMCGOA@Software?2SySal2?$AA@ DB 'Software\SySal2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08KEKAJNJI@Software?$AA@
CONST	SEGMENT
??_C@_08KEKAJNJI@Software?$AA@ DB 'Software', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$_DllRegisterServer@0$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$_DllRegisterServer@0$0
__tryblocktable$_DllRegisterServer@0 DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$_DllRegisterServer@0$3
__unwindtable$_DllRegisterServer@0 DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_DllRegisterServer@0$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$_DllRegisterServer@0 DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$_DllRegisterServer@0
	DD	01H
	DD	FLAT:__tryblocktable$_DllRegisterServer@0
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File d:\sysal2\smarttracker8.6\smarttracker8.cpp
xdata$x	ENDS
;	COMDAT _DllRegisterServer@0
_TEXT	SEGMENT
$T126098 = -112						; size = 4
$T126099 = -108						; size = 4
$T126095 = -104						; size = 4
$T126097 = -100						; size = 4
_dw$126187 = -96					; size = 4
_dw$126165 = -96					; size = 4
_dw$126143 = -96					; size = 4
_dw$126121 = -96					; size = 4
_hKey$126188 = -92					; size = 4
_hKey$126166 = -92					; size = 4
_hKey$126144 = -92					; size = 4
_hKey$126122 = -92					; size = 4
_MyKey$ = -88						; size = 4
_CLSIDString$124564 = -84				; size = 64
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_DllRegisterServer@0 PROC				; COMDAT

; 87   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_DllRegisterServer@0
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 88   :     // registers object, typelib and all interfaces in typelib
; 89   : 	CRegKey MyKey;

	xor	edi, edi
	mov	DWORD PTR _MyKey$[ebp], edi

; 90   : 	try
; 91   : 	{
; 92   : 		if (MyKey.Create(HKEY_LOCAL_MACHINE, "Software", REG_NONE, REG_OPTION_NON_VOLATILE, KEY_READ | KEY_WRITE) != ERROR_SUCCESS) throw 0;

	lea	eax, DWORD PTR _dw$126121[ebp]
	push	eax
	lea	ecx, DWORD PTR _hKey$126122[ebp]
	push	ecx
	push	edi
	push	131103					; 0002001fH
	push	edi
	push	edi
	push	edi
	push	OFFSET ??_C@_08KEKAJNJI@Software?$AA@
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	push	-2147483646				; 80000002H
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	DWORD PTR _hKey$126122[ebp], edi
	call	DWORD PTR __imp__RegCreateKeyExA@36
	cmp	eax, edi
	jne	SHORT $LN79@DllRegiste
	mov	esi, DWORD PTR _hKey$126122[ebp]

; 93   : 		MyKey.Close();

	cmp	esi, edi
	mov	ebx, DWORD PTR __imp__RegCloseKey@4
	mov	DWORD PTR _MyKey$[ebp], esi
	je	SHORT $LN22@DllRegiste
	push	esi
	call	ebx
	xor	esi, esi
	mov	DWORD PTR _MyKey$[ebp], esi
$LN22@DllRegiste:

; 94   : 		if (MyKey.Create(HKEY_LOCAL_MACHINE, "Software\\SySal2", REG_NONE, REG_OPTION_NON_VOLATILE, KEY_READ | KEY_WRITE) != ERROR_SUCCESS) throw 1;

	lea	eax, DWORD PTR _dw$126143[ebp]
	push	eax
	lea	ecx, DWORD PTR _hKey$126144[ebp]
	push	ecx
	push	edi
	push	131103					; 0002001fH
	push	edi
	push	edi
	push	edi
	push	OFFSET ??_C@_0BA@KDPMCGOA@Software?2SySal2?$AA@
	push	-2147483646				; 80000002H
	mov	DWORD PTR _hKey$126144[ebp], edi
	call	DWORD PTR __imp__RegCreateKeyExA@36
	cmp	eax, edi
	jne	SHORT $LN78@DllRegiste
	xor	eax, eax
	cmp	esi, edi
	je	SHORT $LN29@DllRegiste
	push	esi
	call	ebx
$LN29@DllRegiste:
	cmp	eax, edi
	mov	esi, DWORD PTR _hKey$126144[ebp]
	mov	DWORD PTR _MyKey$[ebp], esi
	je	SHORT $LN3@DllRegiste
$LN78@DllRegiste:
	push	OFFSET __TI1H
	lea	edx, DWORD PTR $T126097[ebp]
	push	edx
	mov	DWORD PTR $T126097[ebp], 1
	call	__CxxThrowException@8
$LN79@DllRegiste:

; 90   : 	try
; 91   : 	{
; 92   : 		if (MyKey.Create(HKEY_LOCAL_MACHINE, "Software", REG_NONE, REG_OPTION_NON_VOLATILE, KEY_READ | KEY_WRITE) != ERROR_SUCCESS) throw 0;

	push	OFFSET __TI1H
	lea	edx, DWORD PTR $T126095[ebp]
	push	edx
	mov	DWORD PTR $T126095[ebp], edi
	call	__CxxThrowException@8
$LN3@DllRegiste:

; 95   : 		MyKey.Close();

	cmp	esi, edi
	je	SHORT $LN32@DllRegiste
	push	esi
	call	ebx
	xor	esi, esi
	mov	DWORD PTR _MyKey$[ebp], esi
$LN32@DllRegiste:

; 96   : 		if (MyKey.Create(HKEY_LOCAL_MACHINE, "Software\\SySal2\\Classes", REG_NONE, REG_OPTION_NON_VOLATILE, KEY_READ | KEY_WRITE) != ERROR_SUCCESS) throw 2;

	lea	eax, DWORD PTR _dw$126165[ebp]
	push	eax
	lea	ecx, DWORD PTR _hKey$126166[ebp]
	push	ecx
	push	edi
	push	131103					; 0002001fH
	push	edi
	push	edi
	push	edi
	push	OFFSET ??_C@_0BI@ELFGCOHC@Software?2SySal2?2Classes?$AA@
	push	-2147483646				; 80000002H
	mov	DWORD PTR _hKey$126166[ebp], edi
	call	DWORD PTR __imp__RegCreateKeyExA@36
	cmp	eax, edi
	jne	SHORT $LN77@DllRegiste
	xor	eax, eax
	cmp	esi, edi
	je	SHORT $LN39@DllRegiste
	push	esi
	call	ebx
$LN39@DllRegiste:
	cmp	eax, edi
	mov	esi, DWORD PTR _hKey$126166[ebp]
	mov	DWORD PTR _MyKey$[ebp], esi
	je	SHORT $LN2@DllRegiste
$LN77@DllRegiste:
	push	OFFSET __TI1H
	lea	edx, DWORD PTR $T126098[ebp]
	push	edx
	mov	DWORD PTR $T126098[ebp], 2
	call	__CxxThrowException@8
$LN2@DllRegiste:

; 97   : 		MyKey.Close();

	cmp	esi, edi
	je	SHORT $LN42@DllRegiste
	push	esi
	call	ebx
	xor	esi, esi
	mov	DWORD PTR _MyKey$[ebp], esi
$LN42@DllRegiste:

; 98   : 		if (MyKey.Create(HKEY_LOCAL_MACHINE, "Software\\SySal2\\Classes\\SmartTracker8.6", REG_NONE, REG_OPTION_NON_VOLATILE, KEY_READ | KEY_WRITE) != ERROR_SUCCESS) throw 3;

	lea	eax, DWORD PTR _dw$126187[ebp]
	push	eax
	lea	ecx, DWORD PTR _hKey$126188[ebp]
	push	ecx
	push	edi
	push	131103					; 0002001fH
	push	edi
	push	edi
	push	edi
	push	OFFSET ??_C@_0CI@CHAIAKDM@Software?2SySal2?2Classes?2SmartTra@
	push	-2147483646				; 80000002H
	mov	DWORD PTR _hKey$126188[ebp], edi
	call	DWORD PTR __imp__RegCreateKeyExA@36
	cmp	eax, edi
	jne	SHORT $LN76@DllRegiste
	xor	eax, eax
	cmp	esi, edi
	je	SHORT $LN49@DllRegiste
	push	esi
	call	ebx
$LN49@DllRegiste:
	cmp	eax, edi
	mov	ecx, DWORD PTR _hKey$126188[ebp]
	mov	DWORD PTR _MyKey$[ebp], ecx
	je	SHORT $LN1@DllRegiste
$LN76@DllRegiste:
	push	OFFSET __TI1H
	lea	edx, DWORD PTR $T126099[ebp]
	push	edx
	mov	DWORD PTR $T126099[ebp], 3
	call	__CxxThrowException@8
$LN1@DllRegiste:

; 99   : 		MyKey.Close();

	cmp	ecx, edi
	je	SHORT $LN52@DllRegiste
	push	ecx
	call	ebx
	mov	DWORD PTR _MyKey$[ebp], edi
$LN52@DllRegiste:

; 100  : 		MyKey.Open(HKEY_LOCAL_MACHINE, "Software\\SySal2\\Classes\\SmartTracker8.6", KEY_READ | KEY_WRITE);

	push	131103					; 0002001fH
	push	OFFSET ??_C@_0CI@CHAIAKDM@Software?2SySal2?2Classes?2SmartTra@
	push	-2147483646				; 80000002H
	lea	ecx, DWORD PTR _MyKey$[ebp]
	call	?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z ; ATL::CRegKey::Open

; 101  : 		char CLSIDString[64];
; 102  : 		wsprintf(CLSIDString, "{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}", 
; 103  : 			CLSID_SmartTracker8.Data1, CLSID_SmartTracker8.Data2, CLSID_SmartTracker8.Data3, 
; 104  : 			CLSID_SmartTracker8.Data4[0], CLSID_SmartTracker8.Data4[1], CLSID_SmartTracker8.Data4[2], CLSID_SmartTracker8.Data4[3], 
; 105  : 			CLSID_SmartTracker8.Data4[4], CLSID_SmartTracker8.Data4[5], CLSID_SmartTracker8.Data4[6], CLSID_SmartTracker8.Data4[7]);

	push	158					; 0000009eH
	push	103					; 00000067H
	push	48					; 00000030H
	push	81					; 00000051H
	push	22					; 00000016H
	push	135					; 00000087H
	push	220					; 000000dcH
	push	172					; 000000acH
	push	17518					; 0000446eH
	push	20013					; 00004e2dH
	push	-1719248816				; 99865850H
	lea	eax, DWORD PTR _CLSIDString$124564[ebp]
	push	OFFSET ??_C@_0DD@KLACBBLO@?$HL?$CF08X?9?$CF04X?9?$CF04X?9?$CF02X?$CF02X?9?$CF02X?$CF02@
	push	eax
	call	DWORD PTR __imp__wsprintfA
	add	esp, 52					; 00000034H

; 106  : 		MyKey.SetValue(CLSIDString, "CLSID");

	lea	ecx, DWORD PTR _CLSIDString$124564[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenA@4
	mov	esi, DWORD PTR _MyKey$[ebp]
	add	eax, 1
	push	eax
	lea	edx, DWORD PTR _CLSIDString$124564[ebp]
	push	edx
	push	1
	push	edi
	push	OFFSET ??_C@_05GIBEAPNE@CLSID?$AA@
	push	esi
	call	DWORD PTR __imp__RegSetValueExA@24

; 107  : 		MyKey.Close();

	cmp	esi, edi
	je	SHORT $LN67@DllRegiste
	push	esi
	call	ebx
	xor	esi, esi
$LN67@DllRegiste:

; 116  :     return _Module.RegisterServer(FALSE/*TRUE*/);

	push	edi
	push	edi
	mov	ecx, OFFSET ?_Module@@3VCComModule@ATL@@A ; _Module
	call	?RegisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CComModule::RegisterServer
	cmp	esi, edi
	mov	ebx, eax
	je	SHORT $LN72@DllRegiste
	push	esi
	call	DWORD PTR __imp__RegCloseKey@4
$LN72@DllRegiste:
	mov	eax, ebx

; 117  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$_DllRegisterServer@0$0:

; 108  : 		}
; 109  : 	catch (...)
; 110  : 	{
; 111  : 		MyKey.Close();

	lea	ecx, DWORD PTR _MyKey$[ebp]
	call	?Close@CRegKey@ATL@@QAEJXZ		; ATL::CRegKey::Close

; 112  : 		MyKey.Open(HKEY_LOCAL_MACHINE, "", KEY_READ | KEY_WRITE);

	push	131103					; 0002001fH
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	-2147483646				; 80000002H
	lea	ecx, DWORD PTR _MyKey$[ebp]
	call	?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z ; ATL::CRegKey::Open

; 113  : 		MyKey.RecurseDeleteKey("Software\\SySal2\\Classes\\SmartTracker8.6");

	push	OFFSET ??_C@_0CI@CHAIAKDM@Software?2SySal2?2Classes?2SmartTra@
	lea	ecx, DWORD PTR _MyKey$[ebp]
	call	?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z ; ATL::CRegKey::RecurseDeleteKey

; 114  : 		MyKey.Close();

	lea	ecx, DWORD PTR _MyKey$[ebp]
	call	?Close@CRegKey@ATL@@QAEJXZ		; ATL::CRegKey::Close

; 115  : 		};

	mov	eax, $LN12@DllRegiste
	ret	0
$LN12@DllRegiste:
	mov	esi, DWORD PTR _MyKey$[ebp]
	xor	edi, edi
	jmp	SHORT $LN67@DllRegiste
$LN83@DllRegiste:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_DllRegisterServer@0$2:
	lea	ecx, DWORD PTR _MyKey$[ebp]
	jmp	??1CRegKey@ATL@@QAE@XZ			; ATL::CRegKey::~CRegKey
__ehhandler$_DllRegisterServer@0:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-116]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_DllRegisterServer@0
	jmp	___CxxFrameHandler3
text$x	ENDS
_DllRegisterServer@0 ENDP
PUBLIC	_DllUnregisterServer@0
; Function compile flags: /Ogtpy
;	COMDAT _DllUnregisterServer@0
_TEXT	SEGMENT
_MyKey$ = -8						; size = 4
_hKey$126263 = -4					; size = 4
_DllUnregisterServer@0 PROC				; COMDAT

; 123  : {

	sub	esp, 8

; 124  : 	CRegKey MyKey;
; 125  : 	MyKey.Open(HKEY_LOCAL_MACHINE, "", KEY_READ | KEY_WRITE);

	lea	eax, DWORD PTR _hKey$126263[esp+8]
	push	eax
	push	131103					; 0002001fH
	push	0
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	-2147483646				; 80000002H
	mov	DWORD PTR _MyKey$[esp+28], 0
	mov	DWORD PTR _hKey$126263[esp+28], 0
	call	DWORD PTR __imp__RegOpenKeyExA@20
	test	eax, eax
	jne	SHORT $LN5@DllUnregis
	mov	ecx, DWORD PTR _hKey$126263[esp+8]
	mov	DWORD PTR _MyKey$[esp+8], ecx
$LN5@DllUnregis:
	push	ebx
	push	esi
	push	edi

; 126  : 	MyKey.RecurseDeleteKey("Software\\SySal2\\Classes\\SmartTracker8.6");

	push	OFFSET ??_C@_0CI@CHAIAKDM@Software?2SySal2?2Classes?2SmartTra@
	lea	ecx, DWORD PTR _MyKey$[esp+24]
	call	?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z ; ATL::CRegKey::RecurseDeleteKey

; 127  : 	MyKey.Close();	

	mov	esi, DWORD PTR _MyKey$[esp+20]
	test	esi, esi
	mov	ebx, DWORD PTR __imp__RegCloseKey@4
	je	SHORT $LN11@DllUnregis
	push	esi
	call	ebx
	xor	esi, esi
$LN11@DllUnregis:

; 128  :     return _Module.UnregisterServer(FALSE);

	push	0
	push	0
	mov	ecx, OFFSET ?_Module@@3VCComModule@ATL@@A ; _Module
	call	?UnregisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CComModule::UnregisterServer
	test	esi, esi
	mov	edi, eax
	je	SHORT $LN19@DllUnregis
	push	esi
	call	ebx
$LN19@DllUnregis:
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 129  : }

	add	esp, 8
	ret	0
_DllUnregisterServer@0 ENDP
_TEXT	ENDS
PUBLIC	??_7CComClassFactory@ATL@@6B@			; ATL::CComClassFactory::`vftable'
PUBLIC	??0CComClassFactory@ATL@@QAE@XZ			; ATL::CComClassFactory::CComClassFactory
PUBLIC	??_R4CComClassFactory@ATL@@6B@			; ATL::CComClassFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCComClassFactory@ATL@@@8		; ATL::CComClassFactory `RTTI Type Descriptor'
PUBLIC	??_R3CComClassFactory@ATL@@8			; ATL::CComClassFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CComClassFactory@ATL@@8			; ATL::CComClassFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CComClassFactory@ATL@@8		; ATL::CComClassFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IClassFactory@@8			; IClassFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIClassFactory@@@8			; IClassFactory `RTTI Type Descriptor'
PUBLIC	??_R3IClassFactory@@8				; IClassFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IClassFactory@@8				; IClassFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AV?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel> `RTTI Type Descriptor'
PUBLIC	??_R3?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CComObjectRootBase@ATL@@8		; ATL::CComObjectRootBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCComObjectRootBase@ATL@@@8		; ATL::CComObjectRootBase `RTTI Type Descriptor'
PUBLIC	??_R3CComObjectRootBase@ATL@@8			; ATL::CComObjectRootBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CComObjectRootBase@ATL@@8			; ATL::CComObjectRootBase::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@CComObjectRootBase@ATL@@8		; ATL::CComObjectRootBase::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z ; ATL::CComClassFactory::CreateInstance
PUBLIC	?LockServer@CComClassFactory@ATL@@UAGJH@Z	; ATL::CComClassFactory::LockServer
EXTRN	__purecall:PROC
;	COMDAT ??_R13?0A@EA@CComObjectRootBase@ATL@@8
rdata$r	SEGMENT
??_R13?0A@EA@CComObjectRootBase@ATL@@8 DD FLAT:??_R0?AVCComObjectRootBase@ATL@@@8 ; ATL::CComObjectRootBase::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CComObjectRootBase@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2CComObjectRootBase@ATL@@8
rdata$r	SEGMENT
??_R2CComObjectRootBase@ATL@@8 DD FLAT:??_R1A@?0A@EA@CComObjectRootBase@ATL@@8 ; ATL::CComObjectRootBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CComObjectRootBase@ATL@@8
rdata$r	SEGMENT
??_R3CComObjectRootBase@ATL@@8 DD 00H			; ATL::CComObjectRootBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CComObjectRootBase@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCComObjectRootBase@ATL@@@8
_DATA	SEGMENT
??_R0?AVCComObjectRootBase@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CComObjectRootBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCComObjectRootBase@ATL@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CComObjectRootBase@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CComObjectRootBase@ATL@@8 DD FLAT:??_R0?AVCComObjectRootBase@ATL@@@8 ; ATL::CComObjectRootBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CComObjectRootBase@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 DD FLAT:??_R0?AV?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
rdata$r	SEGMENT
??_R2?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 DD FLAT:??_R1A@?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CComObjectRootBase@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
rdata$r	SEGMENT
??_R3?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 DD 00H ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@@8
_DATA	SEGMENT
??_R0?AV?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@'
	DB	00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 DD FLAT:??_R0?AV?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IClassFactory@@8
rdata$r	SEGMENT
??_R2IClassFactory@@8 DD FLAT:??_R1A@?0A@EA@IClassFactory@@8 ; IClassFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IClassFactory@@8
rdata$r	SEGMENT
??_R3IClassFactory@@8 DD 00H				; IClassFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IClassFactory@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIClassFactory@@@8
_DATA	SEGMENT
??_R0?AUIClassFactory@@@8 DD FLAT:??_7type_info@@6B@	; IClassFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIClassFactory@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IClassFactory@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IClassFactory@@8 DD FLAT:??_R0?AUIClassFactory@@@8 ; IClassFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IClassFactory@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CComClassFactory@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CComClassFactory@ATL@@8 DD FLAT:??_R0?AVCComClassFactory@ATL@@@8 ; ATL::CComClassFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CComClassFactory@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2CComClassFactory@ATL@@8
rdata$r	SEGMENT
??_R2CComClassFactory@ATL@@8 DD FLAT:??_R1A@?0A@EA@CComClassFactory@ATL@@8 ; ATL::CComClassFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IClassFactory@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
	DD	FLAT:??_R13?0A@EA@CComObjectRootBase@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R3CComClassFactory@ATL@@8
rdata$r	SEGMENT
??_R3CComClassFactory@ATL@@8 DD 00H			; ATL::CComClassFactory::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2CComClassFactory@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCComClassFactory@ATL@@@8
_DATA	SEGMENT
??_R0?AVCComClassFactory@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CComClassFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCComClassFactory@ATL@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CComClassFactory@ATL@@6B@
rdata$r	SEGMENT
??_R4CComClassFactory@ATL@@6B@ DD 00H			; ATL::CComClassFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCComClassFactory@ATL@@@8
	DD	FLAT:??_R3CComClassFactory@ATL@@8
rdata$r	ENDS
;	COMDAT ??_7CComClassFactory@ATL@@6B@
CONST	SEGMENT
??_7CComClassFactory@ATL@@6B@ DD FLAT:??_R4CComClassFactory@ATL@@6B@ ; ATL::CComClassFactory::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
	DD	FLAT:?LockServer@CComClassFactory@ATL@@UAGJH@Z
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0CComClassFactory@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CComClassFactory@ATL@@QAE@XZ PROC			; ATL::CComClassFactory::CComClassFactory, COMDAT
; _this$ = ecx
	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+24], ecx
	mov	DWORD PTR [eax+28], ecx
	mov	BYTE PTR [eax+32], cl
	mov	DWORD PTR [eax], OFFSET ??_7CComClassFactory@ATL@@6B@
	ret	0
??0CComClassFactory@ATL@@QAE@XZ ENDP			; ATL::CComClassFactory::CComClassFactory
_TEXT	ENDS
PUBLIC	?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z	; ATL::InlineIsEqualUnknown
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlbase.h
;	COMDAT ?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z PROC		; ATL::InlineIsEqualUnknown, COMDAT

; 550  :    return (
; 551  : 	  ((PLONG) &rguid1)[0] == 0 &&
; 552  : 	  ((PLONG) &rguid1)[1] == 0 &&
; 553  : #ifdef _ATL_BYTESWAP
; 554  : 	  ((PLONG) &rguid1)[2] == 0xC0000000 &&
; 555  : 	  ((PLONG) &rguid1)[3] == 0x00000046);
; 556  : #else
; 557  : 	  ((PLONG) &rguid1)[2] == 0x000000C0 &&
; 558  : 	  ((PLONG) &rguid1)[3] == 0x46000000);

	mov	eax, DWORD PTR _rguid1$[esp-4]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@InlineIsEq@2
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN3@InlineIsEq@2
	cmp	DWORD PTR [eax+8], 192			; 000000c0H
	jne	SHORT $LN3@InlineIsEq@2
	cmp	DWORD PTR [eax+12], 1174405120		; 46000000H
	jne	SHORT $LN3@InlineIsEq@2
	mov	eax, 1

; 559  : #endif
; 560  : }

	ret	4
$LN3@InlineIsEq@2:

; 550  :    return (
; 551  : 	  ((PLONG) &rguid1)[0] == 0 &&
; 552  : 	  ((PLONG) &rguid1)[1] == 0 &&
; 553  : #ifdef _ATL_BYTESWAP
; 554  : 	  ((PLONG) &rguid1)[2] == 0xC0000000 &&
; 555  : 	  ((PLONG) &rguid1)[3] == 0x00000046);
; 556  : #else
; 557  : 	  ((PLONG) &rguid1)[2] == 0x000000C0 &&
; 558  : 	  ((PLONG) &rguid1)[3] == 0x46000000);

	xor	eax, eax

; 559  : #endif
; 560  : }

	ret	4
?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z ENDP		; ATL::InlineIsEqualUnknown
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcom.h
_TEXT	ENDS
;	COMDAT ?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pUnkOuter$ = 12					; size = 4
_riid$ = 16						; size = 4
_ppvObj$ = 20						; size = 4
?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z PROC ; ATL::CComClassFactory::CreateInstance, COMDAT

; 3286 : 		ATLASSUME(m_pfnCreateInstance != NULL);
; 3287 : 		HRESULT hRes = E_POINTER;
; 3288 : 		if (ppvObj != NULL)

	mov	ecx, DWORD PTR _ppvObj$[esp-4]
	test	ecx, ecx
	mov	eax, -2147467261			; 80004003H
	je	SHORT $LN1@CreateInst@2

; 3289 : 		{
; 3290 : 			*ppvObj = NULL;
; 3291 : 			// can't ask for anything other than IUnknown when aggregating
; 3292 : 
; 3293 : 			if ((pUnkOuter != NULL) && !InlineIsEqualUnknown(riid))

	mov	edx, DWORD PTR _pUnkOuter$[esp-4]
	test	edx, edx
	mov	eax, DWORD PTR _riid$[esp-4]
	mov	DWORD PTR [ecx], 0
	je	SHORT $LN2@CreateInst@2
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN11@CreateInst@2
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN11@CreateInst@2
	cmp	DWORD PTR [eax+8], 192			; 000000c0H
	jne	SHORT $LN11@CreateInst@2
	cmp	DWORD PTR [eax+12], 1174405120		; 46000000H
	je	SHORT $LN2@CreateInst@2
$LN11@CreateInst@2:

; 3294 : 			{
; 3295 : 				ATLTRACE(atlTraceCOM, 0, _T("CComClassFactory: asked for non IUnknown interface while creating an aggregated object"));
; 3296 : 				hRes = CLASS_E_NOAGGREGATION;

	mov	eax, -2147221232			; 80040110H

; 3300 : 		}
; 3301 : 		return hRes;
; 3302 : 	}

	ret	16					; 00000010H
$LN2@CreateInst@2:

; 3297 : 			}
; 3298 : 			else
; 3299 : 				hRes = m_pfnCreateInstance(pUnkOuter, riid, ppvObj);

	push	ecx
	push	eax
	mov	eax, DWORD PTR _this$[esp+4]
	mov	ecx, DWORD PTR [eax+36]
	push	edx
	call	ecx
$LN1@CreateInst@2:

; 3300 : 		}
; 3301 : 		return hRes;
; 3302 : 	}

	ret	16					; 00000010H
?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z ENDP ; ATL::CComClassFactory::CreateInstance
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?LockServer@CComClassFactory@ATL@@UAGJH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_fLock$ = 12						; size = 4
?LockServer@CComClassFactory@ATL@@UAGJH@Z PROC		; ATL::CComClassFactory::LockServer, COMDAT

; 3306 : 		if (fLock)

	cmp	DWORD PTR _fLock$[esp-4], 0

; 3307 : 			_pAtlModule->Lock();

	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	eax, DWORD PTR [ecx]
	je	SHORT $LN2@LockServer
	mov	edx, DWORD PTR [eax+4]

; 3308 : 		else
; 3309 : 			_pAtlModule->Unlock();

	call	edx

; 3310 : 		return S_OK;

	xor	eax, eax

; 3311 : 	}

	ret	8
$LN2@LockServer:

; 3308 : 		else
; 3309 : 			_pAtlModule->Unlock();

	mov	edx, DWORD PTR [eax+8]
	call	edx

; 3310 : 		return S_OK;

	xor	eax, eax

; 3311 : 	}

	ret	8
?LockServer@CComClassFactory@ATL@@UAGJH@Z ENDP		; ATL::CComClassFactory::LockServer
_TEXT	ENDS
PUBLIC	?UpdateRegistryFromResourceDHelper@CAtlModule@ATL@@QAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CAtlModule::UpdateRegistryFromResourceDHelper
EXTRN	__imp__AtlUpdateRegistryFromResourceD@20:PROC
EXTRN	__imp__AtlCreateRegistrar@4:PROC
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlbase.h
;	COMDAT ?UpdateRegistryFromResourceDHelper@CAtlModule@ATL@@QAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_spRegistrar$ = -4					; size = 4
_this$ = 8						; size = 4
_lpszRes$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResourceDHelper@CAtlModule@ATL@@QAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z PROC ; ATL::CAtlModule::UpdateRegistryFromResourceDHelper, COMDAT

; 2830 : 	{

	push	ecx
	push	esi

; 2831 : 		CComPtr<IRegistrar> spRegistrar;
; 2832 : 		HRESULT hr = AtlCreateRegistrar(&spRegistrar);

	lea	eax, DWORD PTR _spRegistrar$[esp+8]
	push	eax
	mov	DWORD PTR _spRegistrar$[esp+12], 0
	call	DWORD PTR __imp__AtlCreateRegistrar@4
	mov	esi, eax

; 2833 : 		if (FAILED(hr))

	test	esi, esi

; 2834 : 			return hr;

	jl	SHORT $LN41@UpdateRegi

; 2835 : 
; 2836 : 		if (NULL != pMapEntries)

	mov	esi, DWORD PTR _pMapEntries$[esp+4]
	test	esi, esi
	je	SHORT $LN2@UpdateRegi

; 2837 : 		{
; 2838 : 			while (NULL != pMapEntries->szKey)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@UpdateRegi
	push	edi
	npad	6
$LL3@UpdateRegi:

; 2839 : 			{
; 2840 : 				ATLASSERT(NULL != pMapEntries->szData);
; 2841 : 				spRegistrar->AddReplacement(pMapEntries->szKey, pMapEntries->szData);

	mov	edi, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR _spRegistrar$[esp+12]
	mov	edx, DWORD PTR [ecx]
	push	edi
	push	eax
	mov	eax, DWORD PTR [edx+12]
	push	ecx
	call	eax
	mov	eax, DWORD PTR [esi+8]

; 2842 : 				pMapEntries++;

	add	esi, 8
	test	eax, eax
	jne	SHORT $LL3@UpdateRegi
	pop	edi
$LN2@UpdateRegi:

; 2843 : 			}
; 2844 : 		}
; 2845 : 
; 2846 : 		hr = AddCommonRGSReplacements(spRegistrar);

	mov	ecx, DWORD PTR _this$[esp+4]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _spRegistrar$[esp+8]
	mov	edx, DWORD PTR [edx+20]
	push	eax
	call	edx
	mov	esi, eax

; 2847 : 		if (FAILED(hr))

	test	esi, esi

; 2848 : 			return hr;

	mov	eax, DWORD PTR _spRegistrar$[esp+8]
	jl	SHORT $LN42@UpdateRegi

; 2849 : 
; 2850 : 		return AtlUpdateRegistryFromResourceD(_AtlBaseModule.GetModuleInstance(), lpszRes, bRegister,
; 2851 : 			NULL, spRegistrar);

	mov	ecx, DWORD PTR _bRegister$[esp+4]
	mov	edx, DWORD PTR _lpszRes$[esp+4]
	push	eax
	mov	eax, DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
	push	0
	push	ecx
	push	edx
	push	eax
	call	DWORD PTR __imp__AtlUpdateRegistryFromResourceD@20
	mov	esi, eax
$LN41@UpdateRegi:
	mov	eax, DWORD PTR _spRegistrar$[esp+8]
$LN42@UpdateRegi:
	test	eax, eax
	je	SHORT $LN34@UpdateRegi
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN34@UpdateRegi:
	mov	eax, esi
	pop	esi

; 2852 : 	}

	pop	ecx
	ret	16					; 00000010H
?UpdateRegistryFromResourceDHelper@CAtlModule@ATL@@QAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CAtlModule::UpdateRegistryFromResourceDHelper
_TEXT	ENDS
PUBLIC	??_7CComModule@ATL@@6B@				; ATL::CComModule::`vftable'
PUBLIC	??0CComModule@ATL@@QAE@XZ			; ATL::CComModule::CComModule
PUBLIC	??_R4CComModule@ATL@@6B@			; ATL::CComModule::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCComModule@ATL@@@8			; ATL::CComModule `RTTI Type Descriptor'
PUBLIC	??_R3CComModule@ATL@@8				; ATL::CComModule::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CComModule@ATL@@8				; ATL::CComModule::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CComModule@ATL@@8			; ATL::CComModule::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CAtlModuleT@VCComModule@ATL@@@ATL@@8 ; ATL::CAtlModuleT<ATL::CComModule>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CAtlModuleT@VCComModule@ATL@@@ATL@@@8	; ATL::CAtlModuleT<ATL::CComModule> `RTTI Type Descriptor'
PUBLIC	??_R3?$CAtlModuleT@VCComModule@ATL@@@ATL@@8	; ATL::CAtlModuleT<ATL::CComModule>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CAtlModuleT@VCComModule@ATL@@@ATL@@8	; ATL::CAtlModuleT<ATL::CComModule>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAtlModule@ATL@@8			; ATL::CAtlModule::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCAtlModule@ATL@@@8			; ATL::CAtlModule `RTTI Type Descriptor'
PUBLIC	??_R3CAtlModule@ATL@@8				; ATL::CAtlModule::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAtlModule@ATL@@8				; ATL::CAtlModule::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@_ATL_MODULE70@ATL@@8		; ATL::_ATL_MODULE70::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AU_ATL_MODULE70@ATL@@@8			; ATL::_ATL_MODULE70 `RTTI Type Descriptor'
PUBLIC	??_R3_ATL_MODULE70@ATL@@8			; ATL::_ATL_MODULE70::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_ATL_MODULE70@ATL@@8			; ATL::_ATL_MODULE70::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_ATL_MODULE70@ATL@@8		; ATL::_ATL_MODULE70::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?Lock@CAtlModule@ATL@@UAEJXZ			; ATL::CAtlModule::Lock
PUBLIC	?Unlock@CAtlModule@ATL@@UAEJXZ			; ATL::CAtlModule::Unlock
PUBLIC	?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z ; ATL::CAtlModule::GetGITPtr
PUBLIC	?AddCommonRGSReplacements@?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEJPAUIRegistrarBase@@@Z ; ATL::CAtlModuleT<ATL::CComModule>::AddCommonRGSReplacements
PUBLIC	?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CComModule::UpdateRegistryFromResourceD
PUBLIC	?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CComModule::UpdateRegistryFromResourceD
PUBLIC	?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CComModule::UpdateRegistryFromResourceS
PUBLIC	?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CComModule::UpdateRegistryFromResourceS
EXTRN	??_ECComModule@ATL@@UAEPAXI@Z:PROC		; ATL::CComModule::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@_ATL_MODULE70@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_ATL_MODULE70@ATL@@8 DD FLAT:??_R0?AU_ATL_MODULE70@ATL@@@8 ; ATL::_ATL_MODULE70::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_ATL_MODULE70@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2_ATL_MODULE70@ATL@@8
rdata$r	SEGMENT
??_R2_ATL_MODULE70@ATL@@8 DD FLAT:??_R1A@?0A@EA@_ATL_MODULE70@ATL@@8 ; ATL::_ATL_MODULE70::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3_ATL_MODULE70@ATL@@8
rdata$r	SEGMENT
??_R3_ATL_MODULE70@ATL@@8 DD 00H			; ATL::_ATL_MODULE70::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2_ATL_MODULE70@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU_ATL_MODULE70@ATL@@@8
_DATA	SEGMENT
??_R0?AU_ATL_MODULE70@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::_ATL_MODULE70 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU_ATL_MODULE70@ATL@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@_ATL_MODULE70@ATL@@8
rdata$r	SEGMENT
??_R13?0A@EA@_ATL_MODULE70@ATL@@8 DD FLAT:??_R0?AU_ATL_MODULE70@ATL@@@8 ; ATL::_ATL_MODULE70::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_ATL_MODULE70@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2CAtlModule@ATL@@8
rdata$r	SEGMENT
??_R2CAtlModule@ATL@@8 DD FLAT:??_R1A@?0A@EA@CAtlModule@ATL@@8 ; ATL::CAtlModule::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@_ATL_MODULE70@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R3CAtlModule@ATL@@8
rdata$r	SEGMENT
??_R3CAtlModule@ATL@@8 DD 00H				; ATL::CAtlModule::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CAtlModule@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAtlModule@ATL@@@8
_DATA	SEGMENT
??_R0?AVCAtlModule@ATL@@@8 DD FLAT:??_7type_info@@6B@	; ATL::CAtlModule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAtlModule@ATL@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CAtlModule@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAtlModule@ATL@@8 DD FLAT:??_R0?AVCAtlModule@ATL@@@8 ; ATL::CAtlModule::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAtlModule@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CAtlModuleT@VCComModule@ATL@@@ATL@@8
rdata$r	SEGMENT
??_R2?$CAtlModuleT@VCComModule@ATL@@@ATL@@8 DD FLAT:??_R1A@?0A@EA@?$CAtlModuleT@VCComModule@ATL@@@ATL@@8 ; ATL::CAtlModuleT<ATL::CComModule>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CAtlModule@ATL@@8
	DD	FLAT:??_R13?0A@EA@_ATL_MODULE70@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CAtlModuleT@VCComModule@ATL@@@ATL@@8
rdata$r	SEGMENT
??_R3?$CAtlModuleT@VCComModule@ATL@@@ATL@@8 DD 00H	; ATL::CAtlModuleT<ATL::CComModule>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$CAtlModuleT@VCComModule@ATL@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CAtlModuleT@VCComModule@ATL@@@ATL@@@8
_DATA	SEGMENT
??_R0?AV?$CAtlModuleT@VCComModule@ATL@@@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CAtlModuleT<ATL::CComModule> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CAtlModuleT@VCComModule@ATL@@@ATL@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CAtlModuleT@VCComModule@ATL@@@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CAtlModuleT@VCComModule@ATL@@@ATL@@8 DD FLAT:??_R0?AV?$CAtlModuleT@VCComModule@ATL@@@ATL@@@8 ; ATL::CAtlModuleT<ATL::CComModule>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CAtlModuleT@VCComModule@ATL@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CComModule@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CComModule@ATL@@8 DD FLAT:??_R0?AVCComModule@ATL@@@8 ; ATL::CComModule::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CComModule@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2CComModule@ATL@@8
rdata$r	SEGMENT
??_R2CComModule@ATL@@8 DD FLAT:??_R1A@?0A@EA@CComModule@ATL@@8 ; ATL::CComModule::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CAtlModuleT@VCComModule@ATL@@@ATL@@8
	DD	FLAT:??_R1A@?0A@EA@CAtlModule@ATL@@8
	DD	FLAT:??_R13?0A@EA@_ATL_MODULE70@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R3CComModule@ATL@@8
rdata$r	SEGMENT
??_R3CComModule@ATL@@8 DD 00H				; ATL::CComModule::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CComModule@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCComModule@ATL@@@8
_DATA	SEGMENT
??_R0?AVCComModule@ATL@@@8 DD FLAT:??_7type_info@@6B@	; ATL::CComModule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCComModule@ATL@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CComModule@ATL@@6B@
rdata$r	SEGMENT
??_R4CComModule@ATL@@6B@ DD 00H				; ATL::CComModule::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCComModule@ATL@@@8
	DD	FLAT:??_R3CComModule@ATL@@8
rdata$r	ENDS
;	COMDAT ??_7CComModule@ATL@@6B@
CONST	SEGMENT
??_7CComModule@ATL@@6B@ DD FLAT:??_R4CComModule@ATL@@6B@ ; ATL::CComModule::`vftable'
	DD	FLAT:??_ECComModule@ATL@@UAEPAXI@Z
	DD	FLAT:?Lock@CAtlModule@ATL@@UAEJXZ
	DD	FLAT:?Unlock@CAtlModule@ATL@@UAEJXZ
	DD	FLAT:?GetLockCount@CAtlModule@ATL@@UAEJXZ
	DD	FLAT:?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z
	DD	FLAT:?AddCommonRGSReplacements@?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEJPAUIRegistrarBase@@@Z
	DD	FLAT:?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
	DD	FLAT:?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z
	DD	FLAT:?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
	DD	FLAT:?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0CComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CComModule@ATL@@QAE@XZ PROC				; ATL::CComModule::CComModule, COMDAT
; _this$ = ecx

; 4228 : 	CComModule()

	xor	eax, eax
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi+16], eax
	lea	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A, esi ; ATL::_pAtlModule
	mov	DWORD PTR [esi+40], eax
	call	?Init@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Init
	test	eax, eax
	jge	SHORT $LN6@CComModule
	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed
	mov	DWORD PTR [esi], OFFSET ??_7CComModule@ATL@@6B@

; 4229 : 	{
; 4230 : 		// Should have only one instance of a class 
; 4231 : 		// derived from CComModule in a project.
; 4232 : 		ATLASSERT(_pModule == NULL);
; 4233 : 		_pModule = this;

	mov	DWORD PTR ?_pModule@ATL@@3PAVCComModule@1@A, esi ; ATL::_pModule

; 4234 : #if !defined(_ATL_NATIVE_INITIALIZATION)
; 4235 : #pragma warning(push)
; 4236 : #pragma warning(disable:4483)
; 4237 : 		using namespace __identifier("<AtlImplementationDetails>");
; 4238 : #pragma warning(pop)
; 4239 : 		ATLASSERT(ComModuleInitialized == false);
; 4240 : 		// If ComModuleHelper.Module == NULL it mean that DllMain has not been called, so we assume CComModule lives in
; 4241 : 		// an exe and not in a dll
; 4242 : 		if (ComModuleHelper.Module != NULL)
; 4243 : 		{
; 4244 : 			ATLASSERT(ComModuleHelper.Module == this);
; 4245 : 			_DllMain(ComModuleHelper.Instance, DLL_PROCESS_ATTACH, NULL, ComModuleHelper.ObjectMap, ComModuleHelper.LibraryId);
; 4246 : 		}
; 4247 : 		ComModuleInitialized = true;
; 4248 : #endif
; 4249 : 	}

	mov	eax, esi
	pop	esi
	ret	0

; 4228 : 	CComModule()

$LN6@CComModule:
	mov	DWORD PTR [esi+4], 36			; 00000024H
	mov	DWORD PTR [esi], OFFSET ??_7CComModule@ATL@@6B@

; 4229 : 	{
; 4230 : 		// Should have only one instance of a class 
; 4231 : 		// derived from CComModule in a project.
; 4232 : 		ATLASSERT(_pModule == NULL);
; 4233 : 		_pModule = this;

	mov	DWORD PTR ?_pModule@ATL@@3PAVCComModule@1@A, esi ; ATL::_pModule

; 4234 : #if !defined(_ATL_NATIVE_INITIALIZATION)
; 4235 : #pragma warning(push)
; 4236 : #pragma warning(disable:4483)
; 4237 : 		using namespace __identifier("<AtlImplementationDetails>");
; 4238 : #pragma warning(pop)
; 4239 : 		ATLASSERT(ComModuleInitialized == false);
; 4240 : 		// If ComModuleHelper.Module == NULL it mean that DllMain has not been called, so we assume CComModule lives in
; 4241 : 		// an exe and not in a dll
; 4242 : 		if (ComModuleHelper.Module != NULL)
; 4243 : 		{
; 4244 : 			ATLASSERT(ComModuleHelper.Module == this);
; 4245 : 			_DllMain(ComModuleHelper.Instance, DLL_PROCESS_ATTACH, NULL, ComModuleHelper.ObjectMap, ComModuleHelper.LibraryId);
; 4246 : 		}
; 4247 : 		ComModuleInitialized = true;
; 4248 : #endif
; 4249 : 	}

	mov	eax, esi
	pop	esi
	ret	0
??0CComModule@ATL@@QAE@XZ ENDP				; ATL::CComModule::CComModule
_TEXT	ENDS
PUBLIC	??$AtlMultiply@H@ATL@@YAJPAHHH@Z		; ATL::AtlMultiply<int>
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@H@ATL@@YAJPAHHH@Z
_TEXT	SEGMENT
_piResult$ = 8						; size = 4
_iLeft$ = 12						; size = 4
_iRight$ = 16						; size = 4
??$AtlMultiply@H@ATL@@YAJPAHHH@Z PROC			; ATL::AtlMultiply<int>, COMDAT

; 126  : 	__int64 i64Result=static_cast<__int64>(iLeft) * static_cast<__int64>(iRight);

	mov	eax, DWORD PTR _iLeft$[esp-4]
	imul	DWORD PTR _iRight$[esp-4]

; 127  : 	if(i64Result>INT_MAX || i64Result < INT_MIN)

	mov	ecx, eax
	add	ecx, -2147483648			; 80000000H
	adc	edx, 0
	test	edx, edx
	ja	SHORT $LN1@AtlMultipl
	jb	SHORT $LN5@AtlMultipl
	cmp	ecx, -1
	ja	SHORT $LN1@AtlMultipl
$LN5@AtlMultipl:

; 130  : 	}
; 131  : 	*piResult=static_cast<int _ATL_W64>(i64Result);

	mov	ecx, DWORD PTR _piResult$[esp-4]
	mov	DWORD PTR [ecx], eax

; 132  : 	return S_OK;

	xor	eax, eax

; 133  : }

	ret	0
$LN1@AtlMultipl:

; 128  : 	{
; 129  : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H

; 133  : }

	ret	0
??$AtlMultiply@H@ATL@@YAJPAHHH@Z ENDP			; ATL::AtlMultiply<int>
_TEXT	ENDS
PUBLIC	?Allocate@CCRTAllocator@ATL@@SAPAXI@Z		; ATL::CCRTAllocator::Allocate
EXTRN	__imp__malloc:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z PROC		; ATL::CCRTAllocator::Allocate, COMDAT

; 243  : 		return malloc(nBytes);

	jmp	DWORD PTR __imp__malloc
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ENDP		; ATL::CCRTAllocator::Allocate
_TEXT	ENDS
PUBLIC	?Free@CCRTAllocator@ATL@@SAXPAX@Z		; ATL::CCRTAllocator::Free
EXTRN	__imp__free:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CCRTAllocator@ATL@@SAXPAX@Z PROC			; ATL::CCRTAllocator::Free, COMDAT

; 248  : 		free(p);

	jmp	DWORD PTR __imp__free
?Free@CCRTAllocator@ATL@@SAXPAX@Z ENDP			; ATL::CCRTAllocator::Free
_TEXT	ENDS
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
EXTRN	?g_pfnGetThreadACP@ATL@@3P6GIXZA:DWORD		; ATL::g_pfnGetThreadACP
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC			; ATL::_AtlGetConversionACP, COMDAT

; 160  : 	return( g_pfnGetThreadACP() );

	jmp	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
_TEXT	ENDS
PUBLIC	?AtlA2WHelper@@YGPA_WPA_WPBDHI@Z		; AtlA2WHelper
EXTRN	__imp__MultiByteToWideChar@24:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?AtlA2WHelper@@YGPA_WPA_WPBDHI@Z
_TEXT	SEGMENT
_lpw$ = 8						; size = 4
_lpa$ = 12						; size = 4
_nChars$ = 16						; size = 4
_acp$ = 20						; size = 4
?AtlA2WHelper@@YGPA_WPA_WPBDHI@Z PROC			; AtlA2WHelper, COMDAT

; 595  : {

	push	esi

; 596  : 	ATLASSERT(lpa != NULL);
; 597  : 	ATLASSERT(lpw != NULL);
; 598  : 	if (lpw == NULL || lpa == NULL)

	mov	esi, DWORD PTR _lpw$[esp]
	test	esi, esi
	je	SHORT $LN2@AtlA2WHelp
	mov	eax, DWORD PTR _lpa$[esp]
	test	eax, eax
	je	SHORT $LN2@AtlA2WHelp

; 600  : 	// verify that no illegal character present
; 601  : 	// since lpw was allocated based on the size of lpa
; 602  : 	// don't worry about the number of chars
; 603  : 	lpw[0] = '\0';
; 604  : 	int ret = MultiByteToWideChar(acp, 0, lpa, -1, lpw, nChars);

	mov	ecx, DWORD PTR _nChars$[esp]
	mov	edx, DWORD PTR _acp$[esp]
	push	ecx
	push	esi
	push	-1
	push	eax
	push	0
	push	edx
	mov	WORD PTR [esi], 0
	call	DWORD PTR __imp__MultiByteToWideChar@24

; 605  : 	if(ret == 0)

	neg	eax
	sbb	eax, eax
	and	eax, esi
	pop	esi

; 606  : 	{
; 607  : 		ATLASSERT(FALSE);
; 608  : 		return NULL;
; 609  : 	}		
; 610  : 	return lpw;
; 611  : }

	ret	16					; 00000010H
$LN2@AtlA2WHelp:

; 599  : 		return NULL;

	xor	eax, eax
	pop	esi

; 606  : 	{
; 607  : 		ATLASSERT(FALSE);
; 608  : 		return NULL;
; 609  : 	}		
; 610  : 	return lpw;
; 611  : }

	ret	16					; 00000010H
?AtlA2WHelper@@YGPA_WPA_WPBDHI@Z ENDP			; AtlA2WHelper
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlbase.h
_TEXT	ENDS
;	COMDAT ?Lock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT
?Lock@CAtlModule@ATL@@UAEJXZ PROC			; ATL::CAtlModule::Lock, COMDAT
; _this$ = ecx

; 2754 : 		return CComGlobalsThreadModel::Increment(&m_nLockCnt);

	add	ecx, 8
	push	ecx
	call	DWORD PTR __imp__InterlockedIncrement@4

; 2755 : 	}

	ret	0
?Lock@CAtlModule@ATL@@UAEJXZ ENDP			; ATL::CAtlModule::Lock
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Unlock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT
?Unlock@CAtlModule@ATL@@UAEJXZ PROC			; ATL::CAtlModule::Unlock, COMDAT
; _this$ = ecx

; 2759 : 		return CComGlobalsThreadModel::Decrement(&m_nLockCnt);

	add	ecx, 8
	push	ecx
	call	DWORD PTR __imp__InterlockedDecrement@4

; 2760 : 	}

	ret	0
?Unlock@CAtlModule@ATL@@UAEJXZ ENDP			; ATL::CAtlModule::Unlock
_TEXT	ENDS
PUBLIC	__GUID_00000146_0000_0000_c000_000000000046
EXTRN	__imp__CoCreateInstance@20:PROC
EXTRN	_CLSID_StdGlobalInterfaceTable:BYTE
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000146_0000_0000_c000_000000000046 DD 0146H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z
_TEXT	SEGMENT
_ppGIT$ = 8						; size = 4
?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z PROC ; ATL::CAtlModule::GetGITPtr, COMDAT
; _this$ = ecx

; 2773 : 	{

	push	ebx

; 2774 : 		ATLASSERT(ppGIT != NULL);
; 2775 : 
; 2776 : 		if (ppGIT == NULL)

	mov	ebx, DWORD PTR _ppGIT$[esp]
	test	ebx, ebx
	jne	SHORT $LN6@GetGITPtr

; 2777 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	pop	ebx

; 2793 : 	}

	ret	4
$LN6@GetGITPtr:
	push	esi
	push	edi

; 2778 : 
; 2779 : 		HRESULT hr = S_OK;

	xor	edi, edi

; 2780 : 		if (m_pGIT == NULL)

	cmp	DWORD PTR [ecx+40], edi
	lea	esi, DWORD PTR [ecx+40]
	jne	SHORT $LN9@GetGITPtr

; 2781 : 		{
; 2782 : 			hr = ::CoCreateInstance(CLSID_StdGlobalInterfaceTable, NULL, CLSCTX_INPROC_SERVER,
; 2783 : 				__uuidof(IGlobalInterfaceTable), (void**)&m_pGIT);

	push	esi
	push	OFFSET __GUID_00000146_0000_0000_c000_000000000046
	push	1
	push	edi
	push	OFFSET _CLSID_StdGlobalInterfaceTable
	call	DWORD PTR __imp__CoCreateInstance@20
	mov	edi, eax

; 2784 : 		}
; 2785 : 
; 2786 : 		if (SUCCEEDED(hr))

	test	edi, edi
	jl	SHORT $LN4@GetGITPtr
$LN9@GetGITPtr:

; 2787 : 		{
; 2788 : 			ATLASSUME(m_pGIT != NULL);
; 2789 : 			*ppGIT = m_pGIT;

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [ebx], eax

; 2790 : 			m_pGIT->AddRef();

	mov	esi, DWORD PTR [esi]
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	push	esi
	call	edx
$LN4@GetGITPtr:

; 2791 : 		}
; 2792 : 		return hr;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 2793 : 	}

	ret	4
?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z ENDP ; ATL::CAtlModule::GetGITPtr
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_lpszRes$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z PROC ; ATL::CComModule::UpdateRegistryFromResourceS, COMDAT

; 4438 : #ifdef _ATL_STATIC_REGISTRY
; 4439 : 		return CAtlModuleT<CComModule>::UpdateRegistryFromResourceS(lpszRes, bRegister, pMapEntries);
; 4440 : #else
; 4441 : 		(lpszRes);
; 4442 : 		(bRegister);
; 4443 : 		(pMapEntries);
; 4444 : 		return E_FAIL;

	mov	eax, -2147467259			; 80004005H

; 4445 : #endif
; 4446 : 	}

	ret	16					; 00000010H
?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CComModule::UpdateRegistryFromResourceS
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_nResID$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z PROC ; ATL::CComModule::UpdateRegistryFromResourceS, COMDAT

; 4450 : #ifdef _ATL_STATIC_REGISTRY
; 4451 : 		return CAtlModuleT<CComModule>::UpdateRegistryFromResourceS(nResID, bRegister, pMapEntries);
; 4452 : #else
; 4453 : 		(nResID);
; 4454 : 		(bRegister);
; 4455 : 		(pMapEntries);
; 4456 : 		return E_FAIL;

	mov	eax, -2147467259			; 80004005H

; 4457 : #endif
; 4458 : 	}

	ret	16					; 00000010H
?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CComModule::UpdateRegistryFromResourceS
_TEXT	ENDS
PUBLIC	??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 635  : 	CAtlSafeAllocBufferManager() : m_pHead(NULL) {};

	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	ret	0
??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
_TEXT	ENDS
PUBLIC	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 649  : 	{

	push	esi
	mov	esi, ecx

; 650  : 		// Walk the list and free the buffers
; 651  : 		while (m_pHead != NULL)

	cmp	DWORD PTR [esi], 0
	je	SHORT $LN1@CAtlSafeAl
	push	edi
	mov	edi, DWORD PTR __imp__free
	npad	1
$LL2@CAtlSafeAl:

; 652  : 		{
; 653  : 			CAtlSafeAllocBufferNode* p = m_pHead;

	mov	eax, DWORD PTR [esi]

; 654  : 			m_pHead = m_pHead->m_pNext;

	mov	ecx, DWORD PTR [eax]

; 655  : 			Allocator::Free(p);

	push	eax
	mov	DWORD PTR [esi], ecx
	call	edi
	add	esp, 4
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LL2@CAtlSafeAl
	pop	edi
$LN1@CAtlSafeAl:
	pop	esi

; 656  : 		}
; 657  : 	}

	ret	0
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
_TEXT	ENDS
PUBLIC	??_C@_11LOCGONAA@?$AA?$AA@			; `string'
PUBLIC	?GetAppId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAPB_WXZ ; ATL::CAtlModuleT<ATL::CComModule>::GetAppId
;	COMDAT ??_C@_11LOCGONAA@?$AA?$AA@
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlbase.h
CONST	SEGMENT
??_C@_11LOCGONAA@?$AA?$AA@ DB 00H, 00H			; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?GetAppId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAPB_WXZ
_TEXT	SEGMENT
?GetAppId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAPB_WXZ PROC ; ATL::CAtlModuleT<ATL::CComModule>::GetAppId, COMDAT

; 3044 : 		return OLESTR("");

	mov	eax, OFFSET ??_C@_11LOCGONAA@?$AA?$AA@

; 3045 : 	}

	ret	0
?GetAppId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAPB_WXZ ENDP ; ATL::CAtlModuleT<ATL::CComModule>::GetAppId
_TEXT	ENDS
PUBLIC	?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlalloc.h
;	COMDAT ?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ
_TEXT	SEGMENT
?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ PROC ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData, COMDAT
; _this$ = ecx

; 628  : 			return (this + 1);

	lea	eax, DWORD PTR [ecx+8]

; 629  : 		}

	ret	0
?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData
_TEXT	ENDS
PUBLIC	??$AtlAdd@K@ATL@@YAJPAKKK@Z			; ATL::AtlAdd<unsigned long>
; Function compile flags: /Ogtpy
;	COMDAT ??$AtlAdd@K@ATL@@YAJPAKKK@Z
_TEXT	SEGMENT
_ptResult$ = 8						; size = 4
_tLeft$ = 12						; size = 4
_tRight$ = 16						; size = 4
??$AtlAdd@K@ATL@@YAJPAKKK@Z PROC			; ATL::AtlAdd<unsigned long>, COMDAT

; 96   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

	mov	eax, DWORD PTR _tLeft$[esp-4]
	mov	ecx, DWORD PTR _tRight$[esp-4]
	or	edx, -1
	sub	edx, eax
	cmp	edx, ecx
	jae	SHORT $LN1@AtlAdd

; 97   : 	{
; 98   : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H

; 102  : }

	ret	0
$LN1@AtlAdd:

; 99   : 	}
; 100  : 	*ptResult= tLeft + tRight;

	add	eax, ecx
	mov	ecx, DWORD PTR _ptResult$[esp-4]
	mov	DWORD PTR [ecx], eax

; 101  : 	return S_OK;

	xor	eax, eax

; 102  : }

	ret	0
??$AtlAdd@K@ATL@@YAJPAKKK@Z ENDP			; ATL::AtlAdd<unsigned long>
_TEXT	ENDS
PUBLIC	??$AtlAddThrow@K@ATL@@YAKKK@Z			; ATL::AtlAddThrow<unsigned long>
; Function compile flags: /Ogtpy
;	COMDAT ??$AtlAddThrow@K@ATL@@YAKKK@Z
_TEXT	SEGMENT
_tLeft$ = 8						; size = 4
_tRight$ = 12						; size = 4
??$AtlAddThrow@K@ATL@@YAKKK@Z PROC			; ATL::AtlAddThrow<unsigned long>, COMDAT

; 186  : 	T tResult;
; 187  : 	HRESULT hr=AtlAdd(&tResult, tLeft, tRight);

	mov	eax, DWORD PTR _tLeft$[esp-4]
	mov	ecx, DWORD PTR _tRight$[esp-4]
	or	edx, -1
	sub	edx, eax
	cmp	edx, ecx
	jb	SHORT $LN7@AtlAddThro
	add	eax, ecx

; 188  : 	if(FAILED(hr))
; 189  : 	{
; 190  : 		AtlThrow(hr);
; 191  : 	}
; 192  : 	return tResult;
; 193  : }

	ret	0
$LN7@AtlAddThro:
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN8@AtlAddThro:
	int	3
??$AtlAddThrow@K@ATL@@YAKKK@Z ENDP			; ATL::AtlAddThrow<unsigned long>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
EXTRN	__imp___resetstkoflw:PROC
EXTRN	__alloca_probe_16:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__sehtable$?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z DD 0ffffffe4H
	DD	00H
	DD	0ffffffccH
	DD	00H
	DD	0fffffffeH
	DD	FLAT:$LN7@AtlVerifyS
	DD	FLAT:$LN8@AtlVerifyS
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
_TEXT	SEGMENT
_size$51497 = -36					; size = 4
_bStackAvailable$ = -29					; size = 1
__$ArrayPad$ = -28					; size = 4
__$SEHRec$ = -24					; size = 24
_Size$ = 8						; size = 4
?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z PROC ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable, COMDAT

; 580  : {

	push	ebp
	mov	ebp, esp
	push	-2					; fffffffeH
	push	OFFSET __sehtable$?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
	push	OFFSET __except_handler4
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	DWORD PTR __$SEHRec$[ebp+16], eax
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$SEHRec$[ebp], esp

; 581  :     bool bStackAvailable = true;

	mov	bl, 1

; 582  : 
; 583  :     __try

	xor	esi, esi
	mov	DWORD PTR __$SEHRec$[ebp+20], esi

; 584  :     {
; 585  : 		SIZE_T size=0;

	mov	DWORD PTR _size$51497[ebp], esi

; 586  : 		HRESULT hrAdd=::ATL::AtlAdd(&size, Size, static_cast<SIZE_T>(_ATL_STACK_MARGIN));

	push	8192					; 00002000H
	mov	eax, DWORD PTR _Size$[ebp]
	push	eax
	lea	ecx, DWORD PTR _size$51497[ebp]
	push	ecx
	call	??$AtlAdd@K@ATL@@YAJPAKKK@Z		; ATL::AtlAdd<unsigned long>
	add	esp, 12					; 0000000cH

; 587  : 		if(FAILED(hrAdd))

	cmp	eax, esi
	jge	SHORT $LN2@AtlVerifyS

; 588  : 		{
; 589  : 			ATLASSERT(FALSE);
; 590  : 			bStackAvailable = false;

	xor	bl, bl
	mov	BYTE PTR _bStackAvailable$[ebp], bl

; 591  : 		}
; 592  : 		else

	jmp	SHORT $LN1@AtlVerifyS
$LN2@AtlVerifyS:

; 593  : 		{
; 594  : 			PVOID p = _alloca(size);

	mov	eax, DWORD PTR _size$51497[ebp]
	call	__alloca_probe_16
	mov	DWORD PTR __$SEHRec$[ebp], esp

; 595  : 			(p);
; 596  : 		}
; 597  :     }

	jmp	SHORT $LN1@AtlVerifyS
$LN7@AtlVerifyS:

; 598  :     __except ((EXCEPTION_STACK_OVERFLOW == GetExceptionCode()) ?
; 599  :                    EXCEPTION_EXECUTE_HANDLER :
; 600  :                    EXCEPTION_CONTINUE_SEARCH)

	mov	edx, DWORD PTR __$SEHRec$[ebp+4]
	mov	eax, DWORD PTR [edx]
	mov	eax, DWORD PTR [eax]
	xor	ecx, ecx
	cmp	eax, -1073741571			; c00000fdH
	sete	cl
	mov	eax, ecx
$LN9@AtlVerifyS:
	ret	0
$LN8@AtlVerifyS:
	mov	esp, DWORD PTR __$SEHRec$[ebp]

; 601  :     {
; 602  :         bStackAvailable = false;

	xor	bl, bl
	mov	BYTE PTR _bStackAvailable$[ebp], bl

; 603  :         _resetstkoflw();

	call	DWORD PTR __imp___resetstkoflw
$LN1@AtlVerifyS:

; 604  :     }

	mov	DWORD PTR __$SEHRec$[ebp+20], -2	; fffffffeH

; 605  :     return bStackAvailable;

	mov	al, bl

; 606  : }

	lea	esp, DWORD PTR [ebp-52]
	mov	ecx, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
_TEXT	ENDS
PUBLIC	?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
; Function compile flags: /Ogtpy
;	COMDAT ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z
_TEXT	SEGMENT
_nRequestedSize$ = 8					; size = 4
?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z PROC ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 638  : 		CAtlSafeAllocBufferNode *p = (CAtlSafeAllocBufferNode*)Allocator::Allocate(::ATL::AtlAddThrow(nRequestedSize, static_cast<SIZE_T>(sizeof(CAtlSafeAllocBufferNode))));

	mov	eax, DWORD PTR _nRequestedSize$[esp-4]
	push	esi
	mov	esi, ecx
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, 8
	jb	SHORT $LN15@Allocate
	add	eax, 8
	push	eax
	call	DWORD PTR __imp__malloc
	add	esp, 4

; 639  : 		if (p == NULL)

	test	eax, eax
	jne	SHORT $LN1@Allocate
	pop	esi

; 647  : 	}

	ret	4
$LN15@Allocate:

; 638  : 		CAtlSafeAllocBufferNode *p = (CAtlSafeAllocBufferNode*)Allocator::Allocate(::ATL::AtlAddThrow(nRequestedSize, static_cast<SIZE_T>(sizeof(CAtlSafeAllocBufferNode))));

	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN1@Allocate:

; 640  : 			return NULL;
; 641  : 		
; 642  : 		// Add buffer to the list
; 643  : 		p->m_pNext = m_pHead;

	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 644  : 		m_pHead = p;

	mov	DWORD PTR [esi], eax

; 645  : 		
; 646  : 		return p->GetData();

	add	eax, 8
	pop	esi

; 647  : 	}

	ret	4
$LN16@Allocate:
?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
PUBLIC	??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD?$AA?$AA@
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlbase.h
CONST	SEGMENT
??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD?$AA?$AA@ DB 'A', 00H, 'P', 00H
	DB	'P', 00H, 'I', 00H, 'D', 00H, 00H, 00H	; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?AddCommonRGSReplacements@?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEJPAUIRegistrarBase@@@Z
_TEXT	SEGMENT
_pRegistrar$ = 8					; size = 4
?AddCommonRGSReplacements@?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEJPAUIRegistrarBase@@@Z PROC ; ATL::CAtlModuleT<ATL::CComModule>::AddCommonRGSReplacements, COMDAT
; _this$ = ecx

; 3040 : 		return pRegistrar->AddReplacement(L"APPID", T::GetAppId());

	mov	eax, DWORD PTR _pRegistrar$[esp-4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	push	OFFSET ??_C@_11LOCGONAA@?$AA?$AA@
	push	OFFSET ??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD?$AA?$AA@
	push	eax
	call	edx

; 3041 : 	}

	ret	4
?AddCommonRGSReplacements@?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEJPAUIRegistrarBase@@@Z ENDP ; ATL::CAtlModuleT<ATL::CComModule>::AddCommonRGSReplacements
_TEXT	ENDS
PUBLIC	??1CComModule@ATL@@UAE@XZ			; ATL::CComModule::~CComModule
; Function compile flags: /Ogtpy
;	COMDAT ??1CComModule@ATL@@UAE@XZ
_TEXT	SEGMENT
??1CComModule@ATL@@UAE@XZ PROC				; ATL::CComModule::~CComModule, COMDAT
; _this$ = ecx

; 4252 : 	{

	push	esi
	mov	esi, ecx

; 4253 : #if !defined(_ATL_NATIVE_INITIALIZATION)
; 4254 : #pragma warning(push)
; 4255 : #pragma warning(disable:4483)
; 4256 : 		using namespace __identifier("<AtlImplementationDetails>");
; 4257 : #pragma warning(pop)
; 4258 : 		ATLASSERT(ComModuleInitialized == true);
; 4259 : 		// If ComModuleHelper.Module == NULL it mean that DllMain has not been called, so we assume CComModule lives in
; 4260 : 		// an exe and not in a dll
; 4261 : 		if (ComModuleHelper.Module != NULL)
; 4262 : 		{
; 4263 : 			ATLASSERT(ComModuleHelper.Module == this);
; 4264 : 			_DllMain(ComModuleHelper.Instance, DLL_PROCESS_DETACH, NULL, ComModuleHelper.ObjectMap, ComModuleHelper.LibraryId);
; 4265 : 		}
; 4266 : #endif
; 4267 : 	}

	cmp	DWORD PTR [esi+4], 0
	push	edi
	lea	edi, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7CComModule@ATL@@6B@
	je	SHORT $LN13@CComModule@2
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN11@CComModule@2
	push	edi
	call	DWORD PTR __imp__AtlCallTermFunc@4
	mov	DWORD PTR [esi+12], 0
$LN11@CComModule@2:
	mov	eax, DWORD PTR [esi+40]
	test	eax, eax
	je	SHORT $LN10@CComModule@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN10@CComModule@2:
	add	esi, 16					; 00000010H
	push	esi
	call	DWORD PTR __imp__DeleteCriticalSection@4
	mov	DWORD PTR [edi], 0
$LN13@CComModule@2:
	pop	edi
	pop	esi
	ret	0
??1CComModule@ATL@@UAE@XZ ENDP				; ATL::CComModule::~CComModule
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCComModule@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCComModule@ATL@@UAEPAXI@Z PROC			; ATL::CComModule::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+4], 0
	push	edi
	lea	edi, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7CComModule@ATL@@6B@
	je	SHORT $LN16@scalar@2
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN14@scalar@2
	push	edi
	call	DWORD PTR __imp__AtlCallTermFunc@4
	mov	DWORD PTR [esi+12], 0
$LN14@scalar@2:
	mov	eax, DWORD PTR [esi+40]
	test	eax, eax
	je	SHORT $LN13@scalar@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN13@scalar@2:
	lea	eax, DWORD PTR [esi+16]
	push	eax
	call	DWORD PTR __imp__DeleteCriticalSection@4
	mov	DWORD PTR [edi], 0
$LN16@scalar@2:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN22@scalar@2
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN22@scalar@2:
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??_GCComModule@ATL@@UAEPAXI@Z ENDP			; ATL::CComModule::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__GUID_00000000_0000_0000_c000_000000000046
PUBLIC	?GetClassObject@CComModule@ATL@@QAEJABU_GUID@@0PAPAX@Z ; ATL::CComModule::GetClassObject
EXTRN	__imp__AtlComModuleGetClassObject@16:PROC
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcore.h
CONST	SEGMENT
__GUID_00000000_0000_0000_c000_000000000046 DD 00H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlbase.h
CONST	ENDS
;	COMDAT ?GetClassObject@CComModule@ATL@@QAEJABU_GUID@@0PAPAX@Z
_TEXT	SEGMENT
_lock$118617 = -8					; size = 8
_rclsid$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?GetClassObject@CComModule@ATL@@QAEJABU_GUID@@0PAPAX@Z PROC ; ATL::CComModule::GetClassObject, COMDAT
; _this$ = ecx

; 7070 : {

	sub	esp, 8

; 7071 : 	if (ppv == NULL)

	cmp	DWORD PTR _ppv$[esp+4], 0
	jne	SHORT $LN10@GetClassOb

; 7072 : 		return E_POINTER;

	mov	eax, -2147467261			; 80004003H

; 7105 : }

	add	esp, 8
	ret	12					; 0000000cH
$LN10@GetClassOb:
	push	ebx
	push	ebp

; 7073 : 	HRESULT hr = S_OK;
; 7074 : 	_ATL_OBJMAP_ENTRY* pEntry;
; 7075 : 	if (m_pObjMap != NULL)

	mov	ebp, DWORD PTR _rclsid$[esp+12]
	push	esi
	mov	esi, DWORD PTR [ecx+44]
	xor	ebx, ebx
	test	esi, esi
	je	$LN37@GetClassOb

; 7076 : 	{
; 7077 : 		pEntry = m_pObjMap;
; 7078 : 		while (pEntry->pclsid != NULL)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	$LN37@GetClassOb
$LL8@GetClassOb:

; 7079 : 		{
; 7080 : 			if ((pEntry->pfnGetClassObject != NULL) && InlineIsEqualGUID(rclsid, *pEntry->pclsid))

	cmp	DWORD PTR [esi+8], ebx
	je	SHORT $LN15@GetClassOb
	mov	ecx, DWORD PTR [ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN15@GetClassOb
	mov	edx, DWORD PTR [ebp+4]
	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN15@GetClassOb
	mov	ecx, DWORD PTR [ebp+8]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN15@GetClassOb
	mov	edx, DWORD PTR [ebp+12]
	cmp	edx, DWORD PTR [eax+12]
	je	SHORT $LN33@GetClassOb
$LN15@GetClassOb:
	mov	eax, DWORD PTR [esi+36]

; 7097 : 				break;
; 7098 : 			}
; 7099 : 			pEntry++;

	add	esi, 36					; 00000024H
	test	eax, eax
	jne	SHORT $LL8@GetClassOb

; 7076 : 	{
; 7077 : 		pEntry = m_pObjMap;
; 7078 : 		while (pEntry->pclsid != NULL)

	jmp	SHORT $LN37@GetClassOb
$LN33@GetClassOb:

; 7081 : 			{
; 7082 : 				if (pEntry->pCF == NULL)

	cmp	DWORD PTR [esi+16], ebx
	push	edi
	lea	edi, DWORD PTR [esi+16]
	jne	SHORT $LN5@GetClassOb

; 7083 : 				{
; 7084 : 					CComCritSecLock<CComCriticalSection> lock(_AtlComModule.m_csObjMap, false);
; 7085 : 					hr = lock.Lock();

	push	OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A+16
	mov	DWORD PTR _lock$118617[esp+28], OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A+16
	call	DWORD PTR __imp__EnterCriticalSection@4
	xor	ebx, ebx

; 7086 : 					if (FAILED(hr))
; 7087 : 					{
; 7088 : 						ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to lock critical section in CComModule::GetClassObject\n"));
; 7089 : 						ATLASSERT(0);
; 7090 : 						break;
; 7091 : 					}
; 7092 : 					if (pEntry->pCF == NULL)

	cmp	DWORD PTR [edi], ebx
	mov	BYTE PTR _lock$118617[esp+28], 1
	jne	SHORT $LN3@GetClassOb

; 7093 : 						hr = pEntry->pfnGetClassObject(pEntry->pfnCreateInstance, __uuidof(IUnknown), (LPVOID*)&pEntry->pCF);

	mov	eax, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR [esi+8]
	push	edi
	push	OFFSET __GUID_00000000_0000_0000_c000_000000000046
	push	eax
	call	ecx
	mov	ebx, eax
$LN3@GetClassOb:

; 7094 : 				}

	lea	ecx, DWORD PTR _lock$118617[esp+24]
	call	??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
$LN5@GetClassOb:

; 7095 : 				if (pEntry->pCF != NULL)

	cmp	DWORD PTR [edi], 0
	je	SHORT $LN39@GetClassOb

; 7096 : 					hr = pEntry->pCF->QueryInterface(riid, ppv);

	mov	eax, DWORD PTR _ppv$[esp+20]
	mov	edi, DWORD PTR [edi]
	mov	ecx, DWORD PTR _riid$[esp+20]
	mov	edx, DWORD PTR [edi]
	mov	edx, DWORD PTR [edx]
	push	eax
	push	ecx
	push	edi
	call	edx
	mov	ebx, eax
$LN39@GetClassOb:
	pop	edi
$LN37@GetClassOb:

; 7100 : 		}
; 7101 : 	}
; 7102 : 	if (*ppv == NULL && hr == S_OK)

	mov	eax, DWORD PTR _ppv$[esp+16]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@GetClassOb
	test	ebx, ebx
	jne	SHORT $LN1@GetClassOb

; 7103 : 		hr = AtlComModuleGetClassObject(&_AtlComModule, rclsid, riid, ppv);

	push	eax
	mov	eax, DWORD PTR _riid$[esp+20]
	push	eax
	push	ebp
	push	OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
	call	DWORD PTR __imp__AtlComModuleGetClassObject@16
	mov	ebx, eax
$LN1@GetClassOb:
	pop	esi
	pop	ebp

; 7104 : 	return hr;

	mov	eax, ebx
	pop	ebx

; 7105 : }

	add	esp, 8
	ret	12					; 0000000cH
?GetClassObject@CComModule@ATL@@QAEJABU_GUID@@0PAPAX@Z ENDP ; ATL::CComModule::GetClassObject
_TEXT	ENDS
PUBLIC	??1CComClassFactory@ATL@@QAE@XZ			; ATL::CComClassFactory::~CComClassFactory
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcom.h
;	COMDAT ??1CComClassFactory@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CComClassFactory@ATL@@QAE@XZ PROC			; ATL::CComClassFactory::~CComClassFactory, COMDAT
; _this$ = ecx

; 3281 : 	}

	lea	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [ecx], OFFSET ??_7CComClassFactory@ATL@@6B@
	cmp	BYTE PTR [eax+24], 0
	je	SHORT $LN15@CComClassF
	push	eax
	mov	BYTE PTR [eax+24], 0
	call	DWORD PTR __imp__DeleteCriticalSection@4
$LN15@CComClassF:
	ret	0
??1CComClassFactory@ATL@@QAE@XZ ENDP			; ATL::CComClassFactory::~CComClassFactory
_TEXT	ENDS
PUBLIC	??0ITracker4@@QAE@XZ				; ITracker4::ITracker4
; Function compile flags: /Ogtpy
;	COMDAT ??0ITracker4@@QAE@XZ
_TEXT	SEGMENT
??0ITracker4@@QAE@XZ PROC				; ITracker4::ITracker4, COMDAT
; _this$ = ecx
	mov	eax, ecx
	ret	0
??0ITracker4@@QAE@XZ ENDP				; ITracker4::ITracker4
_TEXT	ENDS
PUBLIC	_DllGetClassObject@12
; Function compile flags: /Ogtpy
; File d:\sysal2\smarttracker8.6\smarttracker8.cpp
;	COMDAT _DllGetClassObject@12
_TEXT	SEGMENT
_rclsid$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
_DllGetClassObject@12 PROC				; COMDAT

; 80   :     return _Module.GetClassObject(rclsid, riid, ppv);

	mov	ecx, OFFSET ?_Module@@3VCComModule@ATL@@A ; _Module
	jmp	?GetClassObject@CComModule@ATL@@QAEJABU_GUID@@0PAPAX@Z ; ATL::CComModule::GetClassObject
_DllGetClassObject@12 ENDP
_TEXT	ENDS
PUBLIC	??_7?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@6B@ ; ATL::CComObjectCached<ATL::CComClassFactory>::`vftable'
PUBLIC	??0?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObjectCached<ATL::CComClassFactory>::CComObjectCached<ATL::CComClassFactory>
PUBLIC	??_R4?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@6B@ ; ATL::CComObjectCached<ATL::CComClassFactory>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@8 ; ATL::CComObjectCached<ATL::CComClassFactory> `RTTI Type Descriptor'
PUBLIC	??_R3?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@8 ; ATL::CComObjectCached<ATL::CComClassFactory>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@8 ; ATL::CComObjectCached<ATL::CComClassFactory>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@8 ; ATL::CComObjectCached<ATL::CComClassFactory>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObjectCached<ATL::CComClassFactory>::QueryInterface
PUBLIC	?AddRef@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ ; ATL::CComObjectCached<ATL::CComClassFactory>::AddRef
PUBLIC	?Release@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ ; ATL::CComObjectCached<ATL::CComClassFactory>::Release
;	COMDAT ??_R1A@?0A@EA@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@8
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcore.h
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@8 DD FLAT:??_R0?AV?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@8 ; ATL::CComObjectCached<ATL::CComClassFactory>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@8
rdata$r	SEGMENT
??_R2?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@8 DD FLAT:??_R1A@?0A@EA@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@8 ; ATL::CComObjectCached<ATL::CComClassFactory>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CComClassFactory@ATL@@8
	DD	FLAT:??_R1A@?0A@EA@IClassFactory@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
	DD	FLAT:??_R13?0A@EA@CComObjectRootBase@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@8
rdata$r	SEGMENT
??_R3?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@8 DD 00H ; ATL::CComObjectCached<ATL::CComClassFactory>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@8
_DATA	SEGMENT
??_R0?AV?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CComObjectCached<ATL::CComClassFactory> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@6B@
rdata$r	SEGMENT
??_R4?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@6B@ DD 00H ; ATL::CComObjectCached<ATL::CComClassFactory>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@8
	DD	FLAT:??_R3?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_7?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@6B@
CONST	SEGMENT
??_7?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@6B@ DD FLAT:??_R4?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@6B@ ; ATL::CComObjectCached<ATL::CComClassFactory>::`vftable'
	DD	FLAT:?QueryInterface@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?Release@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
	DD	FLAT:?LockServer@CComClassFactory@ATL@@UAGJH@Z
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcom.h
CONST	ENDS
;	COMDAT ??0?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAE@PAX@Z PROC ; ATL::CComObjectCached<ATL::CComClassFactory>::CComObjectCached<ATL::CComClassFactory>, COMDAT
; _this$ = ecx

; 2642 : 	CComObjectCached(void* = NULL){}

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+24], ecx
	mov	DWORD PTR [eax+28], ecx
	mov	BYTE PTR [eax+32], cl
	mov	DWORD PTR [eax], OFFSET ??_7?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@6B@
	ret	4
??0?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAE@PAX@Z ENDP ; ATL::CComObjectCached<ATL::CComClassFactory>::CComObjectCached<ATL::CComClassFactory>
_TEXT	ENDS
PUBLIC	?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::InternalQueryInterface
EXTRN	__imp__AtlInternalQueryInterface@16:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_pThis$ = 8						; size = 4
_pEntries$ = 12						; size = 4
_iid$ = 16						; size = 4
_ppvObject$ = 20					; size = 4
?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z PROC ; ATL::CComObjectRootBase::InternalQueryInterface, COMDAT

; 2215 : 		// Only Assert here. AtlInternalQueryInterface will return the correct HRESULT if ppvObject == NULL
; 2216 : #ifndef _ATL_OLEDB_CONFORMANCE_TESTS
; 2217 : 		ATLASSERT(ppvObject != NULL);
; 2218 : #endif
; 2219 : 		ATLASSERT(pThis != NULL);
; 2220 : 		// First entry in the com map should be a simple map entry
; 2221 : 		ATLASSERT(pEntries->pFunc == _ATL_SIMPLEMAPENTRY);
; 2222 : 	#if defined(_ATL_DEBUG_INTERFACES) || defined(_ATL_DEBUG_QI)
; 2223 : 		LPCTSTR pszClassName = (LPCTSTR) pEntries[-1].dw;
; 2224 : 	#endif // _ATL_DEBUG_INTERFACES
; 2225 : 		HRESULT hRes = AtlInternalQueryInterface(pThis, pEntries, iid, ppvObject);

	jmp	DWORD PTR __imp__AtlInternalQueryInterface@16
?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ENDP ; ATL::CComObjectRootBase::InternalQueryInterface
_TEXT	ENDS
PUBLIC	?_entries@?1??_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; `ATL::CComClassFactory::_GetEntries'::`2'::_entries
PUBLIC	?_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CComClassFactory::_GetEntries
PUBLIC	__GUID_00000001_0000_0000_c000_000000000046
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000001_0000_0000_c000_000000000046 DD 01H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT
?_entries@?1??_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B DD FLAT:__GUID_00000001_0000_0000_c000_000000000046 ; `ATL::CComClassFactory::_GetEntries'::`2'::_entries
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT
?_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ PROC ; ATL::CComClassFactory::_GetEntries, COMDAT

; 3275 : 		COM_INTERFACE_ENTRY(IClassFactory)
; 3276 : 	END_COM_MAP()

	mov	eax, OFFSET ?_entries@?1??_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; `ATL::CComClassFactory::_GetEntries'::`2'::_entries
	ret	0
?_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ENDP ; ATL::CComClassFactory::_GetEntries
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ PROC ; ATL::CComObjectCached<ATL::CComClassFactory>::AddRef, COMDAT

; 2658 : 		ULONG l = InternalAddRef();

	mov	eax, DWORD PTR _this$[esp-4]
	push	esi
	add	eax, 4
	push	eax
	call	DWORD PTR __imp__InterlockedIncrement@4
	mov	esi, eax

; 2659 : 		if (l == 2)

	cmp	esi, 2
	jne	SHORT $LN1@AddRef

; 2660 : 			_pAtlModule->Lock();

	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	call	eax

; 2661 : 		return l;

	mov	eax, esi
$LN1@AddRef:
	pop	esi

; 2662 : 	}

	ret	4
?AddRef@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComObjectCached<ATL::CComClassFactory>::AddRef
_TEXT	ENDS
PUBLIC	?_InternalQueryInterface@CComClassFactory@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComClassFactory::_InternalQueryInterface
; Function compile flags: /Ogtpy
;	COMDAT ?_InternalQueryInterface@CComClassFactory@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_iid$ = 8						; size = 4
_ppvObject$ = 12					; size = 4
?_InternalQueryInterface@CComClassFactory@ATL@@QAEJABU_GUID@@PAPAX@Z PROC ; ATL::CComClassFactory::_InternalQueryInterface, COMDAT
; _this$ = ecx

; 3274 : 	BEGIN_COM_MAP(CComClassFactory)

	mov	eax, DWORD PTR _ppvObject$[esp-4]
	mov	edx, DWORD PTR _iid$[esp-4]
	push	eax
	push	edx
	push	OFFSET ?_entries@?1??_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; `ATL::CComClassFactory::_GetEntries'::`2'::_entries
	push	ecx
	call	DWORD PTR __imp__AtlInternalQueryInterface@16
	ret	8
?_InternalQueryInterface@CComClassFactory@ATL@@QAEJABU_GUID@@PAPAX@Z ENDP ; ATL::CComClassFactory::_InternalQueryInterface
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC ; ATL::CComObjectCached<ATL::CComClassFactory>::QueryInterface, COMDAT

; 2674 : 	{return _InternalQueryInterface(iid, ppvObject);}

	mov	eax, DWORD PTR _ppvObject$[esp-4]
	mov	ecx, DWORD PTR _iid$[esp-4]
	mov	edx, DWORD PTR _this$[esp-4]
	push	eax
	push	ecx
	push	OFFSET ?_entries@?1??_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; `ATL::CComClassFactory::_GetEntries'::`2'::_entries
	push	edx
	call	DWORD PTR __imp__AtlInternalQueryInterface@16
	ret	12					; 0000000cH
?QueryInterface@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CComObjectCached<ATL::CComClassFactory>::QueryInterface
_TEXT	ENDS
PUBLIC	??1?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectCached<ATL::CComClassFactory>::~CComObjectCached<ATL::CComClassFactory>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAE@XZ PROC ; ATL::CComObjectCached<ATL::CComClassFactory>::~CComObjectCached<ATL::CComClassFactory>, COMDAT
; _this$ = ecx

; 2648 : 		m_dwRef = -(LONG_MAX/2);
; 2649 : 		FinalRelease();
; 2650 : #ifdef _ATL_DEBUG_INTERFACES
; 2651 : 		_AtlDebugInterfacesModule.DeleteNonAddRefThunk(_GetRawUnknown());
; 2652 : #endif
; 2653 : 	}

	lea	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [ecx+4], -1073741823		; c0000001H
	mov	DWORD PTR [ecx], OFFSET ??_7CComClassFactory@ATL@@6B@
	cmp	BYTE PTR [eax+24], 0
	je	SHORT $LN17@CComObject@2
	push	eax
	mov	BYTE PTR [eax+24], 0
	call	DWORD PTR __imp__DeleteCriticalSection@4
$LN17@CComObject@2:
	ret	0
??1?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CComObjectCached<ATL::CComClassFactory>::~CComObjectCached<ATL::CComClassFactory>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?UpdateRegistryFromResourceD@CAtlModule@ATL@@QAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CAtlModule::UpdateRegistryFromResourceD
EXTRN	__allmul:PROC
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlbase.h
;	COMDAT ?UpdateRegistryFromResourceD@CAtlModule@ATL@@QAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
tv176 = -20						; size = 8
__acp_ex$ = -12						; size = 4
__AtlSafeAllocaManager$ = -8				; size = 4
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_lpszRes$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResourceD@CAtlModule@ATL@@QAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z PROC ; ATL::CAtlModule::UpdateRegistryFromResourceD, COMDAT

; 2807 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx

; 2808 : 		if(lpszRes == NULL)

	mov	ebx, DWORD PTR _lpszRes$[ebp]
	test	ebx, ebx
	push	esi
	push	edi
	jne	SHORT $LN1@UpdateRegi@2

; 2809 : 			return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H
	jmp	$LN2@UpdateRegi@2
$LN1@UpdateRegi@2:

; 2810 : 		
; 2811 : 		USES_CONVERSION_EX;

	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	xor	esi, esi

; 2812 : 		LPCOLESTR pwszTemp = T2COLE_EX(lpszRes, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	push	ebx
	mov	DWORD PTR __acp_ex$[ebp], eax
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], esi
	call	DWORD PTR __imp__lstrlenA@4
	push	esi
	add	eax, 1
	cdq
	push	2
	push	edx
	push	eax
	call	__allmul
	mov	edi, eax
	add	eax, -2147483648			; 80000000H
	adc	edx, esi
	mov	DWORD PTR tv176[ebp+4], edx
	jne	SHORT $LN27@UpdateRegi@2
	cmp	eax, -1
	jbe	SHORT $LN6@UpdateRegi@2
$LN27@UpdateRegi@2:
	xor	eax, eax
	jmp	SHORT $LN7@UpdateRegi@2
$LN6@UpdateRegi@2:
	cmp	edi, 1024				; 00000400H
	jg	SHORT $LN4@UpdateRegi@2
	push	edi
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	test	al, al
	je	SHORT $LN4@UpdateRegi@2
	mov	eax, edi
	call	__alloca_probe_16
	mov	eax, esp
	jmp	SHORT $LN5@UpdateRegi@2
$LN4@UpdateRegi@2:
	push	edi
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
	mov	esi, DWORD PTR __AtlSafeAllocaManager$[ebp]
$LN5@UpdateRegi@2:
	mov	ecx, DWORD PTR __acp_ex$[ebp]
	push	ecx
	shr	edi, 1
	push	edi
	push	ebx
	push	eax
	call	?AtlA2WHelper@@YGPA_WPA_WPBDHI@Z	; AtlA2WHelper
$LN7@UpdateRegi@2:

; 2813 : #ifdef _UNICODE
; 2814 : 		if(pwszTemp == NULL) 
; 2815 : 			return E_OUTOFMEMORY;
; 2816 : #endif		
; 2817 : 		return UpdateRegistryFromResourceDHelper(pwszTemp, bRegister, pMapEntries);

	mov	edx, DWORD PTR _pMapEntries$[ebp]
	mov	ecx, DWORD PTR _bRegister$[ebp]
	push	edx
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	push	eax
	push	edx
	call	?UpdateRegistryFromResourceDHelper@CAtlModule@ATL@@QAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CAtlModule::UpdateRegistryFromResourceDHelper
	test	esi, esi
	mov	ebx, eax
	je	SHORT $LN18@UpdateRegi@2
	mov	edi, DWORD PTR __imp__free
$LL19@UpdateRegi@2:
	mov	eax, esi
	mov	esi, DWORD PTR [esi]
	push	eax
	call	edi
	add	esp, 4
	test	esi, esi
	jne	SHORT $LL19@UpdateRegi@2
$LN18@UpdateRegi@2:
	mov	eax, ebx
$LN2@UpdateRegi@2:

; 2818 : 	}

	lea	esp, DWORD PTR [ebp-32]
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?UpdateRegistryFromResourceD@CAtlModule@ATL@@QAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CAtlModule::UpdateRegistryFromResourceD
_TEXT	ENDS
PUBLIC	?UpdateRegistryFromResourceD@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CAtlModule::UpdateRegistryFromResourceD
; Function compile flags: /Ogtpy
;	COMDAT ?UpdateRegistryFromResourceD@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_nResID$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResourceD@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z PROC ; ATL::CAtlModule::UpdateRegistryFromResourceD, COMDAT

; 2822 : 		return UpdateRegistryFromResourceDHelper((LPCOLESTR)MAKEINTRESOURCE(nResID), bRegister, pMapEntries);

	movzx	edx, WORD PTR _nResID$[esp-4]
	mov	DWORD PTR _nResID$[esp-4], edx
	jmp	?UpdateRegistryFromResourceDHelper@CAtlModule@ATL@@QAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CAtlModule::UpdateRegistryFromResourceDHelper
?UpdateRegistryFromResourceD@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CAtlModule::UpdateRegistryFromResourceD
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_lpszRes$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z PROC ; ATL::CComModule::UpdateRegistryFromResourceD, COMDAT

; 4411 : #if defined(_ATL_STATIC_REGISTRY)
; 4412 : 		(lpszRes);
; 4413 : 		(bRegister);
; 4414 : 		(pMapEntries);
; 4415 : 		return E_FAIL;
; 4416 : #else
; 4417 : 		return CAtlModuleT<CComModule>::UpdateRegistryFromResourceD(lpszRes, bRegister, pMapEntries);		

	jmp	?UpdateRegistryFromResourceD@CAtlModule@ATL@@QAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CAtlModule::UpdateRegistryFromResourceD
?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CComModule::UpdateRegistryFromResourceD
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_nResID$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z PROC ; ATL::CComModule::UpdateRegistryFromResourceD, COMDAT

; 4423 : #if defined(_ATL_STATIC_REGISTRY)
; 4424 : 		(nResID);
; 4425 : 		(bRegister);
; 4426 : 		(pMapEntries);
; 4427 : 		return E_FAIL;
; 4428 : #else
; 4429 : 		return CAtlModuleT<CComModule>::UpdateRegistryFromResourceD(nResID, bRegister, pMapEntries);

	movzx	edx, WORD PTR _nResID$[esp-4]
	mov	DWORD PTR _nResID$[esp-4], edx
	jmp	?UpdateRegistryFromResourceDHelper@CAtlModule@ATL@@QAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CAtlModule::UpdateRegistryFromResourceDHelper
?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CComModule::UpdateRegistryFromResourceD
_TEXT	ENDS
PUBLIC	__real@3f800000
PUBLIC	??0CSmartTrackerClass@@QAE@XZ			; CSmartTrackerClass::CSmartTrackerClass
EXTRN	__imp__CreateEventA@16:PROC
EXTRN	?InitTrackerData@CSmartTrackerClass@@IAEXXZ:PROC ; CSmartTrackerClass::InitTrackerData
EXTRN	__imp__GetSystemInfo@4:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@3f800000
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\afxwin1.inl
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CSmartTrackerClass@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSmartTrackerClass@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CSmartTrackerClass@@QAE@XZ$1
__ehfuncinfo$??0CSmartTrackerClass@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CSmartTrackerClass@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File d:\sysal2\smarttracker8.6\smarttrackerclass.h
xdata$x	ENDS
;	COMDAT ??0CSmartTrackerClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -68						; size = 4
__ctlState$ = -64					; size = 16
_sysinfo$ = -48						; size = 36
__$EHRec$ = -12						; size = 12
??0CSmartTrackerClass@@QAE@XZ PROC			; CSmartTrackerClass::CSmartTrackerClass, COMDAT
; _this$ = ecx

; 154  : 	CSmartTrackerClass()

	push	-1
	push	__ehhandler$??0CSmartTrackerClass@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+84]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+84], esi
	xor	ebx, ebx
	mov	DWORD PTR [esi+8], ebx
	mov	DWORD PTR [esi+12], ebx
	mov	DWORD PTR [esi+16], ebx
	mov	DWORD PTR [esi+20], ebx
	mov	DWORD PTR [esi+24], ebx
	mov	DWORD PTR [esi+28], ebx
	mov	DWORD PTR [esi+32], ebx
	mov	BYTE PTR [esi+36], bl
	mov	DWORD PTR __$EHRec$[esp+92], ebx

; 155  : 	{
; 156  : 		AFX_MANAGE_STATE(AfxGetStaticModuleState())

	call	?AfxGetStaticModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetStaticModuleState
	push	eax
	lea	ecx, DWORD PTR __ctlState$[esp+88]
	call	??0AFX_MAINTAIN_STATE2@@QAE@PAVAFX_MODULE_STATE@@@Z ; AFX_MAINTAIN_STATE2::AFX_MAINTAIN_STATE2

; 157  : 
; 158  : 		SYSTEM_INFO sysinfo;
; 159  : 		GetSystemInfo(&sysinfo);

	lea	eax, DWORD PTR _sysinfo$[esp+84]
	push	eax
	mov	BYTE PTR __$EHRec$[esp+96], 1
	call	DWORD PTR __imp__GetSystemInfo@4

; 160  : 		MaxProcessors = sysinfo.dwNumberOfProcessors;

	mov	edi, DWORD PTR _sysinfo$[esp+104]

; 161  : 		ConfigMaxProcessors_backup = 0;
; 162  : 		ThreadInfo = new ActivationRecord[MaxProcessors];

	xor	ecx, ecx
	mov	eax, edi
	mov	edx, 40					; 00000028H
	mul	edx
	seto	cl
	mov	DWORD PTR [esi+1132], edi
	mov	DWORD PTR [esi+1136], ebx
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR [esi+1140], eax

; 163  : 		HEvs = new HANDLE[MaxProcessors];

	mov	eax, DWORD PTR [esi+1132]
	xor	ecx, ecx
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]

; 164  : 
; 165  : 		Name[0] = 0;
; 166  : 		HStatusChangeEvent = 0;
; 167  : 		CamSpec.Width = CamSpec.Height = 0;
; 168  : 		CamSpec.WinWidth = CamSpec.WinHeight = 0;
; 169  : 		CamSpec.OffX = CamSpec.OffY = 0;
; 170  : 		CamSpec.PixelToMicronX = CamSpec.PixelToMicronY = 1.f;

	fld1
	fst	DWORD PTR [esi+136]
	add	esp, 8

; 171  : 		InitTrackerData();

	mov	ecx, esi
	fstp	DWORD PTR [esi+132]
	mov	DWORD PTR [esi+1144], eax
	mov	BYTE PTR [esi+40], bl
	mov	DWORD PTR [esi+104], ebx
	mov	DWORD PTR [esi+112], ebx
	mov	DWORD PTR [esi+108], ebx
	mov	DWORD PTR [esi+128], ebx
	mov	DWORD PTR [esi+124], ebx
	mov	DWORD PTR [esi+120], ebx
	mov	DWORD PTR [esi+116], ebx
	call	?InitTrackerData@CSmartTrackerClass@@IAEXXZ ; CSmartTrackerClass::InitTrackerData

; 172  : 		int i;
; 173  : 		HStart = CreateEvent(NULL, TRUE, FALSE, NULL);

	mov	edi, DWORD PTR __imp__CreateEventA@16
	push	ebx
	push	ebx
	push	1
	push	ebx
	call	edi

; 174  : 		HReset = CreateEvent(NULL, TRUE, FALSE, NULL);

	push	ebx
	push	ebx
	push	1
	push	ebx
	mov	DWORD PTR [esi+1120], eax
	call	edi

; 175  : 		HTerminate = CreateEvent(NULL, TRUE, FALSE, NULL);

	push	ebx
	push	ebx
	push	1
	push	ebx
	mov	DWORD PTR [esi+1128], eax
	call	edi

; 176  : 		for (i = 0; i < MaxProcessors; i++)

	xor	ecx, ecx
	cmp	DWORD PTR [esi+1132], ebx
	mov	DWORD PTR [esi+1124], eax
	jle	SHORT $LN1@CSmartTrac@2

; 154  : 	CSmartTrackerClass()

	xor	eax, eax
	npad	11
$LL3@CSmartTrac@2:

; 177  : 		{
; 178  : 			ThreadInfo[i].HFinished = 0;

	mov	edx, DWORD PTR [esi+1140]
	mov	DWORD PTR [edx+eax+20], ebx

; 179  : 			ThreadInfo[i].pThis = this;

	mov	edx, DWORD PTR [esi+1140]
	mov	DWORD PTR [eax+edx], esi

; 180  : 			ThreadInfo[i].HThread = 0;

	mov	edx, DWORD PTR [esi+1140]
	mov	DWORD PTR [edx+eax+24], ebx
	add	ecx, 1
	add	eax, 40					; 00000028H
	cmp	ecx, DWORD PTR [esi+1132]
	jl	SHORT $LL3@CSmartTrac@2
$LN1@CSmartTrac@2:

; 181  : 			}
; 182  : 		OkToRun = false;
; 183  : 	}	

	mov	eax, DWORD PTR __ctlState$[esp+88]
	cmp	eax, ebx
	mov	BYTE PTR [esi+1116], bl
	mov	BYTE PTR __$EHRec$[esp+92], bl
	je	SHORT $LN19@CSmartTrac@2
	mov	ecx, DWORD PTR __ctlState$[esp+84]
	mov	DWORD PTR [eax+4], ecx
$LN19@CSmartTrac@2:
	cmp	DWORD PTR __ctlState$[esp+96], ebx
	je	SHORT $LN24@CSmartTrac@2
	mov	edx, DWORD PTR __ctlState$[esp+92]
	push	edx
	push	ebx
	call	?AfxDeactivateActCtx@@YGHKK@Z		; AfxDeactivateActCtx
$LN24@CSmartTrac@2:
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+84]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 68					; 00000044H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSmartTrackerClass@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::~CComObjectRootEx<ATL::CComMultiThreadModel>
__unwindfunclet$??0CSmartTrackerClass@@QAE@XZ$1:
	lea	ecx, DWORD PTR __ctlState$[ebp]
	jmp	??1AFX_MAINTAIN_STATE2@@QAE@XZ		; AFX_MAINTAIN_STATE2::~AFX_MAINTAIN_STATE2
__ehhandler$??0CSmartTrackerClass@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-68]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CSmartTrackerClass@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CSmartTrackerClass@@QAE@XZ ENDP			; CSmartTrackerClass::CSmartTrackerClass
; Function compile flags: /Ogtpy
;	COMDAT ?UpdateRegistry@CSmartTrackerClass@@SGJH@Z
_TEXT	SEGMENT
_bRegister$ = 8						; size = 4
?UpdateRegistry@CSmartTrackerClass@@SGJH@Z PROC		; CSmartTrackerClass::UpdateRegistry, COMDAT

; 236  : DECLARE_REGISTRY_RESOURCEID(IDR_SMARTTRACKER)

	mov	eax, DWORD PTR _bRegister$[esp-4]
	push	0
	push	eax
	push	102					; 00000066H
	push	OFFSET ?_Module@@3VCComModule@ATL@@A	; _Module
	call	?UpdateRegistryFromResourceDHelper@CAtlModule@ATL@@QAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CAtlModule::UpdateRegistryFromResourceDHelper
	ret	4
?UpdateRegistry@CSmartTrackerClass@@SGJH@Z ENDP		; CSmartTrackerClass::UpdateRegistry
_TEXT	ENDS
PUBLIC	??_G?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAEPAXI@Z ; ATL::CComObjectCached<ATL::CComClassFactory>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAEPAXI@Z PROC ; ATL::CComObjectCached<ATL::CComClassFactory>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+4], -1073741823		; c0000001H
	mov	DWORD PTR [esi], OFFSET ??_7CComClassFactory@ATL@@6B@
	cmp	BYTE PTR [eax+24], 0
	je	SHORT $LN19@scalar@3
	push	eax
	mov	BYTE PTR [eax+24], 0
	call	DWORD PTR __imp__DeleteCriticalSection@4
$LN19@scalar@3:
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN25@scalar@3
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN25@scalar@3:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAEPAXI@Z ENDP ; ATL::CComObjectCached<ATL::CComClassFactory>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcom.h
_TEXT	ENDS
;	COMDAT ?Release@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Release@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ PROC ; ATL::CComObjectCached<ATL::CComClassFactory>::Release, COMDAT

; 2664 : 	{

	push	ebx
	push	esi
	push	edi

; 2665 : 		ULONG l = InternalRelease();

	mov	edi, DWORD PTR _this$[esp+8]
	lea	esi, DWORD PTR [edi+4]
	push	esi
	call	DWORD PTR __imp__InterlockedDecrement@4
	mov	ebx, eax

; 2666 : 		if (l == 0)

	test	ebx, ebx
	jne	SHORT $LN3@Release

; 2667 : 			delete this;

	test	edi, edi
	je	SHORT $LN1@Release
	lea	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], -1073741823		; c0000001H
	mov	DWORD PTR [edi], OFFSET ??_7CComClassFactory@ATL@@6B@
	cmp	BYTE PTR [eax+24], bl
	je	SHORT $LN30@Release
	push	eax
	mov	BYTE PTR [eax+24], bl
	call	DWORD PTR __imp__DeleteCriticalSection@4
$LN30@Release:
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	edi
	pop	esi

; 2670 : 		return l;

	mov	eax, ebx
	pop	ebx

; 2671 : 	}

	ret	4
$LN3@Release:

; 2668 : 		else if (l == 1)

	cmp	ebx, 1
	jne	SHORT $LN1@Release

; 2669 : 			_pAtlModule->Unlock();

	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 2670 : 		return l;

	mov	eax, ebx
$LN1@Release:
	pop	edi
	pop	esi
	pop	ebx

; 2671 : 	}

	ret	4
?Release@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComObjectCached<ATL::CComClassFactory>::Release
_TEXT	ENDS
PUBLIC	??_7?$CComObject@VCSmartTrackerClass@@@ATL@@6BISySalObject2@@@ ; ATL::CComObject<CSmartTrackerClass>::`vftable'
PUBLIC	??_7?$CComObject@VCSmartTrackerClass@@@ATL@@6BITracker4@@@ ; ATL::CComObject<CSmartTrackerClass>::`vftable'
PUBLIC	??0?$CComObject@VCSmartTrackerClass@@@ATL@@QAE@PAX@Z ; ATL::CComObject<CSmartTrackerClass>::CComObject<CSmartTrackerClass>
PUBLIC	??_R4?$CComObject@VCSmartTrackerClass@@@ATL@@6BITracker4@@@ ; ATL::CComObject<CSmartTrackerClass>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CComObject@VCSmartTrackerClass@@@ATL@@@8 ; ATL::CComObject<CSmartTrackerClass> `RTTI Type Descriptor'
PUBLIC	??_R3?$CComObject@VCSmartTrackerClass@@@ATL@@8	; ATL::CComObject<CSmartTrackerClass>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CComObject@VCSmartTrackerClass@@@ATL@@8	; ATL::CComObject<CSmartTrackerClass>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CComObject@VCSmartTrackerClass@@@ATL@@8 ; ATL::CComObject<CSmartTrackerClass>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CSmartTrackerClass@@8		; CSmartTrackerClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCSmartTrackerClass@@@8			; CSmartTrackerClass `RTTI Type Descriptor'
PUBLIC	??_R3CSmartTrackerClass@@8			; CSmartTrackerClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSmartTrackerClass@@8			; CSmartTrackerClass::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R17?0A@EA@CComObjectRootBase@ATL@@8		; ATL::CComObjectRootBase::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R1CI@?0A@EA@?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8 ; ATL::CComCoClass<CSmartTrackerClass,&CLSID_SmartTracker8>::`RTTI Base Class Descriptor at (40,-1,0,64)'
PUBLIC	??_R0?AV?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@@8 ; ATL::CComCoClass<CSmartTrackerClass,&CLSID_SmartTracker8> `RTTI Type Descriptor'
PUBLIC	??_R3?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8 ; ATL::CComCoClass<CSmartTrackerClass,&CLSID_SmartTracker8>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8 ; ATL::CComCoClass<CSmartTrackerClass,&CLSID_SmartTracker8>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8 ; ATL::CComCoClass<CSmartTrackerClass,&CLSID_SmartTracker8>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ITracker4@@8			; ITracker4::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUITracker4@@@8				; ITracker4 `RTTI Type Descriptor'
PUBLIC	??_R3ITracker4@@8				; ITracker4::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ITracker4@@8				; ITracker4::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ITracker3@@8			; ITracker3::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUITracker3@@@8				; ITracker3 `RTTI Type Descriptor'
PUBLIC	??_R3ITracker3@@8				; ITracker3::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ITracker3@@8				; ITracker3::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ITracker2@@8			; ITracker2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUITracker2@@@8				; ITracker2 `RTTI Type Descriptor'
PUBLIC	??_R3ITracker2@@8				; ITracker2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ITracker2@@8				; ITracker2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ITracker@@8			; ITracker::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUITracker@@@8				; ITracker `RTTI Type Descriptor'
PUBLIC	??_R3ITracker@@8				; ITracker::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ITracker@@8				; ITracker::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@ISySalObject2@@8			; ISySalObject2::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUISySalObject2@@@8			; ISySalObject2 `RTTI Type Descriptor'
PUBLIC	??_R3ISySalObject2@@8				; ISySalObject2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISySalObject2@@8				; ISySalObject2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISySalObject2@@8			; ISySalObject2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ISySalObject@@8			; ISySalObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUISySalObject@@@8			; ISySalObject `RTTI Type Descriptor'
PUBLIC	??_R3ISySalObject@@8				; ISySalObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISySalObject@@8				; ISySalObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@ISySalObject@@8			; ISySalObject::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	?QueryInterface@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<CSmartTrackerClass>::QueryInterface
PUBLIC	?AddRef@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGKXZ ; ATL::CComObject<CSmartTrackerClass>::AddRef
PUBLIC	?Release@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGKXZ ; ATL::CComObject<CSmartTrackerClass>::Release
PUBLIC	??_R4?$CComObject@VCSmartTrackerClass@@@ATL@@6BISySalObject2@@@ ; ATL::CComObject<CSmartTrackerClass>::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@?$CComObject@VCSmartTrackerClass@@@ATL@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComObject<CSmartTrackerClass>::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@?$CComObject@VCSmartTrackerClass@@@ATL@@W3AGKXZ ; [thunk]:ATL::CComObject<CSmartTrackerClass>::AddRef`adjustor{4}'
PUBLIC	?Release@?$CComObject@VCSmartTrackerClass@@@ATL@@W3AGKXZ ; [thunk]:ATL::CComObject<CSmartTrackerClass>::Release`adjustor{4}'
EXTRN	?StartFilling@CSmartTrackerClass@@UAGJXZ:PROC	; CSmartTrackerClass::StartFilling
EXTRN	?SetCameraSpec@CSmartTrackerClass@@UAGJUCameraSpec@@@Z:PROC ; CSmartTrackerClass::SetCameraSpec
EXTRN	?GetCameraSpec@CSmartTrackerClass@@UAGJPAUCameraSpec@@@Z:PROC ; CSmartTrackerClass::GetCameraSpec
EXTRN	?PutClusters@CSmartTrackerClass@@UAGJPAUCluster@@HM@Z:PROC ; CSmartTrackerClass::PutClusters
EXTRN	?GetTracks@CSmartTrackerClass@@UAGJPAUTrack@@PAHHH@Z:PROC ; CSmartTrackerClass::GetTracks
EXTRN	?GetClusters@CSmartTrackerClass@@UAGJHPAUCluster@@PAHPAM@Z:PROC ; CSmartTrackerClass::GetClusters
EXTRN	?PresetSlope@CSmartTrackerClass@@UAGJMMMM@Z:PROC ; CSmartTrackerClass::PresetSlope
EXTRN	?EnableSlopePresetting@CSmartTrackerClass@@UAGJE@Z:PROC ; CSmartTrackerClass::EnableSlopePresetting
EXTRN	?GetSlopePresetStatus@CSmartTrackerClass@@UAGJPAE@Z:PROC ; CSmartTrackerClass::GetSlopePresetStatus
EXTRN	?GetFlatTracks@CSmartTrackerClass@@UAGJPAUFlatTrack@@PAHHHH@Z:PROC ; CSmartTrackerClass::GetFlatTracks
EXTRN	?GetFlatStrips@CSmartTrackerClass@@UAGJHPAUFlatStrip@@PAHPAM@Z:PROC ; CSmartTrackerClass::GetFlatStrips
EXTRN	?GetTracks2@CSmartTrackerClass@@UAGJPAUTrack2@@PAHHH@Z:PROC ; CSmartTrackerClass::GetTracks2
EXTRN	?GetMaxGrainsPerTrack@CSmartTrackerClass@@UAGJPAH@Z:PROC ; CSmartTrackerClass::GetMaxGrainsPerTrack
EXTRN	?StartFilling2@CSmartTrackerClass@@UAGJH@Z:PROC	; CSmartTrackerClass::StartFilling2
EXTRN	??_E?$CComObject@VCSmartTrackerClass@@@ATL@@UAEPAXI@Z:PROC ; ATL::CComObject<CSmartTrackerClass>::`vector deleting destructor'
EXTRN	?SetName@CSmartTrackerClass@@UAGJQAD@Z:PROC	; CSmartTrackerClass::SetName
EXTRN	?GetName@CSmartTrackerClass@@UAGJQAD@Z:PROC	; CSmartTrackerClass::GetName
EXTRN	?SetConfig@CSmartTrackerClass@@UAGJPAUSySalConfig@@@Z:PROC ; CSmartTrackerClass::SetConfig
EXTRN	?GetConfig@CSmartTrackerClass@@UAGJPAUSySalConfig@@@Z:PROC ; CSmartTrackerClass::GetConfig
EXTRN	?EditConfig@CSmartTrackerClass@@UAGJPAUSySalConfig@@J@Z:PROC ; CSmartTrackerClass::EditConfig
EXTRN	?EnableMonitor@CSmartTrackerClass@@UAGJE@Z:PROC	; CSmartTrackerClass::EnableMonitor
EXTRN	?GetNumberOfConnections@CSmartTrackerClass@@UAGJPAH@Z:PROC ; CSmartTrackerClass::GetNumberOfConnections
EXTRN	?SetConnection@CSmartTrackerClass@@UAGJHUSySalConnection@@@Z:PROC ; CSmartTrackerClass::SetConnection
EXTRN	?GetConnection@CSmartTrackerClass@@UAGJHPAUSySalConnection@@@Z:PROC ; CSmartTrackerClass::GetConnection
EXTRN	?GetIcon@CSmartTrackerClass@@UAGJHPAJ@Z:PROC	; CSmartTrackerClass::GetIcon
EXTRN	?GetClassNameA@CSmartTrackerClass@@UAGJQAD@Z:PROC ; CSmartTrackerClass::GetClassNameA
EXTRN	?SyncExec@CSmartTrackerClass@@UAGJXZ:PROC	; CSmartTrackerClass::SyncExec
EXTRN	?AsyncExec@CSmartTrackerClass@@UAGJJ@Z:PROC	; CSmartTrackerClass::AsyncExec
EXTRN	?AsyncCheckStatus@CSmartTrackerClass@@UAGJPAJ@Z:PROC ; CSmartTrackerClass::AsyncCheckStatus
EXTRN	?AsyncWait@CSmartTrackerClass@@UAGJXZ:PROC	; CSmartTrackerClass::AsyncWait
EXTRN	?AsyncPause@CSmartTrackerClass@@UAGJXZ:PROC	; CSmartTrackerClass::AsyncPause
EXTRN	?AsyncStop@CSmartTrackerClass@@UAGJXZ:PROC	; CSmartTrackerClass::AsyncStop
EXTRN	?AsyncResume@CSmartTrackerClass@@UAGJXZ:PROC	; CSmartTrackerClass::AsyncResume
EXTRN	?IsReady@CSmartTrackerClass@@UAGJPAJ0@Z:PROC	; CSmartTrackerClass::IsReady
EXTRN	?SetConfigManagerInterface@CSmartTrackerClass@@UAGJPAUConfigManagerInterface@@@Z:PROC ; CSmartTrackerClass::SetConfigManagerInterface
EXTRN	?GetCLSID@CSmartTrackerClass@@UAGJPAU_GUID@@@Z:PROC ; CSmartTrackerClass::GetCLSID
;	COMDAT ??_R4?$CComObject@VCSmartTrackerClass@@@ATL@@6BISySalObject2@@@
rdata$r	SEGMENT
??_R4?$CComObject@VCSmartTrackerClass@@@ATL@@6BISySalObject2@@@ DD 00H ; ATL::CComObject<CSmartTrackerClass>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$CComObject@VCSmartTrackerClass@@@ATL@@@8
	DD	FLAT:??_R3?$CComObject@VCSmartTrackerClass@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@ISySalObject@@8
rdata$r	SEGMENT
??_R13?0A@EA@ISySalObject@@8 DD FLAT:??_R0?AUISySalObject@@@8 ; ISySalObject::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISySalObject@@8
rdata$r	ENDS
;	COMDAT ??_R2ISySalObject@@8
rdata$r	SEGMENT
??_R2ISySalObject@@8 DD FLAT:??_R1A@?0A@EA@ISySalObject@@8 ; ISySalObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISySalObject@@8
rdata$r	SEGMENT
??_R3ISySalObject@@8 DD 00H				; ISySalObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISySalObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISySalObject@@@8
_DATA	SEGMENT
??_R0?AUISySalObject@@@8 DD FLAT:??_7type_info@@6B@	; ISySalObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISySalObject@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ISySalObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISySalObject@@8 DD FLAT:??_R0?AUISySalObject@@@8 ; ISySalObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISySalObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ISySalObject2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISySalObject2@@8 DD FLAT:??_R0?AUISySalObject2@@@8 ; ISySalObject2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISySalObject2@@8
rdata$r	ENDS
;	COMDAT ??_R2ISySalObject2@@8
rdata$r	SEGMENT
??_R2ISySalObject2@@8 DD FLAT:??_R1A@?0A@EA@ISySalObject2@@8 ; ISySalObject2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISySalObject@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISySalObject2@@8
rdata$r	SEGMENT
??_R3ISySalObject2@@8 DD 00H				; ISySalObject2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ISySalObject2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISySalObject2@@@8
_DATA	SEGMENT
??_R0?AUISySalObject2@@@8 DD FLAT:??_7type_info@@6B@	; ISySalObject2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISySalObject2@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@ISySalObject2@@8
rdata$r	SEGMENT
??_R13?0A@EA@ISySalObject2@@8 DD FLAT:??_R0?AUISySalObject2@@@8 ; ISySalObject2::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	02H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISySalObject2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ITracker@@8
rdata$r	SEGMENT
??_R2ITracker@@8 DD FLAT:??_R1A@?0A@EA@ITracker@@8	; ITracker::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ITracker@@8
rdata$r	SEGMENT
??_R3ITracker@@8 DD 00H					; ITracker::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ITracker@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUITracker@@@8
_DATA	SEGMENT
??_R0?AUITracker@@@8 DD FLAT:??_7type_info@@6B@		; ITracker `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUITracker@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ITracker@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ITracker@@8 DD FLAT:??_R0?AUITracker@@@8	; ITracker::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ITracker@@8
rdata$r	ENDS
;	COMDAT ??_R2ITracker2@@8
rdata$r	SEGMENT
??_R2ITracker2@@8 DD FLAT:??_R1A@?0A@EA@ITracker2@@8	; ITracker2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ITracker@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ITracker2@@8
rdata$r	SEGMENT
??_R3ITracker2@@8 DD 00H				; ITracker2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ITracker2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUITracker2@@@8
_DATA	SEGMENT
??_R0?AUITracker2@@@8 DD FLAT:??_7type_info@@6B@	; ITracker2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUITracker2@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ITracker2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ITracker2@@8 DD FLAT:??_R0?AUITracker2@@@8 ; ITracker2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ITracker2@@8
rdata$r	ENDS
;	COMDAT ??_R2ITracker3@@8
rdata$r	SEGMENT
??_R2ITracker3@@8 DD FLAT:??_R1A@?0A@EA@ITracker3@@8	; ITracker3::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ITracker2@@8
	DD	FLAT:??_R1A@?0A@EA@ITracker@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ITracker3@@8
rdata$r	SEGMENT
??_R3ITracker3@@8 DD 00H				; ITracker3::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2ITracker3@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUITracker3@@@8
_DATA	SEGMENT
??_R0?AUITracker3@@@8 DD FLAT:??_7type_info@@6B@	; ITracker3 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUITracker3@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ITracker3@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ITracker3@@8 DD FLAT:??_R0?AUITracker3@@@8 ; ITracker3::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ITracker3@@8
rdata$r	ENDS
;	COMDAT ??_R2ITracker4@@8
rdata$r	SEGMENT
??_R2ITracker4@@8 DD FLAT:??_R1A@?0A@EA@ITracker4@@8	; ITracker4::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ITracker3@@8
	DD	FLAT:??_R1A@?0A@EA@ITracker2@@8
	DD	FLAT:??_R1A@?0A@EA@ITracker@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ITracker4@@8
rdata$r	SEGMENT
??_R3ITracker4@@8 DD 00H				; ITracker4::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2ITracker4@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUITracker4@@@8
_DATA	SEGMENT
??_R0?AUITracker4@@@8 DD FLAT:??_7type_info@@6B@	; ITracker4 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUITracker4@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ITracker4@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ITracker4@@8 DD FLAT:??_R0?AUITracker4@@@8 ; ITracker4::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ITracker4@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8 DD FLAT:??_R0?AV?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@@8 ; ATL::CComCoClass<CSmartTrackerClass,&CLSID_SmartTracker8>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8
rdata$r	SEGMENT
??_R2?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8 DD FLAT:??_R1A@?0A@EA@?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8 ; ATL::CComCoClass<CSmartTrackerClass,&CLSID_SmartTracker8>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8
rdata$r	SEGMENT
??_R3?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8 DD 00H ; ATL::CComCoClass<CSmartTrackerClass,&CLSID_SmartTracker8>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@@8
_DATA	SEGMENT
??_R0?AV?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CComCoClass<CSmartTrackerClass,&CLSID_SmartTracker8> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTra'
	DB	'cker8@@3U_GUID@@B@ATL@@', 00H
_DATA	ENDS
;	COMDAT ??_R1CI@?0A@EA@?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8
rdata$r	SEGMENT
??_R1CI@?0A@EA@?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8 DD FLAT:??_R0?AV?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@@8 ; ATL::CComCoClass<CSmartTrackerClass,&CLSID_SmartTracker8>::`RTTI Base Class Descriptor at (40,-1,0,64)'
	DD	00H
	DD	028H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@CComObjectRootBase@ATL@@8
rdata$r	SEGMENT
??_R17?0A@EA@CComObjectRootBase@ATL@@8 DD FLAT:??_R0?AVCComObjectRootBase@ATL@@@8 ; ATL::CComObjectRootBase::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CComObjectRootBase@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8 DD FLAT:??_R0?AV?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@@8 ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2CSmartTrackerClass@@8
rdata$r	SEGMENT
??_R2CSmartTrackerClass@@8 DD FLAT:??_R1A@?0A@EA@CSmartTrackerClass@@8 ; CSmartTrackerClass::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
	DD	FLAT:??_R17?0A@EA@CComObjectRootBase@ATL@@8
	DD	FLAT:??_R1CI@?0A@EA@?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8
	DD	FLAT:??_R1A@?0A@EA@ITracker4@@8
	DD	FLAT:??_R1A@?0A@EA@ITracker3@@8
	DD	FLAT:??_R1A@?0A@EA@ITracker2@@8
	DD	FLAT:??_R1A@?0A@EA@ITracker@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ISySalObject2@@8
	DD	FLAT:??_R13?0A@EA@ISySalObject@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CSmartTrackerClass@@8
rdata$r	SEGMENT
??_R3CSmartTrackerClass@@8 DD 00H			; CSmartTrackerClass::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0cH
	DD	FLAT:??_R2CSmartTrackerClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSmartTrackerClass@@@8
_DATA	SEGMENT
??_R0?AVCSmartTrackerClass@@@8 DD FLAT:??_7type_info@@6B@ ; CSmartTrackerClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSmartTrackerClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CSmartTrackerClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSmartTrackerClass@@8 DD FLAT:??_R0?AVCSmartTrackerClass@@@8 ; CSmartTrackerClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSmartTrackerClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CComObject@VCSmartTrackerClass@@@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CComObject@VCSmartTrackerClass@@@ATL@@8 DD FLAT:??_R0?AV?$CComObject@VCSmartTrackerClass@@@ATL@@@8 ; ATL::CComObject<CSmartTrackerClass>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0cH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CComObject@VCSmartTrackerClass@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CComObject@VCSmartTrackerClass@@@ATL@@8
rdata$r	SEGMENT
??_R2?$CComObject@VCSmartTrackerClass@@@ATL@@8 DD FLAT:??_R1A@?0A@EA@?$CComObject@VCSmartTrackerClass@@@ATL@@8 ; ATL::CComObject<CSmartTrackerClass>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CSmartTrackerClass@@8
	DD	FLAT:??_R17?0A@EA@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@8
	DD	FLAT:??_R17?0A@EA@CComObjectRootBase@ATL@@8
	DD	FLAT:??_R1CI@?0A@EA@?$CComCoClass@VCSmartTrackerClass@@$1?CLSID_SmartTracker8@@3U_GUID@@B@ATL@@8
	DD	FLAT:??_R1A@?0A@EA@ITracker4@@8
	DD	FLAT:??_R1A@?0A@EA@ITracker3@@8
	DD	FLAT:??_R1A@?0A@EA@ITracker2@@8
	DD	FLAT:??_R1A@?0A@EA@ITracker@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ISySalObject2@@8
	DD	FLAT:??_R13?0A@EA@ISySalObject@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CComObject@VCSmartTrackerClass@@@ATL@@8
rdata$r	SEGMENT
??_R3?$CComObject@VCSmartTrackerClass@@@ATL@@8 DD 00H	; ATL::CComObject<CSmartTrackerClass>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0dH
	DD	FLAT:??_R2?$CComObject@VCSmartTrackerClass@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CComObject@VCSmartTrackerClass@@@ATL@@@8
_DATA	SEGMENT
??_R0?AV?$CComObject@VCSmartTrackerClass@@@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CComObject<CSmartTrackerClass> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CComObject@VCSmartTrackerClass@@@ATL@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$CComObject@VCSmartTrackerClass@@@ATL@@6BITracker4@@@
rdata$r	SEGMENT
??_R4?$CComObject@VCSmartTrackerClass@@@ATL@@6BITracker4@@@ DD 00H ; ATL::CComObject<CSmartTrackerClass>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CComObject@VCSmartTrackerClass@@@ATL@@@8
	DD	FLAT:??_R3?$CComObject@VCSmartTrackerClass@@@ATL@@8
rdata$r	ENDS
;	COMDAT ??_7?$CComObject@VCSmartTrackerClass@@@ATL@@6BISySalObject2@@@
CONST	SEGMENT
??_7?$CComObject@VCSmartTrackerClass@@@ATL@@6BISySalObject2@@@ DD FLAT:??_R4?$CComObject@VCSmartTrackerClass@@@ATL@@6BISySalObject2@@@ ; ATL::CComObject<CSmartTrackerClass>::`vftable'
	DD	FLAT:?QueryInterface@?$CComObject@VCSmartTrackerClass@@@ATL@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@?$CComObject@VCSmartTrackerClass@@@ATL@@W3AGKXZ
	DD	FLAT:?Release@?$CComObject@VCSmartTrackerClass@@@ATL@@W3AGKXZ
	DD	FLAT:?SetName@CSmartTrackerClass@@UAGJQAD@Z
	DD	FLAT:?GetName@CSmartTrackerClass@@UAGJQAD@Z
	DD	FLAT:?SetConfig@CSmartTrackerClass@@UAGJPAUSySalConfig@@@Z
	DD	FLAT:?GetConfig@CSmartTrackerClass@@UAGJPAUSySalConfig@@@Z
	DD	FLAT:?EditConfig@CSmartTrackerClass@@UAGJPAUSySalConfig@@J@Z
	DD	FLAT:?EnableMonitor@CSmartTrackerClass@@UAGJE@Z
	DD	FLAT:?GetNumberOfConnections@CSmartTrackerClass@@UAGJPAH@Z
	DD	FLAT:?SetConnection@CSmartTrackerClass@@UAGJHUSySalConnection@@@Z
	DD	FLAT:?GetConnection@CSmartTrackerClass@@UAGJHPAUSySalConnection@@@Z
	DD	FLAT:?GetIcon@CSmartTrackerClass@@UAGJHPAJ@Z
	DD	FLAT:?GetClassNameA@CSmartTrackerClass@@UAGJQAD@Z
	DD	FLAT:?SyncExec@CSmartTrackerClass@@UAGJXZ
	DD	FLAT:?AsyncExec@CSmartTrackerClass@@UAGJJ@Z
	DD	FLAT:?AsyncCheckStatus@CSmartTrackerClass@@UAGJPAJ@Z
	DD	FLAT:?AsyncWait@CSmartTrackerClass@@UAGJXZ
	DD	FLAT:?AsyncPause@CSmartTrackerClass@@UAGJXZ
	DD	FLAT:?AsyncStop@CSmartTrackerClass@@UAGJXZ
	DD	FLAT:?AsyncResume@CSmartTrackerClass@@UAGJXZ
	DD	FLAT:?IsReady@CSmartTrackerClass@@UAGJPAJ0@Z
	DD	FLAT:?SetConfigManagerInterface@CSmartTrackerClass@@UAGJPAUConfigManagerInterface@@@Z
	DD	FLAT:?GetCLSID@CSmartTrackerClass@@UAGJPAU_GUID@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCSmartTrackerClass@@@ATL@@6BITracker4@@@
CONST	SEGMENT
??_7?$CComObject@VCSmartTrackerClass@@@ATL@@6BITracker4@@@ DD FLAT:??_R4?$CComObject@VCSmartTrackerClass@@@ATL@@6BITracker4@@@ ; ATL::CComObject<CSmartTrackerClass>::`vftable'
	DD	FLAT:?QueryInterface@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGKXZ
	DD	FLAT:?Release@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGKXZ
	DD	FLAT:?StartFilling@CSmartTrackerClass@@UAGJXZ
	DD	FLAT:?SetCameraSpec@CSmartTrackerClass@@UAGJUCameraSpec@@@Z
	DD	FLAT:?GetCameraSpec@CSmartTrackerClass@@UAGJPAUCameraSpec@@@Z
	DD	FLAT:?PutClusters@CSmartTrackerClass@@UAGJPAUCluster@@HM@Z
	DD	FLAT:?GetTracks@CSmartTrackerClass@@UAGJPAUTrack@@PAHHH@Z
	DD	FLAT:?GetClusters@CSmartTrackerClass@@UAGJHPAUCluster@@PAHPAM@Z
	DD	FLAT:?PresetSlope@CSmartTrackerClass@@UAGJMMMM@Z
	DD	FLAT:?EnableSlopePresetting@CSmartTrackerClass@@UAGJE@Z
	DD	FLAT:?GetSlopePresetStatus@CSmartTrackerClass@@UAGJPAE@Z
	DD	FLAT:?GetFlatTracks@CSmartTrackerClass@@UAGJPAUFlatTrack@@PAHHHH@Z
	DD	FLAT:?GetFlatStrips@CSmartTrackerClass@@UAGJHPAUFlatStrip@@PAHPAM@Z
	DD	FLAT:?GetTracks2@CSmartTrackerClass@@UAGJPAUTrack2@@PAHHH@Z
	DD	FLAT:?GetMaxGrainsPerTrack@CSmartTrackerClass@@UAGJPAH@Z
	DD	FLAT:?StartFilling2@CSmartTrackerClass@@UAGJH@Z
	DD	FLAT:??_E?$CComObject@VCSmartTrackerClass@@@ATL@@UAEPAXI@Z
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0?$CComObject@VCSmartTrackerClass@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$CComObject@VCSmartTrackerClass@@@ATL@@QAE@PAX@Z PROC ; ATL::CComObject<CSmartTrackerClass>::CComObject<CSmartTrackerClass>, COMDAT
; _this$ = ecx

; 2565 : 	CComObject(void* = NULL) throw()

	push	esi
	mov	esi, ecx
	call	??0CSmartTrackerClass@@QAE@XZ		; CSmartTrackerClass::CSmartTrackerClass
	mov	DWORD PTR [esi], OFFSET ??_7?$CComObject@VCSmartTrackerClass@@@ATL@@6BITracker4@@@
	mov	DWORD PTR [esi+4], OFFSET ??_7?$CComObject@VCSmartTrackerClass@@@ATL@@6BISySalObject2@@@

; 2566 : 	{
; 2567 : 		_pAtlModule->Lock();

	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	call	edx

; 2568 : 	}

	mov	eax, esi
	pop	esi
	ret	4
??0?$CComObject@VCSmartTrackerClass@@@ATL@@QAE@PAX@Z ENDP ; ATL::CComObject<CSmartTrackerClass>::CComObject<CSmartTrackerClass>
_TEXT	ENDS
PUBLIC	?_entries@?1??_GetEntries@CSmartTrackerClass@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B ; `CSmartTrackerClass::_GetEntries'::`2'::_entries
PUBLIC	?_GetEntries@CSmartTrackerClass@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ ; CSmartTrackerClass::_GetEntries
PUBLIC	__GUID_e416c46d_7f68_11d3_a47c_fa1e4afa2721
PUBLIC	__GUID_67a71430_f2e4_42ae_8910_28279a7616d6
PUBLIC	__GUID_7a9e779c_aa32_4565_8e69_5f1bc4e362b7
PUBLIC	__GUID_04e5187b_933e_4d9e_9a7f_eb20840da9d0
PUBLIC	__GUID_c022eead_748a_11d3_a47b_e89c0bce9720
PUBLIC	__GUID_68659af8_12e6_4ef9_9877_a7dd63bf1950
;	COMDAT __GUID_68659af8_12e6_4ef9_9877_a7dd63bf1950
; File d:\sysal2\smarttracker8.6\smarttrackerclass.h
CONST	SEGMENT
__GUID_68659af8_12e6_4ef9_9877_a7dd63bf1950 DD 068659af8H
	DW	012e6H
	DW	04ef9H
	DB	098H
	DB	077H
	DB	0a7H
	DB	0ddH
	DB	063H
	DB	0bfH
	DB	019H
	DB	050H
CONST	ENDS
;	COMDAT __GUID_c022eead_748a_11d3_a47b_e89c0bce9720
CONST	SEGMENT
__GUID_c022eead_748a_11d3_a47b_e89c0bce9720 DD 0c022eeadH
	DW	0748aH
	DW	011d3H
	DB	0a4H
	DB	07bH
	DB	0e8H
	DB	09cH
	DB	0bH
	DB	0ceH
	DB	097H
	DB	020H
CONST	ENDS
;	COMDAT __GUID_04e5187b_933e_4d9e_9a7f_eb20840da9d0
CONST	SEGMENT
__GUID_04e5187b_933e_4d9e_9a7f_eb20840da9d0 DD 04e5187bH
	DW	0933eH
	DW	04d9eH
	DB	09aH
	DB	07fH
	DB	0ebH
	DB	020H
	DB	084H
	DB	0dH
	DB	0a9H
	DB	0d0H
CONST	ENDS
;	COMDAT __GUID_7a9e779c_aa32_4565_8e69_5f1bc4e362b7
CONST	SEGMENT
__GUID_7a9e779c_aa32_4565_8e69_5f1bc4e362b7 DD 07a9e779cH
	DW	0aa32H
	DW	04565H
	DB	08eH
	DB	069H
	DB	05fH
	DB	01bH
	DB	0c4H
	DB	0e3H
	DB	062H
	DB	0b7H
CONST	ENDS
;	COMDAT __GUID_67a71430_f2e4_42ae_8910_28279a7616d6
CONST	SEGMENT
__GUID_67a71430_f2e4_42ae_8910_28279a7616d6 DD 067a71430H
	DW	0f2e4H
	DW	042aeH
	DB	089H
	DB	010H
	DB	028H
	DB	027H
	DB	09aH
	DB	076H
	DB	016H
	DB	0d6H
CONST	ENDS
;	COMDAT __GUID_e416c46d_7f68_11d3_a47c_fa1e4afa2721
CONST	SEGMENT
__GUID_e416c46d_7f68_11d3_a47c_fa1e4afa2721 DD 0e416c46dH
	DW	07f68H
	DW	011d3H
	DB	0a4H
	DB	07cH
	DB	0faH
	DB	01eH
	DB	04aH
	DB	0faH
	DB	027H
	DB	021H
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@CSmartTrackerClass@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B
CONST	SEGMENT
?_entries@?1??_GetEntries@CSmartTrackerClass@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B DD FLAT:__GUID_e416c46d_7f68_11d3_a47c_fa1e4afa2721 ; `CSmartTrackerClass::_GetEntries'::`2'::_entries
	DD	00H
	DD	01H
	DD	FLAT:__GUID_67a71430_f2e4_42ae_8910_28279a7616d6
	DD	00H
	DD	01H
	DD	FLAT:__GUID_7a9e779c_aa32_4565_8e69_5f1bc4e362b7
	DD	00H
	DD	01H
	DD	FLAT:__GUID_04e5187b_933e_4d9e_9a7f_eb20840da9d0
	DD	00H
	DD	01H
	DD	FLAT:__GUID_c022eead_748a_11d3_a47b_e89c0bce9720
	DD	04H
	DD	01H
	DD	FLAT:__GUID_68659af8_12e6_4ef9_9877_a7dd63bf1950
	DD	04H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?_GetEntries@CSmartTrackerClass@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ
_TEXT	SEGMENT
?_GetEntries@CSmartTrackerClass@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ PROC ; CSmartTrackerClass::_GetEntries, COMDAT

; 242  : 	COM_INTERFACE_ENTRY(ITracker)
; 243  : 	COM_INTERFACE_ENTRY(ITracker2)
; 244  : 	COM_INTERFACE_ENTRY(ITracker3)
; 245  : 	COM_INTERFACE_ENTRY(ITracker4)
; 246  : 	COM_INTERFACE_ENTRY(ISySalObject)
; 247  : 	COM_INTERFACE_ENTRY(ISySalObject2)
; 248  : END_COM_MAP()

	mov	eax, OFFSET ?_entries@?1??_GetEntries@CSmartTrackerClass@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B ; `CSmartTrackerClass::_GetEntries'::`2'::_entries
	ret	0
?_GetEntries@CSmartTrackerClass@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ ENDP ; CSmartTrackerClass::_GetEntries
_TEXT	ENDS
PUBLIC	?_InternalQueryInterface@CSmartTrackerClass@@QAEJABU_GUID@@PAPAX@Z ; CSmartTrackerClass::_InternalQueryInterface
; Function compile flags: /Ogtpy
;	COMDAT ?_InternalQueryInterface@CSmartTrackerClass@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_iid$ = 8						; size = 4
_ppvObject$ = 12					; size = 4
?_InternalQueryInterface@CSmartTrackerClass@@QAEJABU_GUID@@PAPAX@Z PROC ; CSmartTrackerClass::_InternalQueryInterface, COMDAT
; _this$ = ecx

; 241  : BEGIN_COM_MAP(CSmartTrackerClass)

	mov	eax, DWORD PTR _ppvObject$[esp-4]
	mov	edx, DWORD PTR _iid$[esp-4]
	push	eax
	push	edx
	push	OFFSET ?_entries@?1??_GetEntries@CSmartTrackerClass@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B ; `CSmartTrackerClass::_GetEntries'::`2'::_entries
	push	ecx
	call	DWORD PTR __imp__AtlInternalQueryInterface@16
	ret	8
?_InternalQueryInterface@CSmartTrackerClass@@QAEJABU_GUID@@PAPAX@Z ENDP ; CSmartTrackerClass::_InternalQueryInterface
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcom.h
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGKXZ PROC ; ATL::CComObject<CSmartTrackerClass>::AddRef, COMDAT

; 2582 : 	STDMETHOD_(ULONG, AddRef)() {return InternalAddRef();}

	mov	eax, DWORD PTR _this$[esp-4]
	add	eax, 8
	mov	DWORD PTR _this$[esp-4], eax
	jmp	DWORD PTR __imp__InterlockedIncrement@4
?AddRef@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGKXZ ENDP ; ATL::CComObject<CSmartTrackerClass>::AddRef
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Release@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Release@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGKXZ PROC ; ATL::CComObject<CSmartTrackerClass>::Release, COMDAT

; 2584 : 	{

	push	esi

; 2585 : 		ULONG l = InternalRelease();

	mov	esi, DWORD PTR _this$[esp]
	push	edi
	lea	eax, DWORD PTR [esi+8]
	push	eax
	call	DWORD PTR __imp__InterlockedDecrement@4
	mov	edi, eax

; 2586 : 		if (l == 0)

	test	edi, edi
	jne	SHORT $LN4@Release@2

; 2587 : 			delete this;

	test	esi, esi
	je	SHORT $LN4@Release@2
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+68]
	push	1
	mov	ecx, esi
	call	eax

; 2588 : 		return l;

	mov	eax, edi
$LN4@Release@2:
	pop	edi
	pop	esi

; 2589 : 	}

	ret	4
?Release@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGKXZ ENDP ; ATL::CComObject<CSmartTrackerClass>::Release
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC ; ATL::CComObject<CSmartTrackerClass>::QueryInterface, COMDAT

; 2592 : 	{return _InternalQueryInterface(iid, ppvObject);}

	mov	eax, DWORD PTR _ppvObject$[esp-4]
	mov	ecx, DWORD PTR _iid$[esp-4]
	mov	edx, DWORD PTR _this$[esp-4]
	push	eax
	push	ecx
	push	OFFSET ?_entries@?1??_GetEntries@CSmartTrackerClass@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B ; `CSmartTrackerClass::_GetEntries'::`2'::_entries
	push	edx
	call	DWORD PTR __imp__AtlInternalQueryInterface@16
	ret	12					; 0000000cH
?QueryInterface@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CComObject<CSmartTrackerClass>::QueryInterface
; Function compile flags: /Odtpy
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComObject@VCSmartTrackerClass@@@ATL@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComObject@VCSmartTrackerClass@@@ATL@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComObject<CSmartTrackerClass>::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<CSmartTrackerClass>::QueryInterface
?QueryInterface@?$CComObject@VCSmartTrackerClass@@@ATL@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComObject<CSmartTrackerClass>::QueryInterface`adjustor{4}'
; Function compile flags: /Odtpy
_TEXT	ENDS
;	COMDAT ?Release@?$CComObject@VCSmartTrackerClass@@@ATL@@W3AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCSmartTrackerClass@@@ATL@@W3AGKXZ PROC ; [thunk]:ATL::CComObject<CSmartTrackerClass>::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGKXZ ; ATL::CComObject<CSmartTrackerClass>::Release
?Release@?$CComObject@VCSmartTrackerClass@@@ATL@@W3AGKXZ ENDP ; [thunk]:ATL::CComObject<CSmartTrackerClass>::Release`adjustor{4}'
; Function compile flags: /Odtpy
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComObject@VCSmartTrackerClass@@@ATL@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCSmartTrackerClass@@@ATL@@W3AGKXZ PROC ; [thunk]:ATL::CComObject<CSmartTrackerClass>::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@?$CComObject@VCSmartTrackerClass@@@ATL@@UAGKXZ ; ATL::CComObject<CSmartTrackerClass>::AddRef
?AddRef@?$CComObject@VCSmartTrackerClass@@@ATL@@W3AGKXZ ENDP ; [thunk]:ATL::CComObject<CSmartTrackerClass>::AddRef`adjustor{4}'
_TEXT	ENDS
PUBLIC	??1?$CComObject@VCSmartTrackerClass@@@ATL@@UAE@XZ ; ATL::CComObject<CSmartTrackerClass>::~CComObject<CSmartTrackerClass>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$CComObject@VCSmartTrackerClass@@@ATL@@UAE@XZ
_TEXT	SEGMENT
??1?$CComObject@VCSmartTrackerClass@@@ATL@@UAE@XZ PROC	; ATL::CComObject<CSmartTrackerClass>::~CComObject<CSmartTrackerClass>, COMDAT
; _this$ = ecx

; 2572 : 	{

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7?$CComObject@VCSmartTrackerClass@@@ATL@@6BITracker4@@@
	mov	DWORD PTR [esi+4], OFFSET ??_7?$CComObject@VCSmartTrackerClass@@@ATL@@6BISySalObject2@@@

; 2573 : 		m_dwRef = -(LONG_MAX/2);

	mov	DWORD PTR [esi+8], -1073741823		; c0000001H

; 2574 : 		FinalRelease();
; 2575 : #ifdef _ATL_DEBUG_INTERFACES
; 2576 : 		_AtlDebugInterfacesModule.DeleteNonAddRefThunk(_GetRawUnknown());
; 2577 : #endif
; 2578 : 		_pAtlModule->Unlock();

	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 2579 : 	}

	mov	ecx, esi
	pop	esi
	jmp	??1CSmartTrackerClass@@UAE@XZ		; CSmartTrackerClass::~CSmartTrackerClass
??1?$CComObject@VCSmartTrackerClass@@@ATL@@UAE@XZ ENDP	; ATL::CComObject<CSmartTrackerClass>::~CComObject<CSmartTrackerClass>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$CComObject@VCSmartTrackerClass@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CComObject@VCSmartTrackerClass@@@ATL@@UAEPAXI@Z PROC ; ATL::CComObject<CSmartTrackerClass>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7?$CComObject@VCSmartTrackerClass@@@ATL@@6BITracker4@@@
	mov	DWORD PTR [esi+4], OFFSET ??_7?$CComObject@VCSmartTrackerClass@@@ATL@@6BISySalObject2@@@
	mov	DWORD PTR [esi+8], -1073741823		; c0000001H
	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	mov	ecx, esi
	call	??1CSmartTrackerClass@@UAE@XZ		; CSmartTrackerClass::~CSmartTrackerClass
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN8@scalar@4
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@4:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$CComObject@VCSmartTrackerClass@@@ATL@@UAEPAXI@Z ENDP ; ATL::CComObject<CSmartTrackerClass>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_R0PAVCException@@@8				; CException * `RTTI Type Descriptor'
EXTRN	?Delete@CException@@QAEXXZ:PROC			; CException::Delete
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT ??_R0PAVCException@@@8
_DATA	SEGMENT
??_R0PAVCException@@@8 DD FLAT:??_7type_info@@6B@	; CException * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAVCException@@', 00H
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z$3 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0ffffffe8H
	DD	FLAT:__catch$?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z$0
__unwindtable$?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z$3
__ehfuncinfo$?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
	DD	01H
	DD	FLAT:__tryblocktable$?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_e$124637 = -24						; size = 4
_hRes$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_pv$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z PROC ; ATL::CComCreator<ATL::CComObjectCached<ATL::CComClassFactory> >::CreateInstance, COMDAT

; 1788 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 1789 : 		ATLASSERT(ppv != NULL);
; 1790 : 		if (ppv == NULL)

	mov	eax, DWORD PTR _ppv$[ebp]
	xor	ebx, ebx
	cmp	eax, ebx
	jne	SHORT $LN7@CreateInst@3

; 1791 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H

; 1817 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN7@CreateInst@3:

; 1792 : 		*ppv = NULL;
; 1793 : 
; 1794 : 		HRESULT hRes = E_OUTOFMEMORY;

	mov	edi, -2147024882			; 8007000eH

; 1795 : 		T1* p = NULL;
; 1796 : #pragma warning(push)
; 1797 : #pragma warning(disable: 6014)
; 1798 : 		/* prefast noise VSW 489981 */
; 1799 : 		ATLTRY(p = new T1(pv))

	push	40					; 00000028H
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR _hRes$[ebp], edi
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	cmp	eax, ebx
	je	SHORT $LN10@CreateInst@3
	mov	DWORD PTR [eax+4], ebx
	xor	ecx, ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+24], ecx
	mov	DWORD PTR [eax+28], ecx
	mov	BYTE PTR [eax+32], bl
	mov	DWORD PTR [eax], OFFSET ??_7?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@6B@
	mov	esi, eax
	jmp	SHORT $LN11@CreateInst@3
$LN10@CreateInst@3:
	xor	esi, esi
$LN11@CreateInst@3:

; 1800 : #pragma warning(pop)
; 1801 : 		if (p != NULL)

	cmp	esi, ebx
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	je	SHORT $LN12@CreateInst@3

; 1802 : 		{
; 1803 : 			p->SetVoid(pv);

	mov	eax, DWORD PTR _pv$[ebp]

; 1804 : 			p->InternalFinalConstructAddRef();
; 1805 : 			hRes = p->_AtlInitialConstruct();

	lea	edi, DWORD PTR [esi+8]
	mov	ecx, edi
	mov	DWORD PTR [esi+36], eax
	call	?Init@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Init
	cmp	eax, ebx
	jl	SHORT $LN39@CreateInst@3
	mov	BYTE PTR [edi+24], 1
$LN39@CreateInst@3:

; 1806 : 			if (SUCCEEDED(hRes))

	cmp	eax, ebx
	mov	edi, eax

; 1807 : 				hRes = p->FinalConstruct();
; 1808 : 			if (SUCCEEDED(hRes))
; 1809 : 				hRes = p->_AtlFinalConstruct();
; 1810 : 			p->InternalFinalConstructRelease();
; 1811 : 			if (hRes == S_OK)

	jl	SHORT $LN76@CreateInst@3

; 1812 : 				hRes = p->QueryInterface(riid, ppv);

	mov	edx, DWORD PTR _ppv$[ebp]
	mov	eax, DWORD PTR _riid$[ebp]
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx]
	push	edx
	push	eax
	push	esi
	call	ecx
	mov	edi, eax

; 1813 : 			if (hRes != S_OK)

	cmp	edi, ebx
	je	SHORT $LN12@CreateInst@3
$LN76@CreateInst@3:

; 1814 : 				delete p;

	lea	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+4], -1073741823		; c0000001H
	mov	DWORD PTR [esi], OFFSET ??_7CComClassFactory@ATL@@6B@
	cmp	BYTE PTR [eax+24], bl
	je	SHORT $LN69@CreateInst@3
	push	eax
	mov	BYTE PTR [eax+24], bl
	call	DWORD PTR __imp__DeleteCriticalSection@4
$LN69@CreateInst@3:
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	jmp	SHORT $LN12@CreateInst@3
__catch$?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z$0:

; 1795 : 		T1* p = NULL;
; 1796 : #pragma warning(push)
; 1797 : #pragma warning(disable: 6014)
; 1798 : 		/* prefast noise VSW 489981 */
; 1799 : 		ATLTRY(p = new T1(pv))

	mov	ecx, DWORD PTR _e$124637[ebp]
	call	?Delete@CException@@QAEXXZ		; CException::Delete
	mov	eax, $LN78@CreateInst@3
	ret	0
$LN78@CreateInst@3:

; 1814 : 				delete p;

	mov	edi, DWORD PTR _hRes$[ebp]
$LN12@CreateInst@3:

; 1815 : 		}
; 1816 : 		return hRes;

	mov	eax, edi

; 1817 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ENDP ; ATL::CComCreator<ATL::CComObjectCached<ATL::CComClassFactory> >::CreateInstance
PUBLIC	?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ; ATL::CComCreator<ATL::CComObject<CSmartTrackerClass> >::CreateInstance
;	COMDAT xdata$x
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlbase.h
xdata$x	SEGMENT
__catchsym$?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z$2 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0ffffffe8H
	DD	FLAT:__catch$?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z$0
__unwindtable$?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z$2
__ehfuncinfo$?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
	DD	01H
	DD	FLAT:__tryblocktable$?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File f:\program files\microsoft visual studio 8\vc\atlmfc\include\atlcom.h
xdata$x	ENDS
;	COMDAT ?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_e$124739 = -24						; size = 4
_hRes$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_pv$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z PROC ; ATL::CComCreator<ATL::CComObject<CSmartTrackerClass> >::CreateInstance, COMDAT

; 1788 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 1789 : 		ATLASSERT(ppv != NULL);
; 1790 : 		if (ppv == NULL)

	mov	eax, DWORD PTR _ppv$[ebp]
	test	eax, eax
	jne	SHORT $LN7@CreateInst@4

; 1791 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H

; 1817 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN7@CreateInst@4:

; 1792 : 		*ppv = NULL;
; 1793 : 
; 1794 : 		HRESULT hRes = E_OUTOFMEMORY;

	mov	edi, -2147024882			; 8007000eH

; 1795 : 		T1* p = NULL;
; 1796 : #pragma warning(push)
; 1797 : #pragma warning(disable: 6014)
; 1798 : 		/* prefast noise VSW 489981 */
; 1799 : 		ATLTRY(p = new T1(pv))

	push	1148					; 0000047cH
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR _hRes$[ebp], edi
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $LN10@CreateInst@4
	mov	ecx, esi
	call	??0CSmartTrackerClass@@QAE@XZ		; CSmartTrackerClass::CSmartTrackerClass
	mov	DWORD PTR [esi], OFFSET ??_7?$CComObject@VCSmartTrackerClass@@@ATL@@6BITracker4@@@
	mov	DWORD PTR [esi+4], OFFSET ??_7?$CComObject@VCSmartTrackerClass@@@ATL@@6BISySalObject2@@@
	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	jmp	SHORT $LN11@CreateInst@4
$LN10@CreateInst@4:
	xor	esi, esi
$LN11@CreateInst@4:

; 1800 : #pragma warning(pop)
; 1801 : 		if (p != NULL)

	test	esi, esi
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	je	SHORT $LN12@CreateInst@4

; 1802 : 		{
; 1803 : 			p->SetVoid(pv);
; 1804 : 			p->InternalFinalConstructAddRef();

	lea	ebx, DWORD PTR [esi+8]
	push	ebx
	call	DWORD PTR __imp__InterlockedIncrement@4

; 1805 : 			hRes = p->_AtlInitialConstruct();

	lea	edi, DWORD PTR [esi+12]
	mov	ecx, edi
	call	?Init@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Init
	test	eax, eax
	jl	SHORT $LN33@CreateInst@4
	mov	BYTE PTR [edi+24], 1
$LN33@CreateInst@4:

; 1806 : 			if (SUCCEEDED(hRes))

	test	eax, eax
	mov	edi, eax
	jl	SHORT $LN3@CreateInst@4

; 1807 : 				hRes = p->FinalConstruct();
; 1808 : 			if (SUCCEEDED(hRes))
; 1809 : 				hRes = p->_AtlFinalConstruct();

	xor	edi, edi
$LN3@CreateInst@4:

; 1810 : 			p->InternalFinalConstructRelease();

	push	ebx
	call	DWORD PTR __imp__InterlockedDecrement@4

; 1811 : 			if (hRes == S_OK)

	test	edi, edi
	jne	SHORT $LN47@CreateInst@4

; 1812 : 				hRes = p->QueryInterface(riid, ppv);

	mov	ecx, DWORD PTR _ppv$[ebp]
	mov	edx, DWORD PTR _riid$[ebp]
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax]
	push	ecx
	push	edx
	push	esi
	call	eax
	mov	edi, eax

; 1813 : 			if (hRes != S_OK)

	test	edi, edi
	je	SHORT $LN12@CreateInst@4
$LN47@CreateInst@4:

; 1814 : 				delete p;

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+68]
	push	1
	mov	ecx, esi
	call	eax
	jmp	SHORT $LN12@CreateInst@4
__catch$?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z$0:

; 1795 : 		T1* p = NULL;
; 1796 : #pragma warning(push)
; 1797 : #pragma warning(disable: 6014)
; 1798 : 		/* prefast noise VSW 489981 */
; 1799 : 		ATLTRY(p = new T1(pv))

	mov	ecx, DWORD PTR _e$124739[ebp]
	call	?Delete@CException@@QAEXXZ		; CException::Delete
	mov	eax, $LN49@CreateInst@4
	ret	0
$LN49@CreateInst@4:

; 1814 : 				delete p;

	mov	edi, DWORD PTR _hRes$[ebp]
$LN12@CreateInst@4:

; 1815 : 		}
; 1816 : 		return hRes;

	mov	eax, edi

; 1817 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ENDP ; ATL::CComCreator<ATL::CComObject<CSmartTrackerClass> >::CreateInstance
; Function compile flags: /Ogtpy
;	COMDAT ?CreateInstance@?$CComCreator2@V?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@V?$CComFailCreator@$0?HPPLPOPA@@2@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_pv$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?CreateInstance@?$CComCreator2@V?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@V?$CComFailCreator@$0?HPPLPOPA@@2@@ATL@@SGJPAXABU_GUID@@PAPAX@Z PROC ; ATL::CComCreator2<ATL::CComCreator<ATL::CComObject<CSmartTrackerClass> >,ATL::CComFailCreator<-2147221232> >::CreateInstance, COMDAT

; 1876 : 		ATLASSERT(ppv != NULL);
; 1877 : 
; 1878 : 		return (pv == NULL) ? 
; 1879 : 			T1::CreateInstance(NULL, riid, ppv) : 
; 1880 : 			T2::CreateInstance(pv, riid, ppv);

	cmp	DWORD PTR _pv$[esp-4], 0
	jne	SHORT $LN3@CreateInst@5
	mov	DWORD PTR _pv$[esp-4], 0
	jmp	?CreateInstance@?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ; ATL::CComCreator<ATL::CComObject<CSmartTrackerClass> >::CreateInstance
$LN3@CreateInst@5:
	mov	eax, DWORD PTR _ppv$[esp-4]
	test	eax, eax
	jne	SHORT $LN5@CreateInst@5
	mov	eax, -2147467261			; 80004003H

; 1881 : 	}

	ret	12					; 0000000cH

; 1876 : 		ATLASSERT(ppv != NULL);
; 1877 : 
; 1878 : 		return (pv == NULL) ? 
; 1879 : 			T1::CreateInstance(NULL, riid, ppv) : 
; 1880 : 			T2::CreateInstance(pv, riid, ppv);

$LN5@CreateInst@5:
	mov	DWORD PTR [eax], 0
	mov	eax, -2147221232			; 80040110H

; 1881 : 	}

	ret	12					; 0000000cH
?CreateInstance@?$CComCreator2@V?$CComCreator@V?$CComObject@VCSmartTrackerClass@@@ATL@@@ATL@@V?$CComFailCreator@$0?HPPLPOPA@@2@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ENDP ; ATL::CComCreator2<ATL::CComCreator<ATL::CComObject<CSmartTrackerClass> >,ATL::CComFailCreator<-2147221232> >::CreateInstance
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtpy
; File d:\sysal2\smarttracker8.6\smarttracker8.cpp
;	COMDAT ??__E_Module@@YAXXZ
text$yc	SEGMENT
??__E_Module@@YAXXZ PROC				; `dynamic initializer for '_Module'', COMDAT

; 16   : CComModule _Module;

	mov	ecx, OFFSET ?_Module@@3VCComModule@ATL@@A ; _Module
	call	??0CComModule@ATL@@QAE@XZ		; ATL::CComModule::CComModule
	push	OFFSET ??__F_Module@@YAXXZ		; `dynamic atexit destructor for '_Module''
	call	_atexit
	pop	ecx
	ret	0
??__E_Module@@YAXXZ ENDP				; `dynamic initializer for '_Module''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__EtheApp@@YAXXZ
text$yc	SEGMENT
??__EtheApp@@YAXXZ PROC					; `dynamic initializer for 'theApp'', COMDAT

; 48   : CSmartTrackerApp theApp;

	push	0
	mov	ecx, OFFSET ?theApp@@3VCSmartTrackerApp@@A ; theApp
	call	??0CWinApp@@QAE@PBD@Z			; CWinApp::CWinApp
	push	OFFSET ??__FtheApp@@YAXXZ		; `dynamic atexit destructor for 'theApp''
	mov	DWORD PTR ?theApp@@3VCSmartTrackerApp@@A, OFFSET ??_7CSmartTrackerApp@@6B@
	call	_atexit
	pop	ecx
	ret	0
??__EtheApp@@YAXXZ ENDP					; `dynamic initializer for 'theApp''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__FtheApp@@YAXXZ
text$yd	SEGMENT
??__FtheApp@@YAXXZ PROC					; `dynamic atexit destructor for 'theApp'', COMDAT
	mov	ecx, OFFSET ?theApp@@3VCSmartTrackerApp@@A ; theApp
	jmp	??1CWinApp@@UAE@XZ			; CWinApp::~CWinApp
??__FtheApp@@YAXXZ ENDP					; `dynamic atexit destructor for 'theApp''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__F_Module@@YAXXZ
text$yd	SEGMENT
??__F_Module@@YAXXZ PROC				; `dynamic atexit destructor for '_Module'', COMDAT
	cmp	DWORD PTR ?_Module@@3VCComModule@ATL@@A+4, 0
	mov	DWORD PTR ?_Module@@3VCComModule@ATL@@A, OFFSET ??_7CComModule@ATL@@6B@
	je	SHORT $LN15@dynamic
	cmp	DWORD PTR ?_Module@@3VCComModule@ATL@@A+12, 0
	je	SHORT $LN13@dynamic
	push	OFFSET ?_Module@@3VCComModule@ATL@@A+4
	call	DWORD PTR __imp__AtlCallTermFunc@4
	mov	DWORD PTR ?_Module@@3VCComModule@ATL@@A+12, 0
$LN13@dynamic:
	mov	eax, DWORD PTR ?_Module@@3VCComModule@ATL@@A+40
	test	eax, eax
	je	SHORT $LN12@dynamic
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN12@dynamic:
	push	OFFSET ?_Module@@3VCComModule@ATL@@A+16
	call	DWORD PTR __imp__DeleteCriticalSection@4
	mov	DWORD PTR ?_Module@@3VCComModule@ATL@@A+4, 0
$LN15@dynamic:
	ret	0
??__F_Module@@YAXXZ ENDP				; `dynamic atexit destructor for '_Module''
text$yd	ENDS
PUBLIC	?theApp@@3VCSmartTrackerApp@@A			; theApp
PUBLIC	?_Module@@3VCComModule@ATL@@A			; _Module
_BSS	SEGMENT
?theApp@@3VCSmartTrackerApp@@A DB 0a4H DUP (?)		; theApp
?_Module@@3VCComModule@ATL@@A DB 030H DUP (?)		; _Module
_BSS	ENDS
CRT$XCU	SEGMENT
__Module$initializer$ DD FLAT:??__E_Module@@YAXXZ
_theApp$initializer$ DD FLAT:??__EtheApp@@YAXXZ
CRT$XCU	ENDS
END
